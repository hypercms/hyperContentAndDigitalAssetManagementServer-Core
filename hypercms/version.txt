gVersion History of the hyper Content & Digital Asset Management Server

General Notes:
The final release is based on the Enterprise Edition.
The Free Edition is a reduced Version of the Standard and Enterprise Edition.
The release date of the Free Edition can be earlier than the listed month and year.


Version 1.0.x
Release 11/2001 - 05/2002
- Finished base CMS features including WYSIWYG interface
- XML based repository
- User and role management
- Basic link management
- Media database

Version 2.0.x
Release 05/2002 - 03/2003
- Personalization
- Task management
- New GUI that includes the toolbar in control frame
- Link management
- Support for cut/copy/paste of objects
- Search functionality
- Site management

Version 3.0.x
Release 03/2003 - 06/2003
- Improvements in personalization integrated in GUI
- Complete new template engine with new tag-set and tag wizard
- New XML schemas
- Implementation of the hyperCMS API
- Better application integration due to new template engine (hidden elements)
- Improvements in link management
- Un/publish and delete all objects in a folder
- Workflow management
- New administration GUI of sites, users and groups
- Cluster operation
- New repository structure
- Check in/out of objects
- WebDAV support
- DB Connectivity
- Improvements in search engine
- New features in WYSIWYG rich text editor
- Support of staging due to the implementation of publication target definitions

Version 4.0.x
Release 07/2003 - 10/2003
- New hyperCMS Dashboard in WinXP look
- EasyEdit mode allows browsing through site and editing content
- Un/publishing of folders and all their objects
- Cut/copy/paste folders and all their objects
- Workflow items can be assigned to users or usergroups
- (4.0.4) Tamino XML database can be used as integrated search engine
- (4.0.6) Implementation of checked out items

Version 4.1.0
Release 11/2003
- System configurations are stored in an array
- hyperCMS Event System for automatization based on system events
- Changes in hyperCMS API
- Support for JSP, ASP, HTML/XML/Plain Text Files

Version 4.2.0
Release 12/2003
- New icons and improvements in the template engine with support of editing multiple components directly in EasyEdit, article butto is now using a clock icon
- Support of PRE amd POST events in hyperCMS Event System
- Bug fix for double entries for usergroups when creating the same group several times

Version 4.3.x
Release 01/2004 - 02/2004
- New inheritance settings (for components and also templates)
- Improvements in template engine
- Improvements and changes in workflow management
- New navigation tree supports incremental generation of subtrees (faster)
- Wallpapers for navigation tree have been removed
- Multiple components are not restricted by string length of an URL (GET-method)
- Memory function for page and component linking (last visited location in page and component folder structure will be remembered)
- Improved publication management (user will see publication without relogin)

Version 4.4.x
Release 03/2004 - 01/2007
- New features in publishing of objects. Connected objects in the same publication will be published automatically, if one object will be published or unpublished. Also pages without dynamic component linking will be automatically republished after a used component will be published. 
- Extended support for editing XML-objects with EasyEdit
- Switch from WYSIWYG to form view for editing content
- Separated APIs for filesystem (virtual server) and Tamino (server)
- Cut, copy and paste of objects between several publications (server version only)
- New feature "Journey through Time" that allows a visit of the website in the past
- Changes in the Database Connectivity when writing data to external data sources 
- Changes in the Tamino Database Connectivity due to a Tamino bug concerning writing
  XML documents in Tamino (Tamino cannot determine the character set!)
- Changes and improvments in the database connectivity and event system
- Advanced support for other browser 
- Image gallery view

Version 4.5.x
Release 04/2007 - 08/2007
- Automatically uncompress uploaded files

Version 5.0.0
Release 09/2007
- DAM functionality (former media database does not exist anymore, new architecture based on multimedia components)
- Upload and index content from documents
- Upload and thumbnail generation for images, PDF-docs
- Preview of uploaded videos using streaming technology (FLV-Format)
- New meta data templates for folders and multmedia objects
- Multimedia components/objects are stored in the component structure and replaces the old media database 
- Integration of RDBMS for search functionality (MySQL)
- Detailed search on the basis of template text-fields

Version 5.1.0
Release 03/2008
- Multiple selection of items in object lists holding control key or shift key and mouse click
- Permisson settings for all desktop entries
- Permission settings for mail-link to components and pages

Version 5.2.x
Release 04/2008 - 09/2008
- History of all recipients of sent objects
- Report of recipients in object info
- Context menu for user administration
- Send link to multiple users and to group members

Version 5.3.x
Release 10/2008 - 08/2010
- Upload of multiple files at once and upload progress bar (Flash plugin required)
- New SWFUpload for Flash Player 10 support
- Remoteclient support
- Multiple storage device support (configuration in config.inc.php)
- zip-compression of files on server side
- Download of multiple files using temporary zip-compressed file
- zip-extraction of zip-files contents on server side
- Sending multiple files links via e-mail
- Sending multiple files as attachment via e-mail
- New content repository structure (new sublevel for 10.000 blocks)
- Fixed problem: Multimedia components from other publications had the wrong publication
- New media player
- Media/video rendering based on user settings saved in a media player config file
- Media/image rendering in size during upload of new image files and manipulation of size and format of existing image files
- WebDAV support for multimeda files
- Integration of ODBC besides mySQL in DB Connectivity

Version 5.4.x
Release 09/2010 - 06/2012
- Publishing queue for time management
- Import and export of content via import/export directory
- Bug fixes in checkin
- Autosave function for content
- Expand and collapse of content controls
- Individual video resolution for FLV video rendering
- Support for content indexing of word 2007 (docx), powerpoint (ppt, pptx)
- Db_connect function rdbms_setconent will encode texte to UTF-8, table textnodes will provide a search index in UTF-8
- Search from for RDBMS is therefore also UTF-8 encoded
- New crop images feature 
- Minor bug fixes
- Improved send link form (including user search and tabs)
- New CKeditor as rich text editor integrated to suppoprt Google Chrome and Safari
- Redesign of GUI incl. shadow effects
- hashcode for users for webdav support
- Access to (nested) folders can be excluded via folder access defined in groups
- Improved export/import incl. link transformation in text content nodes
- Added new function in db_connect 
- Added new functions in hypercms_api

Version 5.5.x
Release 07/2012 - 02/2013
- Getconnectedobjects function works with contentobjects of the given container and without link management database (faster)
- Full WebDAV support for multimedia components
- Support of special characters in object and folder names
- New html5 video player with flash fallback
- Integration of videos in rich text editor
- Prepare for PHP 5.3 regarding deprecated register_globals and eregi_replace support 
- Improved and fixed contextmenu
- Paging in objectlist explorer
- Load publication config in hyperCMS and not via main config
- Meta data keyword and description generator in API
- Secure token used to save content
- Modernized JS code for form and elements access
- Document viewer based on Google service
- Language settings support, new hypercms-tag for language
- Link management database will not be managed if link management is disabled
- Improved security by killing the users session if a permission is missing
- Text diff of content versions
- Explorer object list with new views (large, medium, small thumbnails and details)
- New download-events in event system
- Daily statistics of file access (new table dailystat)
- Secure password option to prevent users from using simple passwords
- Logging and locking of client IP on logon (10 failed attempts lead to banning of the IP)
- Video converter extended to support the follwing formats: Flv, mp4, ogg, webm
- Different video player configs for each formats in new popup
- Indexing of Excel (xlsx) files and Open Office Text files
- File based search support removed, search is only supported if a database is in use
- Meta data of images will be indexed automatically and not by call in event systems. the mapping file can be found in /data/config
- Inline editing in easyedit mode (need to be activated in config.inc.php)
- Document converter based on UNOCONV
- Image rotation for original images
- Media file attributes (file size, with, height, image colors, image color key, image 6type) are saved in media table (requires database)
- Images search (image size, image main color, image type)
- New image brigthness and contrast setting and preview before saving the image
- Bugfix in API function "manipulateobject" when link management is turned off and copy & paset is used
- Search based on content in file explorers (insert link and media)
- New functions for reading request parameters
- Accumulated access statistics and file size statistics for folders
- Case-insensitive xml parser functions in API (not used)
- Meta data mapping can be freely defined using mapping in tree navigation 'meta data templates'
- Editing permission for content based on group names (new 'groups' attribute in hyperCMS tags)
- Advanced search for object-id and container-id
- Bug fix: Media and image rendering buttons can only be seen if localpermission is set
- Task management included in send mail-link as option
- New hyperCMS date tag to support date picker
- CSRF protection: Maximum request per minute and per session
- Video cut based on video time stamps
- Improved security by removing the container name in GET requests

Version 5.5.9
Release 03/2013
- Several bug fixes in the template engine (component preview was not working in some cases, links were not transformed after 'showinlineeditor').
- js-code for video in inline editing mode was escaped like the rest of script-code after saving.
- Bug fix in object list when ctrl-key selection was used on objects where one name was the substring of the other name.
- Several changes in language files.
- Bug fix in media explorer when going back to root element.
- Bug fix in character encoding when html code was allowed in unformatted text areas.
- Check of 'localpermission' on the level of content control and not only on actions level if DAM is enabled.
- Permission problem with view of inherited objects.
- Bug fix for copy & paste of multimedia objects (media attributes were not copied/created in the database).

Version 5.5.10
Release 03/2013
- Bug fix in user form, two message layers were shown.
- Changes in language files.
- Bug fix in editorf. content-type was JS-escaped which caused charset problem in IE (IE used default charset).
- Bug fix in template engine. html & body tag was included in preview of components which were included in pages.
- Bug fix in file upload. error message for file names exceeding the max. digits value was not shown.
- Removing js-code and form code from formlock-view in template engine.
- New security token in user, group, workflow, personalization, and template management.
- Removing and escaping of html/JS code in meta data template preview.

Version 5.5.11
Release 03/2013
- Bug fix in 'convertlink'. wrong array key for the publication configuration.
- Remove direct link from object info if DAM only usage is activated.
- Remove task if object does not exist anymore.
- Bug fix in 'hcms_crypt'. the first 8 digits were used instead of the last 8 of a given string.
- Removed template upload functionality.
- New security token concept with a general token for all actions instead of individual tokens.
- New hypercms-tag providing comment functionality for pages and components.
- Upload files directly in the component explorer.
- Search engine provides default search in meta data and object names (search restriction 'only object names' can still be used).
- Live view of files including javascript code is disabled.
- Bug fix in object list when ctrl-key selection was used on objects. when selecting, deselecting and selecting the same object an empty entry was left in 'multipbject'.

Version 5.5.12
Release 04/2013
- Super admin can be set in main user administration
- Loadlockfile supports unlocking of files locked by other users after a given number of seconds
- Bug fix in 'workflowaccept' and 'workflowreject'. the query did not include the combination of publication and group membership in the memberof-node.
- Bug fix in user objectlist. the query did not include the combination of publication and group membership in the memberof-node.
- Bug fix in userlogin. the session was not destroyed if user was not logged in.
- Bug fix in explorer_wrapper. only script-tags were checked for preview in DAM, which still leads to security issues if JS is used in an uploaded file.
- Default link-type in user_sendlink is the download link.
- User have to submit their old password to change the password. User administrators with permissions to edit users can change the password of other users without providing the old password.
- Publishing and workflow can be applied on multimedia components
- Bug fix in editgroup (some desktop permissions arrary keys were not correct)

Version 5.5.13
Release 05/2013
- Separation of API (hypercms_api.inc.php) and UI elements (hypercms_UI.inc.php)
- Bug fix in rdbms_searchcontent (db_connect). The SQL syntax used an inner join to the search in textnodes and object names. the search in textnodes and object names uses OR operator.
- Send mail-links including lifetime / period of validity: Time token can be used in access-, download- And wrapper-links.
- Bug fix: Container in content version and buildview was missing
- Improvements in RDBMS connectivity. new attribute filetype in table media to avoid the use of lame mySQL string function.
- New function getvideoinfo in hyperCMS API

Version 5.5.14
Release 05/2013
- New search in top frame for search over all objects of all publications
- New loading bar image
- Remove file size in info-tab of pages and page folders
- Send mail link to object directly from control_content_menu
- New video player code based on iframe and several new
- Calculation of file size and number in rdbms_getfilesize, new function getfilesize in hyperCMS API
- Limited packing of source files in a zip files based on the source file size (see config.inc.php)
- Bug fix: Search for user files didn't work due to missing parameter and missing check of action parameter
- Bug fix: Icon of checked out items are not grey

Version 5.6.0
Release 07/2013
- Themes for hyperCMS GUI
- Video screen capture (thumbnail jpeg)
- Document preview based on PDF reader plugin of browsers (Google docs service for older browser still in use)
- Several changes in CSS classes
- Mobile client for content editing
- Bug fix: Infotype=meta was not set if used in hyperCMS Tag Wizard
- Bug fix: Body end tag to component views was not added in template engine
- Error message for zip-file downloads larger than max. zip-size
- IPTC meta data injector for image files
- Alert message when functions in the objectlist control are blocked by the search window
- New HTML5 multi file upload with drag & drop support, SWFUpload as fallback
- Component strcuture was renamed to Asset structure
- Filters for file-types in object list
- Bug-fix: Updating files (change of the file extension) with special characters in their file name resulted into wrong names
- Media viewer based on jquery plugin (images carousel and zoom)
- If download link exceeds limit an access to the system will be provided using a default user
- Bug fix: Status popup window didn't close automatically
- Bug fix: Problems with tabs and z-index in IE
- Bug fix: Encoding problem in text area of video embed code in IE

Version 5.6.1
Release 07/2013
- Download of predefined image sizes and formats (defined in config.inc.php)
- User interface for license notification configuration
- Shortened access/download/wrapper-links and URL-forward in index.php
- No folders in list view in mobile edition
- Support of mail-links to open mobile edition

Version 5.6.2
Release 07/2013
- Bug fix: File upload in component explorer was using the old file name for the uploader
- Show meta information (EXIF, IPTC, XMP) in info-tab
- Size of media files in 72 dpi and 300 dpi resolution is shown by showmedia
- New unique and secure hash codes for link access. encryption is not used anymore to create access/download/wrapper links.
- Bug-fix: Imagemagick removed metadata from files, metadata will be restored by EXIFTOOL
- Write XMP data to files using EXIFTOOL
- Web2print
- Bug fix: Clipboard was set to false on cut/copyobject, only one object was copied if more where selected
- New parameter in buildview to execute the script code in templates
- Public download setting enables/disables download and wrapper links in info-tab, if disabled only mail-links (access/dwonload) can be used
- Bug fix: view/download buttons in search_objectlist had wrong style-class
- Bug fix: general search when access via mail-link was not working due to error in framest_objectlist
- Unpublished objects are greyed out, locked objects use the locked icon
- Create all videos for video player at once
- New media and image rendering layout with overlapping menu
- Plugin system
- Bug fix: Function zipfiles used echo and caused bad download
- Function settext saves multimedia files saved by editor in the link index
- Link editing: Preview of the selected page
- Licensenotfication supports different date formats (same as date picker textd)
- Sender of mail-links will be stored in table recipients

Version 5.6.3
Release 08/2013
- Table recipients includes sender information (user name) and date includes time as well
- Bug fix: Copy & paste of images didn't include all video formats and the video config file
- New variable %hcms% for the URL of hyperCMS, used for video embedding in editor
- New function convertimage as wrapper for createmedia. useful to convert images to other color spaces for PDF-rendering
- Sendlink setting in publication enables and disables the sendlink function as well
- Bug fix: video player didn't play video, explorer_wrapper optimization for the streaming of videos
- Converting images for tcpdf to greyscale, CMYK color space
- Flip/flop images vertically and horizontally, add effects (sharpen, greyscale, sepia-tone, sketch, monochrome) to images, change colorspace (RGB, CMYK, Gray) using imagemagick
- Bug fix: Using non UTF-8 charsets, the special characters in the form view are not properly escaped for links-texts and media-alttexts. convertchars is used in link_edit_page and medie_edit_page
- Allowed IP addresses for media access can be defined in publication settings
- Theme can be defined in publication settings (global in config.inc.php, publication scope in publication config, user scope in user setting)
- Bug fix: In createmedia, the buffer file was created for thumbnails if the thumbnail file didn't exist.
- Access statistics show total hits and filesize
- Bug fix: Manipulateobject could not delete files when link-DB was deactivated ($allow_delete = true;) 
- Use alt-key to switch to download links in object lists
- New windows have the container id of their object
- New info box for hints regarding the system usage, see function showinfobox
- Generate Google sitemap with function getgooglesitemap
- OpenSEARCH implementation
- Bug fix for audio-files
- Bug fix: zipfiles didn't check access permissions of user
- Bug fix: Download of files using alt-key didn't ceck access permissions of use

Version 5.6.4
Release 11/2013
- Geo location in access statistics
- New onaccess event to analyze download, wrapper and access link requests
- Gallery view component template
- 360 image view component template
- Publish videos to youtube
- OpenAPI (Webservice for executing functions, like: Create/edit/delete of users/folders/objects and file upload/download)
- Notification alerts to logged in user based on folder settings and events

Version 5.6.5
Release 02/2014
- Edit several selected objects
- DropBox integration, see: https://www.dropbox.com/developers/dropins
- Publish videos, images, text to facebook (using Facebook SDK)
- Object and folder names are trimed on create and rename
- Check for duplicate entries on file upload using MD5 hash of files
- Geo location of files (images) and search based on map with dragable selection
- Create individual videos (new size wxh file extension instead of thumb)
- Import/export GUI
- Bug fix: rdbms_searchcontent ignored text_id in advanced search
- Bug fix: rdbms_getmedia used wrong refered for SQL-query
- Bug fix: Editing of multiple objects didn't include checking constraints of unformatted fields
- Bug fix: Popups of template_edit submitted forms instead of only calling a js-function(input type of button was "submit") which lead to logout
- Bug fix: Create hidden folders was not performed when super admin logged in
- Bug fix: Check of hidden folders looked in the whole file system path and not only in the root given by the publication (this led to hidden folders that should be visible)
- Bug fix: rdbms_createobject fired before successful creation of a new object file (this led to duplicates of same object in DB)

Version 5.6.6
Release 03/2014
- Versioning of media files
- Bug fix: Injectmetadata (CDATA was missing)
- CKEditor version 4.3.3 implemented (support of DIV and IFRAME, support for IE 11)
- Versioning of media files when using workplace integration (WebDAV) to edit and save files (content versioning need to be enabled)
- Relocation of config.inc.php to config directory
- Install procedure for easy installation

Version 5.6.7
Release 05/2014
- Code improvement (undeclared variables, PHP global in function input)
- Bug fix: rdbms_getdailystat did compare datetime with time (convert datime to time)
- Bug fix: Duplicate names were not converted to readbale names
- Bug fix: Single file upload produces error message about the same file existing already
- Change in createthumbnail_indesign to create a valid thumbnail (use last thumbnail of indesign file)
- Bug fix: Set unset variables (error notices for unset variables in php log)
- Bug fix: Media category could not be deleted
- Bug fix: The encoding in containers was not set to UTF-8 on media files and folders
- Bug fix: Advanced search didn't get the ownergroup and could therefore not check the content access permissions (attribute groups for hyperCMS tags)
- Bug fix: Search for image size range did include the given width as additional SQL where clause and led to wrong search results
- Bug fix: name of variable was not correct in WebDAV function deleteGlobal

Version 5.6.8
Release 07/2014
- Bug fix: The content of date fields was always converted to the international date format, this led to a wrong format after loading the container
- Bug fix: %comp% was not converted to the component URL in the template engine for single component when onEdit attribute was set to "hidden"
- Bug fix: %comp% was not converted to the right publication or management component URL depending on the view in the template engine for components when onEdit attribute was set to "hidden"
- Bug fix: Selector layer for download on mobile devices was not properly positioned
- Bug fix: Download of files on iphone is not supported, mime-type was changed to the actual mime-type of the file to show it in the browser
- Bug fix: getthemelocation used wrong session variable name, mobile CSS were not used
- Bug fix: Component_curr lead to too long request-URI when editing multiple components. the component_curr request variable was redundant and has been removed to solve the problem.
- Improvements in mobile CSS
- Bug fix: Empty inheritance database blocked createpublication
- Improvements of creating a unique token if a session_id is not available (session_id used for un/locking files)
- Implementation of installation process including search engine 
- Bug fix: Limit was not set in rdbms_searchcontent
- Bug fix: Template engine issue with language session variable
- Improvements in compare content versions, multimedia content from files will be compared as well as meta data (taken from content container)
- Separation of template includes (new expression) from page and component templates in the GUI
- Bug fix: Search_objectlist.php used wrong input parameter for function rdbms_searchcontent
- Bug fix: object name was missing in event log when removing objects 
- Bug fix: The template of folders (should be meta) was set to the wrong category
- Bug fix: Edittemplate did not trim the file extension which could lead to white spaces after the file name end that can hardly be recognized
- Edit and save text based content from template media files
- Bug fix: Edittemplate transformed &amp; not correctly to &
- Bug fix: Control frame has not been reloaded in easy edit mode 
- Bug fix: history buttons for next/previous navigation has been disabled for object and not for files
- Bug fix: Template_editor showed commentu and commentf for component and page templates but should only be used for metadata templates
- Bug fix: Downloadfile did not exit if file ressouce is missing
- Bug fix: User_edit did not check siteaccess permissions of the user
- Bug fix: Sort of sites in user_edit did not use natural case sort
- Bug fix: Settext did not check the link index properbly which led to wrong entries in error logs
- Bug fix: Undefined varibale hypercms_livelink_set in template engine
- Bug fix: Delete of media reference in media_edit_page did not work for IE
- Implementation of download/upload statistics of all DAM publications on home screen

Version 5.6.9
Release 08/2014
- New template variables for the external repository in template engine
- Tranformation of special characters in deconvertpath
- New checksum in user session file to verify permissions set in session
- Bug fix: getfileinfo did not set filename_only and published state for files without file extensions
- Bug fix: Wrong variable names led to undefined variables in createpublication
- Bug fix: Several undefined variables 
- Font of unformatted text remains unchanged when using inline editing (CSS optimization in showinlineeditor_head)
- Deletepublication removes files in external repository, page and component root folders
- New cleaning level management config setting to check and clean template code
- Bug fix: In thumbnail generation using the GD library since aspect ratio has not been preserved, different behaviour compared to resize parameter in ImageMagick
- Automatic resize of textarea in inline editing mode 
- Bug fix: Setmedia replaced publication media path first, which led to wrong media reference since the ediot passes the full path incl. the domain
- Bug fix: Installation prozedure added two / instead of one if a subdirectory is used for the installation root
- Bug fix: Toolbar for editor in DAM mode could not be set
- Improvement in function scriptcode_extract (removes comments in scriptcode)
- Install procedure migration to mysqli
- Removed trim from all load- And savefile functions since it led to bad behaviour when line break need to be preserved at file end
- Bug fix: Checkout objects did not support sidebar
- Bug fix: Error in function getconnectedobject which caused the creation of working containers for checked out objects (loadcontainer required user as global input)
- Changes in job for licensenotification, monthly: next month will be checked each 1st of the month, weekly: next week will be checked each sunday
- Support for DPI, colorspace, ICC profiles in formatted texts (textf-tag) and images (mediafile-tag)
- Bug fix: Error in call to js-function hcms_validateform in function showinlineeditor_head
- Bug fix: remove reseting of image size if scaling is used in CKEditor image-plugin
- Bug fix: Inline editing mode issue when onedit and onpublish attributes are used for the same hypercms tag

Version 5.6.10
Release 10/2014
- Improvements in plugin management
- New individual button in UI function showtopbar
- Bug fix: Function downloadfile called dailystat for each partial file download (only first partial download triggers dailystat)
- New Simple Statistics plugin (not part of standard software package)
- Bug fix: Exception for CSS and JS files in follow link (page_view)
- New Keyword Statistics plugin (not part of standard software package)
- Changed order of meta data extraction of files due to issue with Adobe XMP special characters, new order: EXIF, XMP, IPTC
- Bug fix: Function showtopbar did not show individual button
- Bug fix: Function downloadfile did not provide proper dailystat, if requested start bytes were not zero
- Bug fix: Page_multiedit didn't show label names defined in template and applied constraints on unformatted text fields even if they were disabled
- Implementation of multiple hyperCMS instances using different databases, internal and external repositories
- Implementation of instance manager GUI to manage multiple hyperCMS instances (as part of connector)
- Implementation of DB connect in multiedit
- Improvement in notification of user, if user is owner of an object no notification will be sent
- Bug fix: Missing check of globalpermission in explorer_objectlist
- Bug fix: Added removing of IPTC meta data using EXIFTOOL in function iptc_writefile before writing new IPTC data to file
- Bug fix: Function notifyusers used file owner and not current user to compare with the notified user
- Bug fix: new version of FFMPEG requires new option names (e.g. -b:v for the video bit rate instead of -b), options for FFMPEG have been changed in config.inc.php, media_rendering.php and function createmedia
- Bug fix: new version of FFMPEG does not support an audio sample rate of 44100 Hz for FLV files, changed default to 22050 Hz, options for FFMPEG have been changed in config.inc.php, media_rendering.php and function createmedia
- Bug fix: Deleteobjects did not remove individual video files with sub-file-extension .media
- Implementation of new function getoption for extracting values of a string holding options (used for image/audio/video options)
- Creating a thumbnail image on initial upload of a video file
- Bug fix: Function loadcontainer did not return the container information for versions of a content container
- Improvements in task management for broken links
- New theme namend colorful
- Bug fix: Download of other file formats than original did not work
- Bug fix: Undefined variables in several scripts
- Bug fix: Click on object shows wrong object in sidebar if sort has been applied
- Bug fix: Clicking on an object in gallery-view highlights wrong object if sort has been applied
- Improvements in all object list views
- Improvements in preview of object / sidebar
- Bug fix: Image brightness was set to -100 for image editing due to a wrong variable name
- Improvements in object lists regarding alignments of list/gallery items
- Creating new components when adding components to a page by the component explorer
- Securing all shell input parameters
- Support for video files with no configuration file in repository
- Bug fix: video cut was not able to process hours, minutes and seconds of one digit
- Several improvements in video editing including an infobox
- New home screen and home navigation item in navigator
- New boxes on home screen for recent tasks and recent objects of logged in user
- Improvements in mobile style sheets
- Bug fix: Function getfiletype searched for a substring in file extension definitions without a delimiter, this lead to wrong file-type in media table
- Bug fix: new function shellcmd_encode to solve tilde issue with function escapeshellcmd in various files
- Reorganization of functions in the hyperCMS API
- Implementation of new check permissions functions
- Bug fix: DB connect RDBMS did not provide hash keys for all search operations
- Bug fix: Permission issues in explorer for publishing queue, log-list and plugins
- Bug fix: Implementation of updated function getbrowserinfo (old function was outdated and did not detect the browsers correctly)
- Implementation of sort order for workflow folder form
- Bug fix: removed double sort from search result
- Bug fix: Search for user files in user management did not use proper frameset and resulted in an error on click on an object
- Bug fix: removed : From meta data listing if label is empty
- Bug fix: Checkadminpermission expected input parameter
- Set variable lang to "en" if no value is given
- Bug fix: Link_explorer of editor passed wrong input to function rdbms_searchcontent
- Improvements in DB connect RDBMS
- Bug fix: Scrolling in link and media explorer did not work due to changes in the CSS class
- Implementation of new function checkpublicationpermission
- Bug fix: Convert of formats did not work due to missing convert-type and convert-config inputs in context menu for checkout, queue and search object list
- Bug fix: Set min-height of fields to avoid collapsing of empty fields in version comparison
- Bug fix: The user edit permission for a specific publication was not checked properly and led to killsession

Version 5.7.0
Release 11/2014
- Implementation of user chat with object-link exchange
- New configuration setting for chat
- Integration of top in frameset_main and replacement of frames by iframes
- Implementation of logout on window close (not supported by all browsers)
- Bug fix: Charset declaration was missing in explorer
- Removed timeout.js from all controls and js-library
- Integration of chat in mobile edition
- Optimizations in main and contextmenu JS library
- Implementation of new settings for background and alpha when converting PDF to image (due to black background issue)
- Replacement of all framesets by iframes
- Bug fix: Error messages on group_access_form, worklfow_folder_form were not shown since object IDs and object paths were mixed up
- Implementation of resize function for group_access_explorer
- Bug fix: Search_explorer used wrong initial_dir for the component root
- Improvements in inline editing, dynamically adjust width and height of textarea after loading the inline element

Version 5.7.1
Release 12/2014
- New function processobjects replaces publishallobjects and can handle the actions 'publish', 'unpublish' and 'delete' to process queue entries
- New feature "delete from server" on upload of new files in order to remove them again on a certain date and time
- No resize of thumbnail if original image is smaller than defined thumbnail size
- Propagate all results from function createmediaobject to function uploadfile
- Function showmedia shows original thumbnail size if the thumbnail is smaller than the defined thumbnail size due to a small original image
- Improvement of information in main config
- Bug fix: When using the GD library instead of ImageMagick, the aspect ration of images have been changed when creating other formats
- Bug fix: Undefined variables in indexes in control_queue_menu and function manipulateobject
- Change personal theme in GUI immediately and not after next logon
- Removed statistics on home screen of mobile edition
- Bug fix: hyperCMS API used deprecated JS function hcms_openBrWindow
- Bug fix: Top-bar spacing issues in mobile edition 
- Replacing framesets by iframes in instance manager and import/export manager
- Define date and time to remove files from system on upload
- Set default language and lang variable in function userlogin
- Bug fix: relocation version information on home screen for better support of small mobile screen resolutions
- Bug fix: JS function hcms_showContextmenu did not disable icons for notfication and chat in context menu if no object has been selected
- Bug fix: Explorer_objectlist did hide notfication and chat completety in context menu if user has no permissions
- Improvements in hyperCMS UI document viewer regarding size of view
- Bug fix: Funtion getusersonline returned WebDAV users, these users are not able to chat and must not be returned#
- Fixed showmessage boxes positioning in GUI
- Rounded corners of showmessage boxes
- Improved design of context menu for all themes
- Removed mobile theme as an option in publication management
- Bug fix: The template engine did not include the publication configuration if the link management has been disabled, therefore component have not been included by function insertcomponent
- Bug fix: Access permission has not been when using the editor to select a media file. this led to issues with the video preview.
- If the provided thumbnail size of the main config is greater than the original video size the original video size will be used for video rendering
- Implementation of loading screen for file unzip
- Bug fix: Function deconvertlink removed host name from page links twice. this led to a miss-converted link since the host name has been cut of again without using the function cleandomain.

Version 5.7.2
Release 01/2015
- Encryption for content containers to secure data an server side
- New publication setting for container and media file encryption
- New function loadfile_header to load file partially in order to determine if fill is encrypted
- Removed Tamino support
- Removed all $_SERVER['PHP_SELF'] in all forms due to XSS
- Bug fix: Working content container could be checked out by several users
- Bug fix: Function loadcontainer restored working container if it was locked by another user
- Bug fix: CSS issue with chat in IE 8 and 9
- Function copymetadata has been removed from explorer_download and explorer_wrapper and has been integrated in function createdocument
- New functions encryptfile and decryptfile
- Watermarking for images and videos based on image and video options in the main config file
- Function createmedia supports gamma, sharpness, brightness, contrast and saturation for video editing 
- Bug fix: Impementation of binary-safe encryption and decryption to en/decrypt binary files
- Bug fix: Popup_action did not hide loading layer if an error occurred after unzip
- 2 new input parameters (object_id, objectpath) for function rdbms_getqeueentries
- Implementation of information regarding the auto-remove of files/objects in mail form, info tab of objects and sidebar object viewer
- Function getcontainername supports container ID or container name as input
- Improved implementations of functions hcms_encrypt and hcms_decrypt for standard and strong en/decryption
- Function showmedia provides additional information about owner, last published date and date of deletion
- Implementation of file caching to reduce I/O for action chains that would save data in each step
- Bug fix: Checked out file for user has not been created and deleted in function createuser and deleteuser
- Improvement of page_checkedout that creates checked out user file if it does not exist
- Using database media information as primary source for all media displays
- Bug fix: Sidebar on checkout objects list was not displayed properly
- Freegeoip.net stopped providing it's service, changed to API of ip-api.com
- Linkengine is automatically disabled in the publication management for DAM configurations
- Function showmedia support new type "preview_download", which only enables the download in media previews
- Videos can be downloaded and embedded in video editor as well
- Function getvideoinfo extracts audio information as well
- New column createdate in table container, change of column date in table container to type datetime (requires update script)
- Function rdbms_getmedia provides extended media information
- Function downloadfile supports new type "noheader" without any HTML headers tp provide file download for WebDAV
- Function image_getdata has been renamed to extractmetadata
- New function id3_getdata, id3_create and id3_writefile to support ID3 tags of audio files (e.g. mp files)
- Support for ID3 tags of audio files in mapping
- Support for thumbnails of audio files
- New input parameters for function getgooglesitemap to show or hide the frequency and priority tags
- Optimized database attributes

Version 5.7.3
Release 02/2015
- Add original video files of type MP4, WebM, OGG/OGV to source of HTML5 player
- Bug fix: Encryption level for file must be 'strong' in order to be binary-safe
- Bug fix: video start poster could not be defined if the original file was added as source to the HTML5 video player
- Update of HTML5 video player to video.js version 4.11.4
- Bug fix: Copy & paste not working, function manipulateobject did not set init-input for function savecontainer
- Function getcontentlocation adds missing zeros to container ID to correct the containers directory name
- Additional check if object exists when publishing it
- Improvements of several functions in hypercms_main
- Bug fix: In order to support older versions, the original source need to be added to the video player, not only in case of an existing config.orig file
- Function rdbms_getobject_hash supports also object ID and container ID as input
- Function createdownloadlink and createwrapperlink supports also object ID and container ID as input
- Change to MP4 format as the standard for video thumbnail files in function createmedia
- Link for the video start poster of the embed code will be converted to a wrapper link if publication is a DAM in order to have access to the image file
- Implementation of RAW image support for formats: Arw, cr2, crw, dcr, mrw, nef, orf, uyvy
- Bug fix: remove _original files from media repository created by EXIFTOOL
- Redesign of video player with big play button in center
- Bug fix: ok button of task list was not displayed properly
- Bug fix: Function publishobject did not set init for savecontainer to true
- Implementation of a new language management system
- Implementation of new languages. besides English and German the following languages for the UI are now supported: Albanian, Arabic, Bengali, Bulgarian, Chinese (simplified), Czech, Danish, Dutch, English, Finnish, French, German, Greek, Hebrew, Hindi, Hungarian, Indonesian, Italian, Japanese, Korean, Malay, Norwegian, Polish, Portuguese, Romanian, Russian, Serbian, Slovak, Slovenian, Spanish, Somali, Swedish, Thai, Turkish, Ukrainian, Urdu
- New help logic to set 'en' as default help/manual
- Implementation of function html_encode with multibyte character set support
- Bug fix: User_sendlink mixed up languages in e-mail message
- Implementation of new 'flat' design theme
- Minor changes in other design themes

Version 5.7.4
Release 03/2015
- Implementation of favorites feature (create and manage favorites)
- Function rdbms_getobject_id supports object path and hash as input
- Implementation of new functions createfavorite, getfavorites and deletefavorite
- New permission for favorites management
- Change of checked out button behaviour in control_content
- Implementation of new function getlockedobjects for checked out objects
- Removed file page_checkdout
- Implementation of natural case sort for function getlockedobjects and getfavorites
- New function getescapetext to HTML encode specific texts from the language files (needed when presentation uses other character set than the language file)
- Implementation of escapetext in template engine and UI instead of converting all texts of a language file
- Bug fix: html_encode was double encoding if ASCII was selected as encoding
- Bug fix: Content-type has not been set for various input forms
- Implementation of management of home boxes for each user on home screen
- Implementation of new function setboxex and getboxes
- Implementation of JS function hcms_switchSelector in main.js
- Implementation of new homeboxes for recent downloads and uploads of a user

Version 5.7.5
Release 03/2015
- Bug fix: Bulgarian language file used double quote in string
- Bug fix: html_encode used wrong variable name
- Implementation of media preview for select of multiple objects
- Select, edit/render and save multiple images and videos
- Implementation of new services renderimage and rendervideo replace old media rendering logic 
- Implementation of new service savecontent 
- Bug fix: richcalender language files needed to be converted to UTF-8
- Bug fix: Function manipultaobject did not check if both page states (published and unpublished) exists already in the same location on rename
- Bug fix: Undefined variable in function rdbms_getobject_id
- Bug fix: Text of JS prompt messages in template_edit was not html decoded
- Template editor supports include-, script-, workflow-tags for meta data templates
- Meta data templates for media files will be assigned to the application 'media'
- Implementation of hyperCMS scripts for multimedia objects
- Bug fix: Correct undefined characters in key names and eliminate double expressions in all language files
- New uploadfile service that replaces upload_multi
- Improvements in design themes (CSS)
- Implementation of transcoding for video files to audio files
- Implementation of a new hyperCMS connect API for FTP support
- Implementation of file download from FTP servers
- Implementation of new function is_date
- Implementation of date validation in function rdbms_createqueueentry
- Bug fix: Function getmimetype did not return proper mime-type for object/file versions
- Implementation of object versions support for function getfileinfo
- Bug fix: Diplay proper file icons in versions tab
- Bug fix: Pop_status failed to authorize the action when publishing the root folder of pages
- Update of TCPDF to version 6.2.6
- Implementation of download formats for download/access links and attachments
- Implementation of new function convertmedia (wrapper for createdocument and createmedia)
- Bug fix: Source location input parameter of function createimage was not verified
- Implementation of new functions is_document, is_image, is_rawimage, is_video, is_audio
- Bug fix: Function unlockfile, lockfile, savelockfile, loadlockfile used global variable user which overwrites the input variable
- Bug fix: Simple keywords plugin refered to old search objectlist location
- Implementation of new function createversion
- Support for versioning of thumbnail files
- Bug fix: Saving multiple media files was not working when media files are not of same type
- Implementation of delete for thumbnail file versions in function manipulateobject and version_content
- Implementation of video rotation and video flip for video editing
- Improvements in video editor layout
- Implementation of force_reload paramter for function showvideoplayer to force reloading the video sources
- New configuration parameter for default video and audio previev files (type = origthumb)
- Modifications of function createmedia to support new configuration parameters
- Implementation of new function deletemediafiles (deletes all derivates of a media ressource)

Version 5.7.6
Release 04/2015
- Implementation of new function checkworkflow in hypercms_main used by function buildworkflow
- Update of pdf viewer to version 1.0.1040
- Bug fix: Improved CSS definition using filter for hcmsInfoBox due to issues on home screen
- Bug fix: Select media in form view did not work due to missing evaluation of selectbox in JS function getSelectedOption
- Bug fix: Media_view did not validate form fields for width and height in control frame
- Bug fix: Function buildview of templateengine did reset tag variables for each tag found in the template
- Implementation of media object evaluation in media_edit_page and link object evaluation in link_edit_page
- Improvements in function setmedia by using function loadfile_fast for object loading
- Bug fix: Wrong content-type specification in version_template
- Update of HTML5 video player to video.js version 4.12.5
- Bug fix: Undefined variables in search_objectlist, hypercms_tplengine, db_connect_rdbms
- Implementation of new hypercms_tcpdf.class.php file with class hcmsPDF to extend standard TCPDF functionality
- Implementation of new function drawCropbox in class hcmsPDF
- Removed deprecated pdfsearch.class.php
- Bug fix: Explorer_download did not check original-type and tried to convert media
- Bug fix: When providing a colorspace or ICC-profile in media- Or textf-tags the images would have been converted multiple times, depending on the occurrence of the tag in the template
- Implementation of new hyperCMS tag attribute 'pathtype' for media tags to declare path as file system path, URL, absolute path (URL without protocol and domain)
- Implementation of new media functions mm2px, px2mm, inch2px, px2inch
- Improved function convertimage which supports new input parameters and rendering features
- Implementation of timeout in media_view to ensure the media size fields in the control frame will be updated
- Removed convert to intermediate BMP file in function createmedia to keep transparency of images
- Implementation of thumbnail support for file generator in function buildview
- Implementation of error reporting for the generator in the template engine (function buildview)
- Implementation of new function placeImage in class hcmsPDF
- Implementation of new function is_aiimage to determine if a certain file is a vector-based Adobe Illustrator (AI) or AI-compatible EPS file
- Implementation of image denisty and quality for image rendering in function createmedia and convertimage

Version 5.7.7
Release 05/2015
- Implementation of load balancing for file upload and rendering files
- Implementation of new setting for load balancing in main configuration
- Implementation of new function HTTP_Proxy and loadbalancer
- Implementation of new function getserverload
- Implementation of new service getserverinfo (based on function getserverload)
- Temp and view directories can be set in main configuration
- Moved temp and view directory to the internal repository (for load balancer)
- Moved instance configurations to the internal repository (for load balancer)
- New function createusersession in include/session.inc.php
- Implementation of main management config in hyperCMS API loader
- Changed include order for every file: Config.inc.php -> hypercms_api.inc.php -> session.inc.php
- Implementation of new function writesessiondata for load balancer
- Function setsession supports 3rd argument to write session data for load balancer
- Variable $appsupport has been replaced by $mgmt_config['application'] in main configuration
- Improvement in function getescapedtext to escape special characters if no encoding is provided
- Use of function getescapedtext for all text strings used in JS code 
- Implementation of new ICC profiles for ECI offset 2009
- Support for transparent background of SVG files
- Bug fix: Frame resizer in control_content did not work

Version 5.7.8
Release 06/2015
- Implementation of multi assets tag for DAM usage
- Bug fix: Correct and optimize html code in form views of template engine
- Bug fix: horizontal and vertical flip of images in multiedit mode not working
- Implementation of new function getobjectid
- Function setcomplink converts multimedia object paths to object IDs and saves them in the content container (not in the link index) in order to support component links in DAM that is not using a link index
- Implementation of object ID support for single and multiple components in template engine, component_edit_page_single and component_edit_page_multi
- Implementation of accesspermissions in function compexplorer for DAM usage
- Changes in showcase templates in install directory to use the new view directory setting
- Bug fix: Download of original files for access links failed if media file was not an image or document
- Optimizations in function rdbms_searchcontent regarding joins of tables
- Implementation of search format support in search of function compexplorer
- Bug fix: Media_rendering for audio files did verify non-existing fields that caused JS error
- Bug fix: Audio data in config files for ogg files have been missing
- Audio quality setting has been enabled for editing of audio files
- Validation of theme path in function getthemelocation
- Various improvements in search_api for website search functionality
- Bug fix: If no application was defined in the content containers of assets the template engine did not execute the published object

Version 5.7.9
Release 07/2015
- Optimization of language files
- New input tag settings in main CSS for all themes
- Update of jquery from version 1.9.1 to 1.10.2
- Implementation of keyword tags with optional mandatory or open list of keywords using the new hyperCMS tag "textk"
- Improved functions loadfile and loadlockfile to reduce CPU time
- Removed default frequenzy settings for audio rendering in main configuration due to issue with OGA files
- Corrections in german language files
- Implementation of getescapetext for all files of the graphical user interface
- Bug fix: Function createmedia did not execute rdbms_setmedia if $mgmt_maxfilesize limit has been reached for a file 
- Bug fix: Installation procedure checked temp and view directory before they were created
- Update of videoplayer Video JS to version 4.12.7
- Fullscreen mode in video player has been disabled for side bar
- Bug fix: Video JS css did not properly support fullscreen when used in iframes, fullscreen is disabled in CMS views
- Implementation of extended error logging in function uploadfile
- Improvement of input validation in function splitstring
- Removed media_update input parameter from function uploadfile. media updates require the object name as input

Version 5.7.10
Release 08/2015
- Implementation of new youtube connector to support Google OAuth
- Removed youtube token from management publication configuration file (function editpublication), the token will be saved in the config directory as youtube_token.json for all publications since the refresh_token will only provided once by Google
- Implementation of new function editpublicationsetting to edit a single setting of a publication
- Function selectcontent, selectxmlcontent, selecticontent and selectxmlicontent use case-insensitve conditional value
- Larger youtube upload window
- Implementation of meta data content from videos into the youtube upload form
- Removed hypercms_eventsystem file from function directory
- New youtube video link in page_info in case the video was uploaded to youtube
- Bug fix: Function showvideoplayer created wrapperlink for the video poster image, this caused the video to be loaded as the poster
- Bug fix: Page_multiedit did not fully support keywords (list, file, listonly attributes)
- Function showmessage provided id of DIV holding the message (use ID suffix _text)
- Improvements in import connector regarding special characters in file names
- Function createpublication creates default media mapping definition file
- Function deletepublication deletes media mapping file
- Implementation of object file count and size (in info-tab of object) for pages based on function getfilesize
- Implementation of duplicate check in function rdbms_createobject
- Implementation of input paramter for object ID for function rdbms_deleteobject
- Implementation of logname as input parameter for function deletelog
- Implementation of new custom log viewer plugin to display individual logs
- Improvements in plugin management viewer
- Changed log viewer details popup from GET to POST in order to display longer messages (strings)
- Impementation of custom log manager in admin node of each publication
- New text for 'custom-system-events' in all language files
- Bug fix: The event onpublishobject_pre has not been fired if the application tag of the underlying template was empty
- Improvements in the eventysystem reg. creating the search index for PDF files
- Removed location bar from control_objectlist_menu in mobile edition to avoid scrolling on smaller screens
- Changes in CSS of mobile edition
- Removed personalization and template management from explorer of mobile edition
- Added edit button to objects in objectlist for mobile edition
- Bug fix: Delete-favorite icon in context menu has not been grayed out if no object was selected
- Bug fix: Content versions of media files did not point to correct media file if only the meta data has been changed and published
- Support for file name changes in content versioning
- Function getobjectinfo supports content versions
- Implementation of function getmediafile
- Implementation of media preview when comparing media content versions

Version 5.7.11
Release 09/2015
- Implementation of new function getcontainerversions and gettemplateversions
- Implementation of WebVTT support for videos including WebVVT editor for videos
- Renamed text ID for uploade Youtube videos from "youtube_id2 to "Youtube-ID"
- Bug fix: Milliseconds of a video timestamp was not correct for video start
- Implementation of event log entries for sent e-mails of tasks and notifications
- Update of VIDEO-JS to version 4.12.11 due to issue with WebVTT on all browsers except Chrome
- Bug fix: Function rdbms_searchcontent did not provid correct search for date limits
- Bug fix: Limit max file size in function createdocument
- Bug fix: Function showmedia renames preview pdf files to .thumb.pdf is function createdocument failed to do so
- Check of storage limit could lead to extensive delays due to function rdbms_getfilesize, memory file filesize.dat is used to store storage size for 24 hours
- Function getvideoinfo returns duration including milliseconds as well
- Bug fix: Container_id_duplicate has not been defined in function rdbms_createobject
- Replaced AUDIO JS with VIDEO JS player
- Bug fix: Content compare was not working for multimedia versions due to including .xml as version file extension
- Function showaudioplayer support width, height and poster as input parameters
- New CSS class hcmsButtonMenuActive used for buttons in top bar (see function showtopmenubar)
- Implementation of additional options button below media player in editing mode
- Removed embed button below media player in editing mode
- Improvements in options menu of media editing mode
- Support saving media file as original file with support of file versions
- Bug fix: version_content displayed .folder instead of folder name
- Function getobjectinfo provides icon in result array
- Bug fix: Template engine used template media URL from mgmt_config instead of publ_config
- Defined support of conversion to MPEG formats in config.inc.php
- Bug fix: Template_edit used double quote inside the double quote of mouse event of help button
- Bug fix: Set frameBorder=0 for all iframes to support borderless iframes in IE 8
- Bug fix: Sidebar of keyword plugin did not open and close
- Changed character set of folders from UTF-8 (hardcoded like for multimedia assets) to the given characters set of the publication or template
- Bug fix: Doctype generated by template engine included a double quote
- Reworked graphics for flat design theme
- Bug fix: Mouseover on OK buttons in version_template did not work due to same name
- Check of empty search string in general search form in top bar has been implemented
- Implementation of function getlanguageoptions to get all languages and their 2-digit codes sorted by the language name
- Bug fix: Page_multiedit did not set UTF-8 as character set for multimedia objects
- Bug fix: Implementation of natural case sort for media_edit_explorer
- Bug fix: Template media preview provided by function showmedia dit not present any information of template media files

Version 5.7.12
Release 09/2015
- Improved graphics for flat design theme
- Improved CX-showcase-template for zoom viewer in the installation directory
- Improved CX-showcase-template for 360 degree viewer in the installation directory
- Improved CX-showcase-template for gallery viewer in the installation directory
- Implementation of new home box with the favorites of a user
- Changed function createinstance to support username of user account and create the user as superuser
- Bug fix: Function createinstance did not check for special characters in the instance name
- Bug fix: Function createinstance tested the CMS config directory for wriote permissions and not the instance directory
- Bug fix: Function copyrecursive did not verify file handler
- Changed setting of strongpassword for new instances to false
- Bug fix: Function registerinstance refered to config and not to the instance directory
- Bug fix: Include of session had to be relocated to API loader in order to load the instance configuration file
- Bug fix: Instances setting of main configuration file has not been set in instance configuration file by function createinstance
- Improvements in keyword plugin
- Bug fix: Function _loadSiteConfig did not check if config file exists which can cause a fatal error if a publication has been deleted
- Bug fix: JS function setVTTtime used wrong player id
- Bug fix: Function showmedia did not provide preview of PSD files
- Bug fix: Function createmedia used the crop option before the source PSD file which led to a wrong result
- Bug fix: Function notifyusers did not load the language of a recipient
- Bug fix: Frameset_main_linking used deprecated logo file
- Improvements in user_sendlink
- Implementation of language loader for function createtask, notifyuser and licensenotification

Version 5.7.13
Release 10/2015
- Improvements in workflow_manager
- Improvements in user_sendlink
- Improvements in user_objectlist
- Removed double entries in language files
- Replaced JS based height calculation of div layers by CSS based layer positioning for all objectlist views
- Update of PDF viewer (PDF.JS) to version 1.1.215
- Update of TCPDF to version 6.2.11
- Set default link for function medialinks_to_complinks
- Function medialinks_to_complinks returns only first valid link ressource and not a link array
- Set default link for function complinks_to_medialinks
- Index page of the system is using configured domain for redirect in order to avoid session issues with multiple domains used to access the system
- Bug fix: Control_content_menu used 2nd parameter in location.replace, only one parameter is supported
- Failed FFMPEG commands are reported in event log
- Improvements in function createmedia to create player config file and create media database entry in case the conversion of a media file failed after upload
- Moved from head tags to text-IDs for meta data in attitude templates

Version 5.7.14
Release 10/2015
- Improvements on mobile home screen
- Bug fix: User_sendlink did not validate array for email recipients
- Improvements in template engine to avoid line break of edit icons in "cmsview" and "inlineview"
- Improvements in template engine regarding language session handling
- Bug fix: Txt file extension has been defined as clear text format and image format
- Bug fix: Function showmedia did not properly convert non UTF8 strings
- Updated PHPWord library to version 0.12.0
- Removed unused library charsetconversion
- Bug fix: Function downloadobject did not get page via HTTP view and failed to render it
- Implementation of search expression logging in function rdbms_searchcontent
- Implementation of search expression statistics plugin
- Rework of icons in all themes
- Bug fix: Keyword plugin always selected english language version
- Bug fix: Keyword plugin only stores assets or pages keywords in stats file and did not join them
- Updates in keyword analysis plugin to support new language file format
- Bug fix: Pagecontenttype select in template engine has not been added to the form item string
- Updates in simple stats plugin to support new language file format
- Updates in test plugin to support new language file format

Version 5.8.0
Release 11/2015
- Implementation of search expressions recommender based on the search history of all users
- Bug fix: Deleting folders caused workplace control to display wrong location (folder has been added to location for each step of popup_status)
- Bug fix: Deleting folders using the context menu could cause deleting other folders since the values of the context menu has not been locked for writing
- Implementation of new JS functions hcms_lockContext and hcms_isLockedContext
- Improvements in JS library for context menu
- Improvements in frameset_main_linking to support search expression recommender, removed dynamical framesets, implementation of sidebar configuration check
- Implementation of max keyword length of 255 digits to avoid long strings that have been imported as keywords (e.g. Adobe Indesign documents with unreadable keyword strings)
- Bug fix: Location has been undefined in popup_status if no folder has been provided as input request
- Changed max search hits from 1000 to 500 in top bar search forms
- Bug fix: User_sendlink did not define upper case letter in password to fullfill strong password criteria
- Bug fix: User_sendlink did not set all general_errors as array elements
- Implementation of the new standard design theme
- Bug fix: Undefined variable $type and $thumb_pdf_exists in function showmedia in hyperCMS UI
- New set of user manuals
- Implementation of new main JS function hcms_getURLparameter
- Implementation of "Remember me" feature for logon, using the local storage of the browser
- Implementation of new text in all language files for "Remember me" feature
- Implementation of workflow as a module that is part of the Standard and Enterprise Edition
- Implementation of absolute path check for references to manuals
- Implementation of absolute URL in hypercms_main API as referrer to empty.php

Version 5.8.1
Release 11/2015
- Bug fix: Function checkworkflow did not exclude .folder of the folder path for comparison
- Update of CKEditor to version 4.5.4 due to issue with source code view in MS Edge browser
- Implementation of the YouTube plugin for CKEditor in all toolbar configurations, except DAM and PDF
- Optimizations in rich text editor UI
- Implementation of Spellchecker and Scayt plugin for CKEditor in all toolbar configurations, except DAM
- Implementation of share link generator
- Implementation of social media share link function in connect API: Createsharelink_facebook, createsharelink_twitter, createsharelink_googleplus, createsharelink_linkedin, createsharelink_pinterest
- Implementation of social media sharing for media files in hyperCMS UI
- Implementation of new publication setting for social media sharing
- Implementation of JS functions for social share links: hcms_sharelinkFacebook, hcms_sharelinkTwitter, hcms_sharelinkGooglePlus, hcms_sharelinkLinkedin, hcms_sharelinkPinterest
- Implementation of JS function hcms_getcontentByName to get value of form field by its name
- Implementation of share links for media files in template engine
- New organisation of directory structure for connector module and changes in youtube connector
- Add new text to language files for social media sharing
- Optimizations in HTML5 file upload
- Change to HTTPS for IP geo location finder in Google maps

Version 5.8.2
Release 11/2015
- Implementation of AES 256 encrpytion based on OpenSSL as standard strong encryption with fallback to Mcrypt (CBC), Mcrypt uses base64 incoding to be binary-safe, this leads to larger encrypted files and is therefore deprecated since version 5.8.2
- Changed encryption of container data to strong as default (same as file encryption)
- Implementation of config setting for the key for AES 256 encrpytion: $mgmt_config['aes256_key']
- Removed base64 encoding from function encryptfile, decryptfile, creattempfile and movetempfile in order to reduce the size of encrypted files
- Implementation of binary mode for writing files using function savefile and savelockfile due to encryption without base64 encoding
- Removed default base64 encoding from standard encryption in function hcms_encrypt
- Improvements in template engine for autosave
- Bug fix: reset of medaview variable in function showmedia has been removed
- Bug fix: Medianame has not been converted to UTF-8 for media viewer in template engine 
- Function hcms_encrypt and hcms_decrpyt will base64 en/decode the string if 'url' encoding is requested in order to be binary safe
- Bug fix: The character set of the form has not been set to UTF-8 in the template engine in case of editing media files
- Implementation of file locking in function iptc_writefile
- Implementation of file stats (rdbms_setmedia) in function iptc_writefile, xmp_writefile and id3_writefile to update MD5 hash and filesize in DB
- Bug fix: removed trim of encrypted data from function savecontainer, this is a manipulation of the data string and could lead to decryption issues when handling binary data
- Implementation of additional MD5 hash comparison of encrypted file and temporary unencrypted file in function createtempfile
- Bug fix: Function rdbms_setmedia did not update MD5 hash since wrong variable name has been used for value check
- Various improvements in function iptc_writefile, xmp_writefile and id3_writefile
- Bug fix: Function xmp_writefile did also write data to file if an error occurred
- Bug fix: Previous create of temporary unencrypted file has been checked for moving file back into encrpyted version, this caused the file not being encrypted and moved again by function iptc_writefile, xmp_writefile and id3_writefile
- Bug fix: Function iptc_writefile did a reset of the input array $iptc
- Bug fix: Undefined variables and undefined hidden field for 'filetype' in popup_message
- Bug fix: Undefined variable 'mediafile' in template engine
- Implementation of movetempfile input paramter in function iptc_writefile, id3_writefile and xmp_writefile due to file collision when using encryption and moving temporary unencrypted file back to encrypted file 
- Implementation of media file statisticts update and encryption of file into service savecontent
- Bug fix: Webdav function _runFuncWithGlobals requires 0 and 1 instead of false and true in order to pass those values to the API function
- Changes in language files
- Implementation of function avoidfilecollision due to issues when manipulating encrypted files with e.g. function createmedia and the shell execute file process has not been finished
- Removed file encryption feature from free to standard and enterprise edition
- Improvements in hyperCMS UI
- Bug fix: Function createmedia did not render edited videos properly if the file has been encrypted
- Bug fix: Function createmedia passed wrong file name to createversion if the file has been encrypted
- Change of watermarking in function createmedia to keep original media file without watermark
- Bug fix: Function createmedia did not use comma as separator when using multiple FFMPEG video filters at once
- Bug fix: The install script did not empty the %instances% place holder
- Implementation of instances path verification in userlogin

Version 5.8.3
Release 12/2015
- Updates in black UI theme
- Updates in colorful UI theme
- Updates in livelink for PHP
- Improvements in language selector styles of template engine to avoid changes in font-style in WYSIWYG inline editing mode
- Improvements in function errorhandler to support error notices
- Improvements in template engine to skip further execution if an error occurred
- Improvements in function showinlineeditor to avoid changes in font-style in WYSIWYG inline editing mode
- Bug fix: Targetlist has not been read from the request in link_edit_page
- Bug fix: Undefined variable list_array in link_edit_page
- Improvements in template editor
- Implementation of new attribute prefix ans suffix for all hypercms text tags; prefix and suffix will be appended to the not empty text content
- Implementation of third secure input parameter for function getattribute to secure (XSS) return value or not
- Added new prefix and suffix attributes to template_help
- Added new text for prefix and suffix attribute to all language files
- Fixed head edit buttons position for WYSIWYG view modes of template engine
- Implementation of user information in content comparison
- Implementation on new versions of content on save (new configuration parameter $mgmt_config['contentversions_all'])
- Bug fix: Function createversion used working container file extension when creating a new version
- Bug fix: Original media with and height file parameters have not been correctly set by function showmedia
- Bug fix: Reduced minimal thumbnail size from 400 to 10 bytes for thumbnail image file size check due to thumbnails that can be smaller than 400 bytes

Version 5.8.4
Release 12/2015
- Improvements in template engine regarding HTML tags
- Implementation of new task management with data storage in database instead of XML files. New features include support of start/finish date and status for tasks.
- Implementation of tabs for task management for the management of the users tasks and tasks the user assigned to others 
- Implementation fo new RDBMS functions rdbms_createtask, rdbms_settask, rdbms_gettask, rdbms_deletetask
- Implementation of update function update_tasks_v584 that is executed in function userlogin
- Implementation of new parameters for startdate and finishdate in function createtask
- Removed xmlschema/task.schema.xml.php
- Minor correction in English language file
- Improvemens in page_info_ip
- Implementation of new CSS class hcmsPriorityAlarm
- Implementation of an alarm if the finish date of a task has been reached
- Update of task home box to work with new task functions
- New text for task management in all language files
- Bug fix: Undefined variable charset in user_sendlink
- Minor improvements imn hyperCMs UI
- Changed max. task description length from 1600 to 3600 digits
- Implementation of HTML support for e-mail notifications and task notifications
- Moved task management from Free to Standard Edition
- Added support for task name and task time to database and task management
- Added support for array in DB Connect function escape_string
- Implementation of new function tasknotification
- Implementation of task notification in daily jobs
- Implementation of support of loop, muted and controls support for videoplayer. New input parameters loop, muted and controls for function showvideoplayer and showaudioplayer.
- Implementation of loop, muted and controls support in CKEditor Video Plugin.
- Implementation of loop, muted and controls support in media_playerconfig
- Removed keyboard controls support for videoplayer (since only supported by PROJEKKTOR)
- Implementation of new text in all language files
- Bug fix: If the task has been activated in user_sendlink the access link type has been checked automatically without unchecking all other types
- Improvements in template engine for comments
- Improvements in function getmetadata to add space after comma in order to allow automatic line breaks

Version 5.8.5
Release 01/2016
- Bug fix: Sort order in navigation template of demo website did not sort numbers
- Buf fix: Function showmedia did not apply line break for media name after media view
- Bug fix: Function showmedia did not activate video player controls
- Implementation of force_reload in function showmedia
- Bug fix: Function showvideoplayer did not set loop to true or false for VIDEO.JS player
- Bug fix: Changed controls to true by default in videoplayer to provide controls if the controls pararmeter has not been set
- Bug fix: Function url_encode has not been applied on wrapper link parameter wl and download link parameter dl in index.php
- Changed default crypt_level setting to "strong" in main configuration
- Bug fix: Function showmedia did read video information from original video config file with preview settings. In order to get the correct video information the original video file need to be analyzed.
- Display only unfinished tasks in home box
- Changed escape character from "~" to "." for url encoded strings in function hcms_encrypt and hcms_decrypt, since tilde should not be used in an URL.
- Improvements in function appendfile to avoid file collision
- Removed seek and pause support from function showvideoplayer since only PROJEKKTOR supported these features
- Removed seek and pause support from videoplayer since only PROJEKKTOR supported these features
- Improvements in task management: superadmin can access all tasks, short object names with full name in href title
- Implementation of user filter for task management
- Implementation of paging for task management
- Added hcmsMore CSS class to main.css
- Improved user detection of task owner (sender) in function rdbms_createtask
- Implementation of new Plugin to display access statistics for the favorites of a user
- Implementation of URL rewriting, new function rewrite_targetURI and rewrite_homepage, new "rewrite" folder in install directory holding an example configuration for URL rewriting
- Added support for permament links to function getgooglesitemap
- Added support for permament links to template engine
- Bug fix: function publishobject did not check the result of the template engine for errors
- Implementation of wrapper and download link support for hyperCMS media tags in template engine (use "wrapper" or "download" for pathytpe attribute)
- Changed "abs" to "uri" as pathtype value in template engine ("abs" still supported but deprecated)
- Update of all language files
- Improvement in XML API to support tags and tag names as input
- Implementation of function showAPIdocs to generate API function documentation based of a file (part of hyperCMS UI)
- Implementation of page location memory for page explorer of the rich text editor
- Update of the search_api for websites with improvements and bug fixes in function cleancontent and searchindex
- Implementation of full hyperCMS API Function Reference generator in help/api_functions
- Implementation of full hyperCMS API Function Reference in template_help
- Bug fix: Workflow script help used a wrong reference to the help file

Version 6.0.0
Release 01/2016
- Update of function getdescription to limit description length
- Implementation of new function is_emptyfolder
- Implementation of new UI functions readnavigation, createnavigation and shownavigation (gernerating navigations for websites)
- hyperCMS UI API will be loaded in hyperCMS API and has been removed from all files
- Updates in Navigation template of demo website to work with new UI navigation functions
- Implementation of new input parameter to enable and disable search expression logging for function rdbms_searchcontent
- Improved error handling in template engine to display errors and render document without errors
- Implementation of search history log for website search
- Implementation of adLDAP version 4.0.4 (MS Active Directory support) in the Connector module.
- Implementation of new function rdbms_gettableinfo in DB-Connect
- Implementation of new function sql_clean_functions in Security API
- Implementation of new function rdbms_externalquery in DB-Connect
- Implementation of new function create_csv in Main API
- Implementation of new function analyzeSQLselect in Report API
- Implementation of report management in connector module of Enterprise Edition. The report management can be used to define and generate reports.
- Implementation of new functions createreport, editreport, loadreport, deletereport in Report API of Report module
- Implementation of getrequest_esc for task name and description in task_list
- Implementation of exact name for value extraction using explode in function readmediaplayer_config
- Implementation of new functions showpiechart, showcolumnchart, showtimelinechart, showgeolocationchart in Report module
- Update of all language files to include text for Report module
- Changed max. length of user name to 60 digits instead of 20
- Changes in database field length for user
- Implementation of update function for database to add new fields to table textnodes and alter various other fields in tables
- Renamed column sender to from_user and user to to_user in table recipient and DB connect
- Implementation of object_id in table textnodes for object references
- Implementation of date, media alt-text and link-text in function buildsearchform of template engine
- Bug fix: Removed deprecated hidden date field from function buildview in template engine
- Bug fix: French and Russian language version or Rich Calendar included wrong characters at the end of the language file
- Various improvements in template engine regarding the date picker JS functions
- Implementation of new function getdirectoryfiles
- Implementation of home box for all reports

Version 6.0.1
Release 01/2016
- Update of old http-equiv meta tags with new charset meta tags
- Implementation of new charset support in function getcharset
- Bug fix: Function buildview of the template engine included two charset meta tags
- Improvements in function gethtmltag
- Improvements in function searchindex (search engine for websites)
- Changed default zoom parameter for function showgelocationchart from 10 to 4
- Bug fix: Function showcolumnchart did not verify the 2nd and 3rd y-values if their titles have been defined
- Display title on top of table in reports
- Bug fix: Function buildview of template engine did use JS function name for show the rich calendar for articles
- Bug fix: user_sendlink referred to old "taskmgmt" directory
- Improvements for date picker (rich calender functions) for articel_edit, user_sendlink, opup_publish and function buildview
- Improvements in rich calendar JS library
- Implementation of object creation for database in case the object hash could not be retrieved by function getwrapperlink and getdownloadlink
- Bug fix: Function rdbms_getfilesize did use DISTINCT in count function when counting objects which led to zero as result
- Bug fix: Function rdbms_searchcontent did include the publication twice for the search in objectpath when searching for a location 
- Added new column "planned" effort and renamed "duration" to "actual" effort in table "task"
- Implementation of new field for planned effort into task management
- Implementation of function update_database_v601 for update to version 6.0.1
- Implementation of new main management configuration setting $mgmt_config['taskunit']
- Implementation of function correctnumber
- Bug fix: Removed task management permission from group_edit_form if task management module is not installed
- Moved workflow functions to separate file
- Moved task functions to separate file
- Joined object and object_id as input parameter for DB Connect functions rdbms_createtask, rdbms_settask and rdbms_gettask due to new support for object path as input
- Removed publication and location column from task management tables and added this information as mouseover title to object
- Added date picker to task management
- Improvements in function createtoken
- Implementation of OCR (based on tesseract) to index the text in any kind of images, implemented in main confi file, installation routine and function indexcontent
- Moved function inexcontent and unindexcontent from main to media API
- Implementation of new main configuration setting for tables including into report management: $mgmt_config['report_tables']
- Implementation of search feature in explorer
- Replaced all single dates fields in all search forms with date picker
- Improved search result sorting in function rdbms_searchcontent by sorting only the object names and not the object path
- Bug fix: Table sorting JS funtion hcms_sortTable die not clean html tags proberly if a line break was used in a tag. JS function hcms_stripHTML removes all line breaks before stripping the tags from the string.
- New input parameter for CSS-display in function buildsearchform in template engine
- Bug fix: Function createuser did still check for file system based task list of user

Version 6.0.2
Release 01/2016
- Implementation of new project management feature
- Implementation of new RDBMS functions rdbms_createproject, rdbms_setproject, rdbms_getproject, rdbms_deleteproject
- Update of all language files for new project management feature
- Implementation of new permission "desktopprojectmgmt" in group_edit_form, function editgroup and rootpermission
- Updates in xmlschema/usergroup for new project management permissions in all default groups
- Integration of project management in explorer
- Removed sensor from Google Maps API loader
- Bug fix: Search_form_rdbms did load default page template without checking if it exists
- Various improvements in function rdbms_searchcontent in DB Connect
- Implementation of new help bubble info for workplace controls
- Added various video file extensions to include/format_ext
- Removed maximum number of results from search form
- Improvements in main.js regarding the evaluation of the input parameters of JS functions
- Excluded geo location search for mobile edition
- Bug fix: hcms_showInfo an dhcms_hideInfo on the buttons caused form elements to be disabled in explorer when switching from search to navigator and back again
- Changed to JS function hcms_showHideLayers in template_help
- Minor changes in CSS of standard theme
- Function showinfobox shows infobox as long as user did not close it and remembers the close action in localstorage of browser
- Bug fix: New infoboxes for workplace controls used onload event to close the infobox, this interferred with the existing onload event of the workplace control
- Placed sort of search result in search_objectlist and removed order by from rdbms_searchcontent
- Bug fix: List value and text has not been supported for textl tag in function buildsearchform in template engine
- Design changes in popup_status 
- Changes in function uploadfile, editpublication in order to support meta data editing during upload process
- Changes in site_edit_form to support new configuration setting for meta data editing during upload process
- Changes in function createtask and rdbms_createtask to support the planned effort as input
- Changes in task_list due to the support of tasks without an object_id
- Design improvements in task management
- Implementation of function showganttchart into project management module
- Improved documentation of API functions

Version 6.0.3
Release 01/2016
- Minor improvements in media_select of rich text editor
- Improvements of usability in popup_publish
- Bug fix: Function rootpermission did not read project management permission correctly
- Implementation of SQL statement for error reports in function query of DB Connect
- Implementation of double quotes for numerical conditions in several functions of DB Connect in order to improve error reporting
- Implementation of validation of onedit and infotype attributes for template view in template engine
- Bug fix: Function createtask used wrong variable name for object path
- Bug fix: Function createtask used wrong variable name for error reporting
- Implementation of warning suppression for function rootpermission, globalpermission, and localpermission in case of unset permissions
- Implementation of labels for all checkboxes in user_sendlink
- Design optimizations in user_sendlink
- Bug fix: The default main configuration file includes Somaly and Swedish language twice
- Implementation of bubble titles for all tabs in the system
- Design changes in the top bar of the system
- Corrections in Japanese language file
- Update of user manuals: Installation guide and users guide
- Bug fix: Function indexcontent did not use the content container from function setmetadata, causing meta data from files not be saved
- Implementation of new input parameter for content container and container save in function setmetadata
- Bug fix: Setting $mgmt_config[$site_name]['upload_userinput'] in site_edit_from has not been initialized
- Implementation of result validation of object in function uploadfile

Version 6.0.4
Release 02/2016
- Minor improvements in function indexcontent
- Bug fix: WebDAV function createObject did not proberly pass the parameters to function uploadfile, causing a check of duplicates when cut and paste was used via WebdAV
- Bug fix: JS function setSaveType of template engine did not forward to target URL when selecting media
- Modifications in navigator CSS
- Bug fix: Function transformlink of template engine did transform links used in JS functions of template engine
- Bug fix: Function HTTP_Post did not verify the fsockopen result
- Bug fix: Install script could not create demo website due to a reset of the $mgmt_config array
- Changed license verification in function userlogin to avoid issue when license server cannot be accessed
- Bug fix: Initialization of output varibles in function showobject
- Bug fix: Verification of variable $tpl_name has been missing in explorer
- Improvements in function tpl_globals_extended of the template engine
- Bug fix: Button for image and media editing used AJAX save method of form data and did not forward to image or media editing view
- Improvement in explorer_download to verify temporary file age before compression

Version 6.0.5
Release 02/2016
- Presenting download links for folders in info tab
- Updates and changes in language files and workplace controls
- Implementation of new function sendmessage in main API
- Implementation of e-mail messaging for chat invitations
- Implementation of support user for chat that will always be visible
- New main configuration setting for chat support user
- Added support for iPad scrolling for frameset_content
- Removed chat for iPad and iPhone due to display issues with JQuery mobile panel for chat
- Bug fix: Save and close button did not use post method and therfore did not close the form view created by the template engine
- Improvements in popup_publish
- Bug fix: JS function hcms_openWindow used in various files declared windows size as string and not as integer
- Bug: MS Edge opens window in same dimension of parent window if not in fullscreen mode. This is an issue of MS Edge and cannot be solved.

Version 6.0.6
Release 02/2016
- Bug fix: Verification of $compaccess has been missing in webdav function getChildsForLocation
- Bug fix: Report CSV export button targeted wrong file name
- Implementation of table column resizing in all objectlist views
- Bug fix: File version_template used wrong reference to external JS file
- Bug fix: File template_edit used single quote for width parameter in function hcms_openWindow call
- Bug fix: Logviewer plugin used wrong parameter for function showinfobox call
- Implementation of table column resizing for log viewer
- Implementation of table column resizing for logviewer plugin
- Implemen tation of new streaming logic in function downloadfile
- Included download events into function downloadfile and removed them from explorer_download and explorer_wrapper
- Improvements in hypercms_api loader for language file
- Implementation of new media streaming service "mediastream" for video player to solve issues with streaming on mobile browsers
- Bug fix: UI Function showmessage did not provide text container with ID "message_text" used by YouTube connector
- Implementation of new function createviewlink
- Replacement of harcoded logic for links by function creatviewlink in all files
- Moved explorer_download and explorer_wrapper as mediadownload and mediawrapper to service
- Changes in UI function showvideplayer and showaudioplayer to support new streaming service
- Bug fix: Function copymetadata used wrong filename for error reporting
- Bug fix: Several language files did not use proper %user% variable in the text strings

Version 6.0.7
Release 02/2016
- Reorganization of connector modules and external APIs
- Implementation of direct file upload in the page structure. The connector module is required. The uploaded files are not managed by the system.
- Changes in popup_upload to support the file upload in the page structure
- Changes in function editpublication for new stetting of page file upload
- Changes in site_edit_form for new setting of page file upload
- Implementation of new translations for the new page file upload in all language files
- Implemetation of new setting in function localpermission and setlocalpermission in order to support page file uploads
- Changes in function unzipfile to support page file upload
- Bug fix: page_preview used undefined language variable for error message
- Changes in function manipulateobject to support uploaded external page files
- Changes in function unzipfile and createmediaobjects to return created objects
- Changes in popup_action to support uncompressing ZIP files in page structure
- Support for meta data input after ZIP file upload and automatic unpacking of ZIP file content
- Replacement of location.href with location due to issues with MS Edge
- Implementation of new selection method for object lists (Support of multi-selection of objects if the first element is selected without nay key pressed)

Version 6.1.0
Release 03/2016
- Implementation of the cloud storage connector for the AWS S3 client API to support storage of assets, their derivates and versions in an external cloud storage
- Implementation of the cloud storage API to manage assets in the external cloud storage
- Changes in function getmedialocation for cloud storage support
- Implementation of the cloud storage API in hyperCMS API loader
- Moved image resizing from function uploadfile to function createmediaobject
- Changes in function uploadfile, downloadfile, createmedia, convertimage, createdocument, createthumbnail_video, createthumbnail_indesign, indexcontent, deleteversions, showmedia, zipfiles, unzipfiles, readmediaplayer_config, savemediaplayer_config, getimagecolors for cloud storage support
- Changes in media and meta API functions for cloud storage support
- Bug fix: mediadownload service did not verify and present file download for template media files
- Implementation of synchronization service in daily job to synchronize media files with cloud storage
- Update of al language files with new translations
- Implementation of new publication settings for local and cloud storage
- Renamed publication settting 'storage' to 'storage_limit'. Implementation of various changes to support the changed name.
- Implementation of new publication setting for 'storage_type' to support local, cloud and both storage types
- Implementation of new function is_cloudstorage and preparemediafile in main API
- Added support to remove original file to function deletemediafiles
- Bug fix: Media assets download in control_objectlist_menu always forced ZIP file download by function createmultidownloadlink due to multiobject variable
- Bug fix: Function downloadfile did not set filepath variable for encrpyted files
- Optimizations in image_rendering
- Changes in image_rendering, user_sendlink, page_info, page_multiedit, explorer_objectlist and search_objectlist for cloud storage support
- Changes in service renderimage, savecontent for cloud storage support
- Replacement of all createtempfile functions call by preparemediafile function calls
- Optimizations in function createmedia
- Moved creation of new thumbnail image (if original image has been modified) from function createmediaobject to function createmedia
- Implementation of version 2.3 for video/audio configuration files (duration incl. milliseconds, new duration parameter w/o milliseconds)
- Design improvements in explorer_preview
- Bug fix: Converted documents were save in temporaray directory instead of the media repository
- Improvements in function showmessage and showmedia
- Implementation of support for absolute path of media files in function getpublication
- Implementation of new main configuration settings $mgmt_config['storage_dailycloudsnyc'] and $mgmt_config['storage_type']
- Update of mime-types (include/format_mime)
- Removed replacement of all brackets from function specialchr_encode to solve issues with WebDAV module
- Improvements in function scriptcode_clean_functions to verify PHP functions in the script code

Version 6.1.1
Release 03/2016
- Improvements in function getlockedobjects by implementing function loadfile_fast instead of loadfile for loading
- Improvements in project_list regarding the verification of parameters
- Implementation of decoding of special characters in log_list and plugin 'logviewer'
- Implementation of new verification for the original video width in function showmedia
- Migration from function file_exists to is_file or is_dir based on the case (file or directory) in all APIs
- Migration from function file_exists to is_file or is_dir based on the case (file or directory) in remote client

Version 6.1.2
Release 04/2016
- Implementation of NTML library into connector module
- Implementation of file extension correction if object is unpublished in function setcomplink
- Implementation of support for unpublished objects in function showcompexplorer
- Implementation of MS Azure API in connector module
- Implementation of cloud functions for Azure API
- Implementation of exception in link management for unpulished components in function manipulateobject (unpulished components will remain as component links in the containers and link index)
- Improvements in function S3connect
- Bug fix: Correction of error codes in cloud storage API
- Bug fix: Rich calendar did not open in explorer if it had been closed using the close-button
- Bug fix: Function createviewlink did always refer to service mediadownload and not also mediawrapper
- Implemenentation of new link-type input parameter for function createmultidownloadlink
- Bug fix: Force wrapper links for downloads on iPhones or iPads
- Improvements in control_content_menu and control_objectlist_menu

Version 6.1.3
Release 04/2016
- Implementation of delete feature for exported objects
- Implementation of conditions for export of objects (creation date, last access, last modification, file size)
- Implementation of export job profiles in export module
- Implementation of import job profile in import module
- Implementation of new text variables into all language files
- Bug fix: Help button appeared twice in instance management control taskbar
- Implementation of JS trim for new names in all controls
- Bug fix: timeout.js has still been used in instance manager
- Bug fix: Language has not been defined in import and export scripts
- Implementation of new parameters for the import and export directory (default values are data/import and data/export)
- Added file extension .indd as image to include/format_ext.inc.php
- Implementation of automated export and import jobs in daily job
- Bug fix: Import script did only update content container and not the multimedia file in case the container ID is provided in import file
- Bug fix: Import script did not delete imported multimedia files
- Improvements regarding undeclared variables in function settext
- Implementation of support for synonyms in search engine
- Implementation of new function getsynonym
- Implementation of new main configuration setting for synonyms
_ Implementation of support for synonyms in function rdbms_searchcontent 
- Implementation of synonyms for English and German
- Added MTS file extension (AVCHD) to video file extensions and video rendering
- Removed GIF file extension from video file extensions and video rendering
- Bug fix: Task home box did use wrong reference to task management
- Implementation of symbolic links for export and import (for asset file archive with slower access)
- Implementation of new function restoremediafile in main API
- Implementation of restore of media files in repository in function preparemediafile
- Bug fix: Mobile edition has not been used if user was logged in already on the mobile device
- Implementation in various API functions to support the new output of function preparemediafile
- Bug fix: Function createversion did not create new version if is_cloudobject returned false
- Implementation of support for exported media files in version_content
- Bug fix: Function uploadfile did not return full objectpath when updating a media file
- Improvements in function getobjectinfo
- Implementation of new function rollbackversion in main API
- Implementation of new function deleteversion in main API
- Improvements in function deleteversions in main API
- Improvements in function getobjectinfo in get API
- Improvements in popup_upload_html
- Implementation workflow token in tabs of control_content_menu
- Bug fix: Function manipulateobject did not properbly update the object reference in the content container on action "file_rename" or "page_rename"
- Implementation of support for symbolic links in function deletefile
- Bug fix: Function deletefile did not write error log
- Bug fix: Function manipulateobject did not proberly verify the cut & paste of objects into a subfolder of the source location of the objects

Version 6.1.4
Release 04/2016
- Improvements in function rdbms_setcontent
- Improvements in service mediawrapper
- Bug fix: Function uploadfile used wrong input (media location) for call of function indexcontent
- Bug fix: Function downloadfile did not set filename in HTML header when "wrapper" has been forced
- Bug fix: JS Function loadForm did not verify template name in search_form
- Bug fix: Cloud storage settings have not been verified in site_edit_form
- Bug fix: Function downloadfile did not set correct http-header for content-disposition
- Changed preview size of media in side bar
- Moved stopwords and synonyms to data/include directory (which are not influenced by software updates)
- Implementation of multilanguage taxonomies (definition in text files)
- Implementation of taxonomy tree in explorer
- Improvements in keyword plugin in order to clean keyword content
- Improvements in function rdbms_setcontent in order to clean indexed content
- Changes in function getkeywords in meta API to return array instead of keyword string
- Implementation of new function splitkeywordsin meta API
- Implementation of new function rdbms_gekeywords to select and count unique keywords by location and text ID
- Implementation of new function createtaxonomy in meta API
- Bug fix: Upload of pages checkbox in site_edit_form has not been disabled for DAM only usage
- Added constraint attribute to textk tag for templates (keyword tag)
- Implementation of new function gettaxonomy_sublevel in get API
- Implementation of new function gettaxonomy_childs in get API
- Implementation of new function gettaxonomy_id in get API
- Implementation of new publication configuration setting for taxonomy browsing and search integration
- Moved several get-functions from meta to get API
- Implementation of new service getkeywords
- Implementation of taxonomy query string in template engine for the list-source of keyword tags
- Bug fix: Function scriptcode_clean_functions did not verify all variables
- Implementation of location support in Explorer advanced search feature (based on the selected template)
- Improvements in function convertpath in main API to return already converted path
- Implementation of new function update_database_v614 (creates new table taxonomy)
- Implementation of new table taxonomy in createtables.sql
- Implementation of new input parameter for publication in function rdbms_setcontent and rdbms_deletecontent
- Removed user parameter for function rdbms_deletecontent
- Improvements regarding text preparation in function rdbms_setcontent
- Implementation of new function cleancontent in main API
- Integration of function cleancontent in several functions in order to replace the old logic
- Implementation of new function settaxonomy in set API
- Implementation of new function rdbms_settaxonomy, rdbms_setpublicationtaxonomy and rdbms_deletepublicationtaxonomy
- Implementation of new function exportobjects and importobjects in new im/export API
- Integration of im/export API in API loader
- Integration of im/export API in API documentation
- Rename of function licensenotification to sendlicensenotification (to be used as helper function) in main API
- Implementation of new function licensenotification in main API
- Replaced array_merge to array_replace_recursive in function userlogin in security API
- Implementation of support for taxonomy based search in function rdbms_searchcontent
- Implementation of publication selectbox in explorer search form
- Added onload input parameter for function showinfopage in UI API
- Removed meta-info attribute from tags of metadata templates in template editor
- Improvements in function workflowaccept in workflow API
- Renamed function cleancontent to cleantext in external website search engine API
- Bug fix: JS function hcms_changeVTTlanguage called function autosave instead of autoSave
- Implementation of new function getsearchhistory in get API
- Implementation of CSS class name 'comment' for all comment textareas
- Force of form post instead of AJAX if comments are used in order to reload the form ans display the new post
- Improvements in input valiation in various set-functions
- Bug fix: Function uploadfile did not call unindexcontent if file extension of updated file has not been changed
- Bug fix: Function savecontainer did not verify and support container-type "version"
- Function indexcontent will save not only working container but also the published container
- Bug fix: Function manipulateobject did not verify folder objects correctly in order to correct the location of the object
- Update of installation routine to include new configuration setting for taxonomy

Version 6.1.5
Release 05/2016
- Changes in default taxonomies for all languages
- Removed readonly attribute from date search field in function buildsearchform in template engine
- Set user language in template engine for taxonomies in keywords fields
- Removed verification of taxonomy-setting in function gettaxonomy_childs
- Implementation of new function base64_to_file in media API
- Implementation of annotations for images (supports drawing lines, rectangles, circles, pointers and text)
- Implementation of new input parameters for service/savecontent in order to save annotation image
- Improvements in function showmedia regarding the rendering of temporary images
- Only display annotions for images that are larger than the standard thumbnail size
- Bug fix: Function cleantext in external website search engine API used wrong variable for character replacements in content string
- Update of browser window features for new windows in control_objectlist_menu and control_content_menu
- Added new text for annotations to all language files
- Implementation of annotation image support in function createmedia of media API
- Redesign of popup information windows
- Improvements in various functions in set API
- Bug fix: Removed replacement of comma from function cleancontent in order to support keyword extraction by function rdbms_getkeywords
- Bug fix: The export did not verify folders in order to exclude them from deleteobject (export only removes objects and not folders)
- Improvements in SQL statement of function rdbms_getnotification
- Bug fix: Function localpermission used wrong  location in permission string for 'comprename'
- Improvements in verson_content_compare
- Implementation of new parameter object ID for function settask in task APi and rdbms_settask in DB Connect
- Bug fix: Reset of object in task did not work in project management
- Implementation of object reset in task management
- Bug fix: Project management did not allow reset of start and finish date of task if it has been left empty when the task has been created
- Implementation of support to remove objects from projects and tasks
- Implementation of project ID memory to open last edited project automatically
- Bug fix: Function getprojectstructure did not properly evaluate start date of main project
- Various improvements in task management
- Improvements in popup_upload_html regarding ZIP files
- Bug fix: Function uploadfile added location to objectpath again for unzipped files

Version 6.1.6
Release 05/2016
- Bug fix: Function creatversion did not verify file size before creating a new version (this verification has been removed in version 6.1.4)
- Bug fix: control_content_menu did not present proper template entries in select box if no templates are available
- Set height of iframe in report_form to 600px instead of 99% since the height in percent has not been recognized by all browsers
- Improvements in home boxes regarding display of unique entries
- Improvements in project management
- Improvements in NTLM connector
- Removed version number from home screen and logout screen

Version 6.1.7
Release 05/2016
- Improvements in chat including sound for new chat messages
- Removed double entries in function getusersonline
- Implementation of chat support-user verification in chat service
- Improvements of logo style in top frame
- Update of product name in the comment header of all files
- Implementation of function getsearchhistory in frameset_main_linking
- Implementation of keywords verification before adding them as JS array to the general search field in frameset_main, frameset_main_linking, and explorer

Version 6.1.8
Release 05/2016
- Bug fix: queue_objectlist used incorrect mouse-event on date column header
- Updates in language files
- Implementation of Google translation API in connector library
- Implementation of new JS function hcms_stripTags and hcms_translateText (using Googles translation engine)
- Implementation of translator for all unformatted and formatted text-tags in form views, easyedit views, but not in inline editing view
- Implementation of new publication configuration setting for supported language translations
- Implementation of new translation parameter in function editpublication
- Bug fix: JS function submitLanguage of template engine did not properly close a command line with semicolon
- Update of language codes in include/languagecode.dat based on Google translate
- Implementation of new function showtranslator in UI API
- Updates in Aministrators Guide and Users Guide
- Bug fix: Function showmedia did not verify thumbnail image dimensions
- Bug fix: template_edit did not declare $checkbox_metainfo
- Bug fix: Service savecontent used missing input variable $constraint
- Bug fix: Function showmedia did not recreate annotation image if the media file has been updated

Version 6.1.9
Release 06/2016
- Bug fix: Language codes in include/languagecode.dat used a single non-UTF-8 character
- Several descriptions in the main API have been corrected
- Update of the Programmers Guide
- Implementation of API functions help in hypercms/help
- Redesigned template engine that uses DIV-tags instead of tables for form layout
- Form labels and content fields are now organized in rows instead of columns
- The share link layer has a fixed position
- Implementation of new CSS classes named hcmsFormRowLabel and hcmsFormRowContent used in form views
- Implementation of new mediawith on mobile devices for frameset_content

Version 6.1.10
Release 06/2016
- Implementation of the verification of new files before the recreation of a ZIP file by function zipfiles
- Removed ZIP file verification from service mediadownload (removed 24 hour caching of ZIP files for download links)
- Implementation of mobile version support for access links
- Removed frameset_main_linking (replaced by frameset_main)
- Implementation of support for access links (object linking) in frameset_main
- Implementation of support for access links (object linking) in frameset_mobile
- Enable logout button in taskbar for access links (object linking) in control_objectclist_menu for the mobile edition

Version 6.1.11
Release 06/2016
- Updated charset meta-tag in various files
- Added theme-color meta-tag for mobile browsers
- Implementation of component path verification in explorer (Navigator)
- Bug fix: Function editpublication used single and double quotes for empty storage-type configuration
- Implementation of an Assetbrowser in the connector module (for third-party CMS integration)
- Minor improvements in userlogin
- Bug fix: Added iPhone and iPad support in Mobile Edition to enable scrolling of an asset when adding metadata during upload
- Bug fix: Annotations for images are disabled for iPhone or iPad due to issues with the annotate-JS-comand
- Added tag ID for annotation toolbar, to disable id for iPhone and iPad
- Bug fix: Function showinlineeditor did compare encoded and unecoded text strings before reseting the text content of formatted and unformatted tags
- Implementation of new session variables for Assetbrowser in include/session.inc
- Bug fix: Function manipulateobject did not allow to cut and paste objects in a subfolder of the source location
- Implementation of object hash support as output of service getobject_id
- Implementation of Assetbrowser support (call of JS function returnMedia) in explorer_objectlist and search_objectlist
- Added file extension cdr as image file type to include/format_ext
- Improvements of mobile detection in userlogin
- Added iPad in function is_mobilebrowser
- Implementation of new function is_iOS
- Added iPad in JS function hcms_iPhonePad
- Renamed JS function hcms_iPhonePad to hcms_iOS in all scripts
- Implementation of server-side iOS detection in userlogin
- Removed Plugins and Taxonomy browsing in explorer when an accesslink is used
- Bug fix: Minor bug fixes of unassigned variables in searchstats Plugin
- Bug fix: Variable location_root has not been set in case of an accesslink to an object
- Bug fix: Variable tree has not been set in case of an accesslink
- Session variable explorerview will be set to "medium" if an accesslink is used

Version 6.1.12
Release 07/2016
- Minor improvements in Assetbrowser
- Implementation of accesslinks for objects using a general user account for access
- Implementation of a new publication setting for the accesslink user account "accesslinkuser" in site_edit_form and function editpublication
- Implementation of the new function createobjectaccesslink in main API
- Implementation of object accesslink in page_info
- Implementation of hashcode support in function getuserinformation in get API
- Implementation of object access links support in userlogin
- Bug fix: Search has not been executed if accesslinks have been used
- Updates in all languages files
- Bug fix: JS function isNewComment in template engine did not verify if rich text editor instance exists before writing the content into the textarea
- Implementation of new template variable %object_id% in template engine
- Implementation of date, time, and publication access of user to each chat entry
- Implementation of new presentation logic of chat in order to show only messages based on the users publication access
- Bug fix: Function link_db_restore of link API did not have access to user
- Bug fix: Function link_db_restore was not able to access working content container due to wrong verification
- Implementation of new function valid_tagname in XML API
- Implementation of sys-user support in function loadcontainer
- Implementation of tag name verification in all write functions of XML API
- Implementation of new readonly attribute in template engine for all hyperCMS tags
- Implementation of user name as input parameter for function getsearchhistory
- Implementation uf user based search history filtering in all search forms
- Implementation of file-attribute for hyperCMS textl tag that supports list entries based on a taxonomy
- Implementation of folder structure support for list-attribute of hyperCMS textk and textl tags
- Changed order of values of list and file attributes for list and keywords fields
- Implementation of new input parameter force for function rdbms_deletepublicationtaxonomy

Version 6.1.13
Release 07/2016
- Implementation of keywords search (new database tables keywords and keywords_container)
- New attribute type in table textnodes
- Implementation of new function update_database_v6113
- Improvements in function splitkeywords
- Implementation of new function rdbms_getkeywords, rdbms_setkeywords, and rdbms_setpublicationkeywords in DB Connectivity
- Improvements in daily jobs
- Improvements in image gallery templates of the installation folder (using JSON for gallery data, support of lazy image loading)
- Removed keyword Plugin
- Implementation of new function gettemplates
- Moved get and set functions from main API to get and set API
- Renamed function getdescription to getmetadescription and getkeywords to getmetakeywords
- Implementation of new function getkeywords
- Modifications in OpenAPI, renamed function set_fields to save_content
- Implementation of new input parameter type in function rdbms_setcontent
- Implementation of component references (database table textnodes) in function setcomplink
- Implementation of textnodes support in function rdbms_deleteobject
- Implementation of new table classes to navigator.css for all themes
- Implementation of new function rdbms_getcontent in DB Connect
- Removed text_array parameter from function settaxonomy and implemented rdbms_getcontent instead
- Bug fix: Function xmp_writefile did not verify variable errorCode
- Bug fix: Solved syntax error in Plugin seachstats
- Implementation of new special characters to clean from text in function cleancontent
- Bug fix: Function setmetadata did not save extracted content in database if savecontainer input parameter has been set to false
- Bug fix: Function deletefolder, is_emptyfolder, and licensenotification did not use closedir
- Implementation of new function reindexcontent
- Implementation of reindex content feature in metadata mapping
- Changed metadata format write order in function setmetdata
- Implementation of new function rdbms_copycontent to copy content in the database based on container IDs
- Implementation of rdbms_copycontent in function manipulateobject for copy and paste of objects
- Implementation of support for arrays for input in function cleancontent
- Implementation of content type support in function save_content of openAPI
- Added type to element textfield in openAPI WSDL (service_orig.wsdl)
- Implementation of new type parameter in media mapping (mapping-value=type:text-ID)
- Implementation of new input parameter for character set in function splitkeywords
- Implementation of new filters for special characters in function splitkeywords

Version 6.1.14
Release 07/2016
- Improvements of keyword indexing in function getmetadata in meta API
- Support for dynamic assignment of Lightroom hierarchicalSubject to tag ID and contents
- Removed html_encode from function setmetadata
- Implementation of new input parameter for specific container IDs in function reindexcontent in media API
- Removed general html encoding of content from files based on UTF-8 in function indexcontent
- Support of container ID as input for function getmetadata
- Bug fix: Function indexcontent did not veriy max. string lenght of 100 for keywords from XMP
- Improvements in function splitkeywords (leave tags in keyword-string and verify tags in each single keyword)
- Bug fix: Removed cleaning of special characters in function splitkeywords due to issues
- Implementation of new function getlistelements for support of file attribute in keyword and text-list tags
- Implementation of new function getlistelements in template engine and page_multiedit
- Implementation of metadata presentation of assets in media selector
- Implementation of new input parameter for character set in function showshorttext in UI API
- Implementation of multibyte character support in function showshorttext
- Implementation of new function correctcontainername
- Implementation of notification for connected and linked objects in function rdbms_getnotification
- Implementation of rules based on content for the export of objects
- Waiting time has been extended to 2000 ms for the iframe to be loaded when using the search in the Navigator
- Bug fix: If a users name has not been provided the user entry for access-links in site_edit_form has been left empty
- Bug fix: Duplicate error codes in DB Connect
- Implementation of new function rdbms_getemptykeywords
- Implementation of objects with no keywords in keyword list
- Bug fix: control_objectlist_menu did not extract the publication from the root folder
- Allow spaces in tag keywords
- Added read-only attribute for keyword tag
- Support of geometry for video watermarks in function createmedia in media API
- Implementation of new function gethierarchy_definition in get API
- Implementation of support for delete of taxonomy and hierarchy configuration files in function deletepublication in main API
- Implementation of new function gethierarchy_sublevel in get API
- Implementation of new function rdbms_gethierarchy_sublevel in DB Connect
- Implementation of main configuration $mgmt_config['search_exact'] and $mgmt_config['search_log']in function rdbms_searchcontent in DB Connect for search of exact expression
- Bug fix: Replaced semicolon with comma
- Bug fix: Function rdbms_searchcontent in DB Connect did reassign synonyms to the input expression array
- Bug fix: Function rdbms_searchcontent did not use inner joins for tables object, container, textnodes
- Bug fix: The character sets for media_hierarchy and media_mapping were defined by the publication character set and not the language character set of the main configuration

Version 6.1.15
Release 07/2016
- Bug fix: Function setmetadata did not separate type and text ID for hcms:quality metadata mapping
- Bug fix: Metadata hierarchies in explorer used same tree ID
- Bug fix: Function rdbms_searchcontent did use taxonomy and was not looking for exact textcontent match if hierarchies were used
- Added hyperCMS tag name as type to the metadata hierarchy definition
- Support for keywords in function gethierarchy_sublevel in get API, rdbms_searchcontent, and rdbms_gethierarchy_sublevel in DB Connect
- Bug fix: Function rdbms_searchcontent did not look for empty content when exact match was requested
- Bug fix: Function rdbms_searchcontent did not increase the counter for the conditions
- Bug fix: Function gettemplateversions did return sort result and not result array
- Implementation of new function array_iunique in main API
- Implementation of function array_iunique in function rdbms_gethierarchy_sublevel
- Implementation of lower case comparison for exact matches in function rdbms_searchcontent and rdbms_gethierarchy_sublevel
- Implementation of html_decode and html_encode for secure string comparison of textcontent in function rdbms_searchcontent and rdbms_gethierarchy_sublevel
- Improvements in function cleancontent
- Implementation of new function update_database_v6115 in update API
- Bug fix: Function rdbms_getemptykeywords of DB Connect did use GROUP BY statement which results into wrong count of object with empty keywords
- Updates in explorer CSS of black theme

Version 6.1.16
Release 07/2016
- Implementation of file size support in all search forms
- Implementation of file size comparison in function rdbms_searchcontent
- Implementation of save for search parameters
- Corrections in German language file
- Updates in all language files
- Improvements and changes in Navigator search form
- Excluded CSFR protection from service mediawrapper and mediadownload
- Bug fix: Function gettemplates did provide empty templates if second input parameter has not been provided
- Implementation of image download protecttion for annotation images and normal images in template engine
- Bug fix: Location has not been correctly provided for function accesspermission in control_objectlist_menu
- Implementation of CS export for all object lists
- Improvements in function create_csv in main API
- Improvements for objects list on mobile devices
- Exclude 'send to chat' button on iPad and iPhone
- Bug fix: Function gethierarchy_definition did not initialize labels array
- Implementation of new view-type 'media_only' in function showmedia in UI API
- Implementation of new live view for media assets
- Bug fix: Display of sidebar did not affect the width of the object list columns
- Implementation of media rendering improvements in function showmedia in media API
- Bug fix: Function showmedia regenerated image views due to incorrect file name used for comparison with temporary file
- Changed function showmedia to set HTML tag ID for all media containers
- Removed audio sampling frequency from default audio rendering settings due to issues witrh MP3 files
- Bug fix: Default audio and video rendering settings of main configuration have not been applied in function createmedia
- Bug fix: Template engine did not add %comp% as root for media files in form view causing the currently selected image not to be displayed in media_view
- Bug fix: Function showshortext did not apply character set for a single line break

Version 6.1.17
Release 07/2016
- Resized media viewer size in sidebar (plus 30 pixel in width)
- Implementation of miniumum size for media (video and audio) player in function showmedia
- Implementation of fixed sidebar width instead of percent
- Changed the default thumbnail size frame to be 220 x 220 pixel (previous 180 x 180 pixel)
- Correct size of audio player in explorer_liveview automatically if below size limits
- Bug fix: Function create_csv did not verify the input array
- Bug fix: control_objectlist_menu did not provide escaped path to function getmetadata_multiobjects

Version 6.1.18
Release 07/2016
- Implementation of objectlist columns configuration
- Improvements in function createmedia for audio files
- Excluded mp3 from video formats in include/format_ext
- Implementation of new session variable for objectlist columns
- Support for array as input in function setsession in set API
- Integration of objectlist definition support in function userlogin in security API
- Implementaion of date created for content containers (XML)
- Implementation of date created support in function createobject in main API
- Implementation of new function update_container_v6118 in update API
- Bug fix: Function rdbms_createobject in DB Connect did not save the create date if the geo location has not been provided
- Improvements in task API
- Changes of user directory connectors in function userlogin
- Renamed directory data/ldap_connect to data/connect
- Implementation of new main configuration setting $mgmt_config['authconnect']
- Update of AD LDAP library in connector module
- Updates of authentification scripts in data/connect
- Updates in function link_db_restore in link API
- Implementation of template labels in function userlogin in order to collect all labels from templates the user has access to
- Implementation of new session variable for template labels
- Implementation of new main configuration setting for the display of metadata in objectlists $mgmt_config['explorer_list_metadata']
- Various improvements in explorer_objectlist and search_objectlist
- Improvements in frameset_log, log_list, and queue_objectlist
- Implementation of update log in update API
- Implementation of function loadlog in main API

Version 6.1.19
Release 08/2016
- Implementation of nativy Plugin for translation orders
- Installed Plugin configuration/activation file in install/data/config
- Improvements in Simple Stats Plugin
- Improvements in OpenAPI, renamed content_save to content_settext
- Implementation of new functions project_create, project_edit, project_delete, task_create_ task_edit, and task_delete in OpenAPI
- Renamed function setproject to editroject in project API
- Renamed function settask to edittask in project API
- Bug fix: Function rdbms_deleteproject used wrong variable name for project ID
- Improvements of input validation in Navigator
- Improvements and changes in task management
- Improvements and changes in project management 
- Improvements in function query in DB Connect regarding input validation
- Bug fix: Report management used 'duration' instead of 'actual' as field name for table task
- Bug fix: Funtion buildsearchform did use HTML table instead of DIV
- Bug fix: Template editor did not provide meta-information checkbox for page, component, and include template types
- Bug fix: Template engine did not present metainfo button in WYSWIWYG views
- Bug fix: CSV export of pages did not provide container ID nor content
- Bug fix: Column headers of objectlist views displayed text ID instead of label
- Improvements in function getmetadata_multiobjects

Version 6.1.20
Release 09/2016
- Improvements in task management
- Bug fix: Function get_youtube_videourl in Youtube Connector did not correctly verify input variables
- Modifications in function userlogin in security API to support realname and e-mail of user
- Implementation of context menu items support for Plugins
- Modifications in function plugin_parse for context menu support
- Modifications in JS function hcms_createContextmenuItem and hcms_showContextmenu for Plugin support
- Bug fix: Function tasknotification of task API did not load language file if required
- Bug fix: Function rdbms_setpublicationtaxonomy in DB Connect did not verify the taxonomy ID before call of function settaxonomy
- View-button in explorer_objectlist and search_objectlist opens the new live-view introduced in version 6.1.19
- Modification of the search that did not restrict the search location if object linking (access link) has been used
- Removed serach field in top bar if object linking is used (access link of an object)+
- Bug fix: Function rdbms_searchcontent did not exclude taxonomy seacrh if taxonomy has been disabled for the publication
- Bug fix: Function manipulateobject did not create reference in contentobjects node of content container for a connected copy of an object
- Bug fix: Function manipulateobject delete multimedia file of a connected object if the link management database was not enabled
- Improvements in search_objectlist

Version 6.1.21
Release 09/2016
- Bug fix: search_objectlist did not end a line of code properly
- Bug fix: Function rdbms_setcontent did not insert textnodes if the content was empty
- Bug fix: Function rdbms_copycontent did not copy all content of a container from table textnodes

Version 6.1.22
Release 09/2016
- Implementation of mobile device screen emulator for preview and live-view of pages
- Implementation of new main configuration setting for the definition of mobile devices and their screen size
- Implementation of a new preview and live-view of pages
- Renamed JS function openlivew to openobjectview
- Implementation of view parameter for JS function openobjectview
- Removed JS function escapevalue from control_objectlist_menu and control_content_menu
- Improvements of Navigator resizing
- Modifications in JS library for contextmenu for new previews
- Bug fix: control_objectlist_menu did only allow unzip of files in page structure 
- Improvements in Nativy Plugin incl. a new Plugin configuration file and the implementation of the nativy API to support orders via context menu

Version 6.1.23
Release 09/2016
- Improvements and modifications in frameset_main, explorer, and link_edit_explorer
- Improvements and modifications in function showcompexplorerr of UI API
- Integration of search history autocomplete feature in link_edit_page and function showcompexplorerr of UI API
- Bug fix: Function showcompexplorerr of UI API did verify access permissions before a default location has been set
- Implementation of sandbox attribute for preview of pages in iframe of link_edit_page
- Improvements in page_preview
- Implementation of live view in new window for pages (in case the view in an iframe is not blocked) in explorer_objectview
- Bug fix: editoru and editorf referred to old jQuery library

Version 6.1.24
Release 09/2016
- Implementation of annotation feature for documents
- Implementation of redndering of pages from documents in function createmedia in media API
- Implementation of annotation tool for documents in function showmedia in UI API 
- Implementation of new function getpdfinfo in media API
- Bug fix: Mobile Edition did call undefined minNavFrame and maxNavFrame JS function
- Modifications in viewport of frameset_content
- Various modifications in Mobile Edition in all administration features
- Removed Im/Export from Mobile Edition
- Modifications in live-view and preview for improved mobile Safari support
- Modifications in CSS of Mobile Edition
- Design improvements in minimize and maximize functions of all Navigators
- Bug fix: Function rdbms_searchcontent did INNER JOIN instead of LEFT JOIN on table textnodes for a general search
- Bug fix: Function rdbms_searchcontent did not verify the taxonomy IDs correctly

Version 6.1.25
Release 09/2016
- Improvements in function manipulateobject in main API for cut & paste action
- New standard event log entry for successfully moved objects
- Bug fix: Function showcompexplorer did not load publication inheritance setting before defining the root location
- Bug fix: explorer_objectview used unassigned variable

Version 6.1.26
Release 10/2016
- Modification of function getfavorites to support object hash as key in result array
- Bug fix: Direct download did not work for favorites due to missing object hash
- Modification of viewport for frameset_content to fit smaller screens on mobile devices (initial zoom factor 0.64)

Version 6.1.27
Release 10/2016
- Bug fix: The translation service Plugin did not provide the domain if the autologon service has not been enabled
- Implementation of minimum file size check of created ZIP files in function zipfiles in media API
- Implementation of new search history for external search engine of repository
- Undefined variable in function createuser and edituser in main API
- Improvements in install script for MS Windows
- Bug fix: Function editpublication in main API did not verify if the config file exists before loading it

Version 6.1.28
Release 10/2016
- Bug fix: Function getserverload did not exclude function sys_getloadavg on Windows OS
- Implementation of new workouround for calculating the number of CPU and system load on Windows OS in function getserverload in get API
- Changes in class HyperMailer to support future PHP versions
- Bug fix: Function writehistory of external search engine in repository performed a file lock on a non-existing log file

Version 6.1.29
Release 11/2016
- Implementation of publication access of a user in function getusersonline (present list of users based on their publication access)
- Improvements in installation script to support other directory names of the hyperCMS root
- Definition of crypt_level in install script
- Implementation of company/billing data form for translation service Plugin
- Bug fix: Function plugin_parse of plugin API did not reset context array
- Improvements regarding plugin items in context menus
- Activation of the context menu of the translation service plugin on installation
- Bug fix: File extensions defined in the example page templates did not match PHP
- Various improvements in the installation script
- Bug fix: SQL statements for the database table 'textnodes' used a wrong attribute name for the full text index

Version 6.1.30
Release 11/2016
- Bug fix: The installation script did not create the user account if no e-mail address has been provided for the administrators account
- Improvements in function update_container_v6118 to avoid log entry during installation
- Improvements in function createmedia and createthumbnail_video in media API
- New default plugin configuration file for the installation

Version 6.1.31
Release 12/2016
- Modifications in main CSS of all themes
- Redesign of logon screen with support for wallpaper service
- Implementation of new function getwallpaper in get API
- The e-mail address of a user has been changed to a mandatory field in user_edit
- Improvements in mobile CSS for mobile clients

Version 6.1.32
Release 12/2016
- Modification of max. file size for creating previews in main config file
- Modification of function showmedia in UI API in order to recreate annotation images if the file has been changed
- Modification of function createmedia in media API in order to remove annotation images before recreation
- Bug fix: Undeclared variable in function indexcontent of media API
- Removed language attribute from all script tags
- Removed comment brackets from all script tags
- Modified standard screen size of 576 x 432 pixel for preview videos

Version 6.1.33
Release 12/2016
- Removed trim of template content in function edittemplate in main API
- Bug fix: control_objectlist_menu and control_content_menu did not reset media options if the original asset has been requested
- Bug fix: Service mediadownload and mediawrapper did not verify the converted file
- Improvements in function createdocument in media API
- Implementation of annotation status to skip save of annotations if no remarks have been done on documents
- Bug fix: Removed touch of media files in service savecontent in order to avoid recreation of annotation images for documents

Version 6.1.34
Release 12/2016
- Removed error log event in function link_db_load in link API due to an error log entry if the link index is empty
- Improvements in function uploadfile in main API
- Implementation of verification of executable in function createdocument in media API
- Bug fix: Function createmedia did try to recreate PDF preview file from documents without verifying that an executable for the conversion exists

Version 6.1.35
Release 01/2017
- Modifications in function rdbms_searchcontent in order to support the combination of a general search and detailed search
- Implementation of new JS function hcms_convertGet2Post in main.js
- Implementation of content extraction from container in media_edit_page in order to avoid issues with the length restriction of GET requests
- Change of order of GET parameters in template engine and frameset_edit_media
- Implementation of content extraction from container in link_edit_page in order to avoid issues with the length restriction of GET requests
- Change of order of GET parameters in template engine and frameset_edit_link
- Modification of return value of function convertchars in main API in order to return original value instead of false on error
- Removed character set conversion of link text and alttext in media_edit_page and link_edit_page

Version 6.1.36
Release 01/2017
- Added log information in function publishobject and unpublishobject for success events
- Display only a limit of 1000 log entries from event log, starting with the last log entry
- Improvements in log_export
- Improvements in funtion indexcontent to avoid empty content containers after an error
- Bug fix: Funtion indexcontent did not set $mgmt_imagepreview as global and therefore did not convert images for OCR
- Improvements in template engine to support manual inserted links to media files

Version 6.1.37
Release 01/2017
- Modifications in function createmultidownloadlink in order to create reusable files names for the ZIP files, so the same ZIP files can be reused for download
- Removed ZIP compression in function zipfiles in media API in order to speed up the download/compress process of large file collections
- Modifications in function getvideoinfo of get API in order to support the extraction of the video codec
- Modifications in function savemediaplayer_config and readmediaplayer_confign in media API in order to support audio and video codecs (new version 2.4 of video config file)
- New text added to all language files
- Modifications of file download layer in control_objectlist_menu and control_content_menu
- Implementation of new function rdbms_searchrecipient in DB Connect
- Implementation of recpient search feature in explorer und search_objectlist
- Bug fix: Global variable $mgmt_docpreview has been missing un function showmedia of UI API
- Bug fix: page_info_recipients used wrong result array keys for sender (from_user) and recipient (to_user)

Version 6.1.38
Release 01/2017
- Modifications in search_objectlist in order to display columns of list view correctly when minimum columns are used (usage of CSS min-width for the location column)
- Modifications in function restoremediafile since cross partition move/rename of files is not supported by PHP (rename is replaced by copy and delete)
- Modifications in function getvideoinfo in get API to present video and audio codec names in uppercase letters
- Implementation of Valiant360, a player for 360 degree panorama videos and photos in the JS libraries (does not support mobile browsers)
- Implementation of eleVR web player in the JS libraries, the player lets you watch 360 flat and stereo video on your Oculus Rift or Android device with VR headset (Cardboard, Durovis Dive, etc.) from a web browser. It is written with js, html5, and webGL (Using keyboard rotation controls, the player works on standard Firefox and Chrome on Windows, Mac, and Linux. It also runs on Safari if webgl is enabled)

Version 6.1.39
Release 02/2017
- Bug fix: Function rdbms_searchrecipient in DB Connect did not trim the user names for the query
- Implementation of new function update_recipient_v6139 in Update API in order to create new indexes on table recipient
- Modifications of createtables.sql in order to add the news indexes on table recipient for the installation routine
- Modifications in function userlogin in Security API in order to execute the new update on the database
- Modification of default max. search results to 300 in function rdbms_searchcontent, rdbms_searchuser, and rdbms_searchrecipient in DB Connect
- Modification of default max. event entries in log viewer to 500 records in log_list

Version 6.1.40
Release 02/2017
- Modifications in explorer in order to support search of user name and e-mail address of a sender or recipient
- Modification of default max. event entries in log viewer to 500 records in logviewer plugin
- Renamed software version variable $version to $mgmt_config['version'] in all files
- Bug fix: Modification in template engine to support upper and lower case characters for the replacement of application tags in order to avoid errors during publishing

Version 6.2.0
Release 02/2017
- Implementation of support for individual/external user ID in wrapper and download links in order to write the user ID of the request into the daily statistics
- Implementation of a new hyperCMS tag for the geolocation in order to enable the display and manual definition of an objects geo location
- Modifications in template editor in order to support new geolocation tag
- Modifications in template engine in order to support new geolocation tag and display map with marker
- Modifications in savecontent service to support the geolocation
- Improvements in method getResultRow in DB Connect
- Improvements in function rdbms_externalquery in DB Connect
- Improvements in function checkpassword in Security API
- Corrected window size when creating new users in function creatuser in Main API
- Modifications in function createmedia for improved JPEG backround support in Media API

Version 6.2.1
Release 03/2017
- Implementation of automtatic and manual face detection for images and videos on client side (no mobile device support!)
- Implementation of new configuration parameter $mgmt_config['facedetection'] in main configuration file
- Implementation of new CSS class 'hcmsFace'
- Implementation of face detection data in service savecontent
- Modifications in function uploadfile in Main API in order to support face detection data removal after a file update
- Renamed JS function setVTTtime to setPlayerTime
- Update of all language files
- Upgrade of template engine to JQuery version 3.1.1 in order to support MS Edge for video face detection support
- Improvements in explorer, hypercms_project, folder_explorer, and DB Connect
- Modification of function showmedia in UI API in order to set width and height of annotation canvas
- Update of annotions JS library
- Implementation of download function for annotations in UI API
- Implementation of annotation tools locking (select no tool)
- Renamed JS function hcms_sortObject to hcms_sortObjectKey in main.js
- Implementation of new JS function hcms_sortObjectValue in main.js

Version 6.2.2
Release 03/2017
- Support of face detection for images and videos for mobile devices (function showmedia and buildview)
- Modification of window size for action 'checkin' and 'favorites_delete' in JS function hcms_createContextmenuItem in contextmenu.js
- Conversion of all window sizes from string to integer in contextmenu.js
- Removed hardcoded width and height window attributes from all JS functions in contextmenu.js 
- Bug fix: Google API icons reference was set to HTTP instead of HTTPS in search_form
- Bug fix: Corrected HTML-tag in page_view, popup_save_dropbox and image_rendering to support HTML5
- Bug fix: Function lockobject in main API used non-existing function objectname instead of function getobject for folders
- Bug fix: Function unlockobject in main API used non-existing function objectname instead of function getobject for folders

Version 6.2.3
Release 03/2017
- Implementation of new JS functions for the activation of the different search tabs and features in explorer
- Removed second action attribute in search form for recipient search in explorer
- Implementation of save search deactivation after each saved search
- Modification of open search tabs after initialization of explorer
- New configuration of search tab button actions in explorer
- Implementation of open and close action for plus/minus buttuns of search tabs in explorer
- Implementation of lock feature for submit of search if all search tabs in explorer are closed
- Improvements in DB Connect
- Improvements in userlogin
- Implementation of a processing message for each file upload in popup_upload_html
- Modification of CSS for file upload bar
- Modification of viewport scale in popup_upload_html
- Bug fix: The action name has not been initialized in explorer leading to a wrong search action
- Bug fix: ImageMagick failed to convert PSD files since it requires the layer [0] after the source file name

Version 6.2.4
Release 04/2017
- Bug fix: Function createmediaobject did not verify if file name is a temporary file by calling function is_tempfile
- Bug fix: Function createfolder did not verify if folder name is a temporary file by calling function is_tempfile
- Bug fix: Function getwallpaper did not provide the selected wallpaper name to the wallpaper service
- Bug fix: Removed media attribute from JS function hcms_sharelinkPinterest due to missing support from Pinterest
- Bug fix: Somali language file included double quote in text string
- Bug fix: Albanian language file missed a double quote to close text string
- Modification of viewport in frameset_content
- Support for audio files in social media sharing
- Implementation of new JS function hcms_extractDomain in main.js
- Implementation of new input parameter for media file in function showsharelinks in UI API in order to activate and deactivate share buttons
- Modificaton of get request parameters names in JS function hcms_sharelinkFacebook in main.js
- Modification in template engine to support new parameter of function showsharelinks
- Implementation of new JS function hcms_clearSelection in contextmenu.js in order to remove highlighted text after selecting multiple objects

Version 6.2.5
Release 04/2017
- Implementation of recycle bin for objects as new system feature
- Implementation of new database attribute 'delete_user' and 'delete_date' in table object in order to store the user name after moving objects to the recycle bin
- Modification of createtables.sql in order to support the new table attributes 
- Implementation of new function update_database_v625 in update API and function userlogin in security API
- Modification of function rdbms_getobject_hash in DB Connect to verify deleted status of an object
- Modification of function rdbms_searchcontent and rdbms_replacecontent to include deleted status of an object in the query
- Modification of function rdbms_getobject, rdbms_getobjects, rdbms_getobject_id, and rdbms_getobject_hash in order to support objects which are marked as deleted
- Modification of function createaccesslink, createwrapperlink, and createdownloadlink in order to support objects which are marked as deleted
- Modification of explorer, explorer_objectlist, search_objectlist, link_edit_explorer, function showcompexplorer, and rich text editor in order to support objects which are marked as deleted
- Modification of function manipulateallobjects to support new actions "deletemark" and "deleteunmark" in order to mark and unmark objects as deleted
- Modification of function processobjects to support new actions "deletemark" and "deleteunmark" in order to mark and unmark objects as deleted
- Implementation of new function deletemarkobject and deleteunmarkobject in main API in order to mark and unmark objects as deleted
- Modification of globals in various function of main API
- Modification of function cutobject, copyobject, and copyconnectedobject to support saving clipboard entries in session or only as return value
- Removed global variable temp_clipboard from all functions in hyperCMS API
- Implementation of new restore action into JS function hcms_createContextmenuItem in contextmenu.js
- Implementation of new service in daily jobs to empty the objects in the recycle bin after the defined timespan
- Modification and improvements in job 'minutely'
- New icon for the recycle bin for all themes
- Implementation of new text entries in all language files in order to support the new recycle bin features
- Implementation of new function rdbms_getdeletedobjects in DB Connect
- Implementation of new function rdbms_setdeletedobjects in DB Connect
- Implementation of new main configuration variables for recycle bin support
- Improvements in DB Connect
- Suppress errors for function file_get_contents in the hyperCMS API
- Removed unused icons from themes
- Modification of function getbrowserinfo to return false if server inforamtion is not available
- Implementation of objects of all users in the recycle bin for users with superuser permission
- Modification of daily job to support processes that take longer for calculation the total storage space used
- Implementation of logging  in daily job for used storage space calculation
- Bug fix: Function uploadfile used undefined variable
- Bug fix: Function manipulateallobjects in main API did not save error log entries
- Bug fix: Function manipulateallobjects in main API did paste folders correctly when using the same paste action multiple times
- Bug fix: Function processobjects in main API did not process folder objects
- Bug fix: Function rdbms_searchcontent in DB Connect did not initialize array element for sarch queries
- Bug fix: Function rdbms_searchcontent in DB Connect did not filter array elements for array 'sql_expr_advanced'
- Bug fix: Paste of text in the search form has not been working since the JS function hcms_clearSelection has been used in the Navigator for left click events

Version 6.2.6
Release 05/2017
- Implementation of IP logging in function allowuserip in security API
- Implementation of download links on demand due to SQL query performance issues with large amounts of objects in one folder
- Implementation of new function hcms_getlink in contextmenu.js
- Modification of function hcms_activateLinks in contextmenu.js in order to support the on demand downloadlinks
- Implementation of new service getlink
- Implementation of new function remove_utf8_bom in main API
- Modifications in explorer_objectlist and search_objectlist in order to support on demand links
- Implementation of load screen in explorer_objectlist and search_objectlist
- Implementation of CSS class hcmsLoadScreen in navigator.css
- Modification of function rdbms_setdeletedobjects in DB Connect to rename all objects using .recycle as file extension
- Modification of function publishobject and unpublishobject in main API to block the publishing of recycled objects
- Implementation of new main configuration setting for search operator in main configuration file
- Modification of function unzipfiles in media API to extract content directly without acreating a folder with the ZIP file name
- Modification of function createmediaobjects in main API to support overwriting of existing objects
- Modification of function valid_publicationnaem, valid_locationname, and valid_objectname to return true instead of the value
- Implementation of new function objects_exists in main API
- Modification of control_objectlist_menu to support the new return values of the function valid_publicationnaem, valid_locationname, and valid_objectname
- Migration from opendir to scandir in all parts of the system
- Modification of function html_decode and html_encode to return the input value in case of an empty result
- Modifications of popup_action regarding load screen and JS
- Modification of function unzipfiles in media API in order to replace existing objects
- Modification of function specialchr_encode in main API to avoid double encoding of names
- Modification of function getfileinfo in Get API to support new deleted result parameter
- Modifications in explorer, folder_explorer, link_edit_explorer, and rich text editor to support the new return parameter for deleted objects from function getfileinfo
- Modification of function getcontainername in get API in order to verify container location
- Modifications in log_list in order to display longer descriptions
- Update of all language files
- Bug fix: Function rdbms_copycontent in DB Connect did not escape all values for the queries
- Bug fix: Function createdownloadlink and createwrapperlink in main API did not specify the correct input variables for the error logging
- Bug fix: Function rdbms_searchcontent in DB Connect did add the where clauses without leading AND for the count query
- Bug fix: Function showobject in UI API did not display folders correctly (colspan was missing)
- Bug fix: Labels of filters refered to undefined tags in control_objectlist_menu
- Bug fix: Function createmedia did not process files smaller than 10 bytes
- Bug fix: Function showcompexplorer in UI API did not display subfolder content in DAM mode
- Bug fix: The navigator did not clean the advanced search form if no template has been selected

Version 6.2.7
Release 06/2017
- Implementation of HTTP header for all services which return a JSON object
- Modification of function readnavigation and createnavigation in UI API
- Modification of function showmedia in UI API in order to enable detailed preview if user has create or download permissions
- Modification of text variable in group_edit_form from index downloadview-file to download-file
- Modification of JS function hcms_openWindow in main.js in order to support empty feature input value and set default window size
- Implementation and update to JQuery UI version 1.12.1
- Implementation of new div layer instead of new popup window for mage editing preview
- Implementation of JQuery zoomcrop for preview of edited images
- Implementation of new div layer instead of new popup window for geolocation statistics of media objects
- Design modification of geolocation viewer
- Implementation of new JS function hcms_getViewportWidth and hcms_setViewportScale to set initial scale factor for mobile devices
- Implementation of dynamic initial viewport scaling based on screen width
- Implementation of iPhone document support in function showmedia in UI API
- Implementation of new service setviewport
- Implementation of new JS function in frameset_content to post viewport width to service setviewport
- Implementation of viewport width support in template engine in order to render forms and media based on the viewport width
- Implementation of new session variable hcms_temp_viewportwidth to store the width of the viewport
- Bug fix: Variable $pageview_parameter has not been initialized in template engine
- Bug fix: Function rdbms_setdeletedobjects did not correct the file name

Version 6.2.8
Release 07/2017
- Implementation of 5 seconds timeout for IP geolocation service call
- Implementation of new parameter for write direction of each language
- Implementation of new Navy design theme
- Modifications in Arabic language file
- Modifications in Navigator in order to display 'undefined' for unsupported entries of meta data hierarchies
- Removed all double quotes of titles/lablels for fields in the systems GUI
- Bug fix: The translation service plugin did request an image via non SSL connection (Requires refresh of plugin data in the plugin management)

Version 7.0.0
Release 08/2017
- Improvements in function getsearchhistory in the Get API
- Implementation of new GUI for the system including new icon sets with support of 4K displays
- Implementation of new rename icon and action to support renaming of objects and folders in control_objectlist_menu
- Removed support for small icons from function getfileinfo in Get API
- Removed small file icon set (gif) from themes
- Implementation of new JS function hcms_elementbyIdStyle in main.js
- Implementation of new tabs based on CSS instead of background images
- Improved loading speed of all icons due to single file icon set 
- Removed navigation history buttons from control_content_menu
- Removed publication filter from keyword search in explorer
- Enabled help buttons for all controls in mobile edition
- Improvements in task_list, search_objectlist 
- Implementation of new function getobjectlistcells in Get API 
- Implementation of a screen resolution matrix for mobiles and desktops for explorer_objectlist and search_objectlist
- Modifications of JS function hcms_getViewportWidth in main.js in order to support desktop window width
- Modifications in JS function hcms_setViewportScale in main.js
- Implementation of new logic for JS function hcms_detectBrowser in order to detect more mobile devices
- Replaced is_int by new logic in explorer_objectlist and search_objectlist due to issues after redesign
- Changed viewport settings for user_sendlink
- Implementation of video color search support based on video thumbnail image
- Merged image search and file-type search to media search
- Reduced toolbar length by implementation of new edit selector in control_objectlist_menu
- Modifications in function showtopbar and showtopmenubar in UI API in order to support larger button icons
- Implementation of new JS function hcms_hideSelector
- Implementation of click events in order to hide opened selector in control_objectlist_menu
- Modifications in function showmedia in UI API with new design layout
- Modifications in function createmedia to support different empty values (0 and false) for the watermark parameter (wm)
- Removed JS function hcms_resizeFrameWidth due to changes in function switchsidebar in control_objectlist_menu
- Implementation of columns for sorting for gallery views
- Enabled annotations for iOS devices (iPad and iPhone)
- Improvements in function getmapping in Media API
- Improvements in function createindex and searchindex in external Search API
- Modifications in annotations to disable browser textarea resizing (does not change maxwidth) and new textarea default size
- Modifications of face/object detection in order to delete detected or marked faces and objects by delete button
- Modifications in service savecontent in order to remove empty entries from faces JSON string
- Modifications in video editing/montage GUI
- Modifications in VTT editing GUI
- Moved function getpdfinfo from Media to Get API
- Implementation of ImageMagick identify command support in function getpdfinfo in Get API
- Update of all user manuals
- Updates in language files
- Design update for all standard plugins
- Bug fix: The empty cells in object lists have not been added at the end
- Bug fix: The folder title has not been displayed if a multiobject has been submitted to control_objectlist_menu
- Bug fix: Resizing of columns has not been enabled if window size changes in user_objectlist
- Bug fix: Mediaformat has not been defined for select box in media_edit_explorer
- Bug fix: Function showprojectrecord in Project API used wrong parameter name for publication when selecting users
- Bug fix: Wrong index name for deleted in link_edit_explorer
- Bug fix: Modified date for template media files has not been set in function showmedia in UI API
- Bug fix: Function correctfile in main API did convert locked file names and removed @ before user name
- Bug fix: JS function collectFaces in template engine did include empty entries in the JSON object
- Bug fix: Function showmedia in UI API did not calculate the proper height of documents for the preview

Version 7.0.1
Release 08/2017
- Implementation of new main configuration parameter $mgmt_config['wallpaper'] to define a wallpaper for the logon and home screen
- Redesign of home screen using a background image incl. changes in CSS classes and new CSS classes
- Moved logout, home screen, navigation tree, and search buttons to top bar in desktop version
- Mobile edition remains unchanged except for removed chat button from the navigation tree
- Implementation of new JS functions for the top bar buttons
- Modifications in CSS of all themes
- Implementation of new top bar logo for all themes
- Design modifications in installation routine
- Modifications in JS function hcms_mobileBrowser in main.js in order to include tablets as mobile devices
- Modifications in function is_mobilebrowser in Main API to detect smartphones and tablets
- modifications in  img class in main.css and navigator.css to improve image rendering quality in IE browser
- Modifications in colorful design theme
- Modifications in template engine for the width of form fields
- Modifications in contextmenu.js, control_user_menu, and user_objectlist in order to increase the edit window height
- Modifications in project and task management module
- Removed local styles from all framesets
- Design modifications in user_sendlink
- Modifications in top_info 
- Update of user manuals
- Bug fix: CSS class hcmsWorkplaceObjectlist in main.css caused issues with scroll bars
- Bug fix: Object lists did not exclude deleted objects from the total count of items

Version 7.0.2
Release 09/2017
- Implementation of open window feature in home box for the statistics of the users favorites
- Implementation of multiple color search feature
- Modifications in function searchcontent in DB Connect in order to exclude empty color keys
- Modifications in flat design theme
- Design and functional modifications in simple statistics plugin
- Implementation of new free storage home box displaying total and free storage space
- Modifications in black design theme
- Implementation of import order for different object types in order to import folder and media objects before components and pages so the folder exists before importing additional objects and media links used in pages and components can be resolved during the import process
- Modifications in statistics_of_favorites home box in order to support and display folder names
- Modifications in annotation toolbar in order to keep icons inline for smaller images
- Design modifications in userlogout
- Modifications in version_template in order to open source code in multiple windows
- Modifications of popup window sizes for Chrome browser
- Modifications in function createfolder, createobject, createmediaobject, renamefolder, renameobject in main API in order to exclude .recycle in object names
- Modifications in function createmultidownloadlink in main API in order to force the file download and not to use the local browser cache
- Implementation of scroll-to-top of the navigatior when changing from search to the navigator
- Design modifications in simple statistics plugin
- Implementation of Hybridauth library in connector
- Implementation of main configuaration settings for the objects window width and height
- Implementation of new functions windowwidth and windowheight in UI API
- Implementation of new windowwidth and windowheight feature in the system incl. the use of JS localstorage for the contextmenu
- Implementation of new window positioning modes in JS function hcms_openWindow in main.js
- Enabled keyword tag in template editor for pages and components
- Bug fix: Icon of Plugins in context menu have not been resized by CSS class in JS function hcms_showContextmenu in contextmenu.js
- Bug fix: Template engine displayed wrong icons for single component in WYSIWYG interface
- Bug fix: Function zipfiles in media API included recycled files in the ZIP file and cached ZIP file created for the download
- Bug fix: Function rdbms_getfilesize in DB Connect did not exclude recycled files in the query
- Bug fix: Function getlistelements in Get API could not access the global language setting
- Bug fix: Tagit for keyword lists did present the helper

Version 7.0.3
Release 10/2017
- Implementation of CSV metadata import for assets
- Modification in various functions in all API modules in order to encode the input object name
- Implementation of new function importmetadata in Meta API to support metadata import based on CSV format
- Modification of default value for 3rd input parameter of function deconvertpath in Main API
- Modifications in function buildsearchform to support editable field width
- Design modifications of headlines in search form of navigator
- Implementation of boolean search (AND/OR) in search forms and search_objectlist
- Implementation for the support of free space and dash in tag IDs in the template editor
- Implementation of file/media-type for the assignment of metadata fields to certain media types
- Implementation of function is_compressed in Main API
- Modifications in function createdocument in Media API in order to support thumbnails of any document format
- Modifications in function convertchars in Main API in order to support automatic detection of the character set if not provided as input
- Modifications in service savecontent in order to compare old and new character set on lower case basis
- Modifications in function getvideoinfo in Get API in order to extract video rotation information
- Modifications in function savemediaplayer_config and readmediaplayer_config in Media API to support video configuration file version 2.5 including the videos rotation
- Modifications in template engine in order to support JS function setsavetype for various elements
- Implementation of new main configuration setting $mgmt_mediaoptions['autorotate-video'] to rotate videos automatically
- Implementation of auto rotation feature for rotated videos incl. correction of metadata in function createmedia and createthumbnail_video in Media API (original video will be kept)
- Implementation of new text variables in all language files
- Implementation of new function showmapping in UI API to generate HTML form for media mapping
- Modification in mapping editor 'media_mapping' to support the new mapping form
- Modifications in function getmapping in Meta API in order to support new function showmapping
- Implementation of new SOAP webservices workflow_accept and workflow_reject in OpenAPI
- Implementation of new function prepareWSDL in SOAP API
- Modifications in WSDL template in order to support new functions
- Removed function prepare_location from OpenAPI
- Removed sendmail parameter from SOAP webservices for task in OpenAPI
- Modifications of create object layer in control_content_menu
- Modifications in order to optimize function deconvertpath in Main API
- Modifications in function acceptobject and rejectobject in Workflow API in order to support error messages for missing input
- Modifications in SAOP client test scenarios for testing the SOAP webservices
- Define default language code in API loader to include the Englisch language file if not language code has been provided
- Design modifications in popup_message window
- Implementation of new JS function openmessageview in frameset_content and control_content in order to support workflow message popup window
- Update of template designers guide
- Update of connectors guide
- Design modifications in workflow manager
- Design modifications in colorful theme
- Integration of upload popup window (HTML and Flash) for update of media files in in frameset_content in order to avoid opening a new popup window
- Removed CSS style for image-rendering:pixelated for Chrome browser due to bad rendering quality of icons
- Modifications in project management toolbar in order to avoid a line break
- Bug fix: Function getmetadata in Meta PI did assign wrong parameter to function call deconvertpath
- Bug fix: The template engine did not present text input areas in template view for info-type "meta"
- Bug fix: Image references have not been correct in template_help 
- Bug fix: Loading bar did not work when reindexing metadata in media_mapping
- Bug fix: Service savecontent did not access the array element of the result of function getcharset
- Bug fix: Article edit button has not been displayed in inline editing mode
- Bug fix: Undefined global variable $user in function convertimage in Media API
- Bug fix: More button in objectlists had no CSS class assigned
- Bug fix: Issue with accesspermissions of standard users, the navigator does not display the folders a user has access to
- Bug fix: Issue due to missing path separator support in function deconvertpath in Main API
- Bug fix: Function showcompexplorer in UI API did not exclude recycled folders and objects
- Bug fix: folder_explorer, link_explorer, link_edit_explorer, export_explorer, and group_access_explorer did not exclude recycled folder and objects
- Bug fix: The navigator did not exclude recycled folders if compaccess or pageaccess of a user has been applied instead of the root access to pages and assets
- Bug fix: Function acceptobject  and rejectobject in Workflow API did not provide the object name in the result array
- Bug fix: Function checkworkflow did not assign loaded template data to viewstore variable, if the viewstore has not been provided as input
- Bug fix: Template engine did not initialize map for 'formlock' view mode
- Bug fix: Function getobjectlistcells in Get API returned zero if viewportwidth was too small
- Bug fix: Function getworkflowitem did not verify the result

Version 7.0.4
Release 11/2017
- Implementation of new main configuration parameter $mgmt_config['restore_exported_media'] in order to define the location of exported media files
- Implementation of restore setting in function restoremediafile in order to restore the media file or keep at in the backup (export location)
- Modifications in function getmapping in Meta API in order to use single quotes instead of double quotes in the mapping definition
- Modification of FFMPEG standard audio codecs (libfdk_aac) used for conversion due to missing support of libfaac in most recent FFMPEG versions
- Removed autorotation process for videos in function createmedia in Media API and integrated the autoration in the standard video rendering process in order to reduce a rendering step
- Set option -noautorotate for all FFMPEG rendering modes to avoid double auto rotation of videos
- Replaced option -sameq by -q:v 4 in function createmedia in Media API since the option is not longer supported by FFMPEG
- Replaced H.263 by H.263+ video codec setting in main configuration
- Implementation of Full and Ultra HD video support for video editor
- Removed FLV support for video player rendering option in service rendervideo
- Changed maximum video size settings in service rendervideo in order to support videos larger than Full HD
- Changed maximum video rendering time to 2 hours in service rendervideo
- Moved from deprecated s:v video size setting to new video filter based video scaling in function createmedia in Media API without changing the input media optionsfor compatibility
- Modification of the standard media rendering options for MPEG videos in main configuration file
- Implementation of new include file mediaoptions.inc.php for media definitions
- Modifications in function getvideoinfo in Get API in order to verify extracted audio and video parameters
- Modifications in function hcms_crypt in Security API and remote client in order to have a 2 digit salt for DES encryption
- All .htaccess files in data and repository install directories and hypercms directory have been migrated from Apache 2.2 to 2.4 directives. The .htaccess need to be adopted accordingly if an older version than Apache 2.4 is used.
- Modifications in function editpublication in Main API in order to support Apache 2.4 directives
- Modifications in function buildview in template engine in order to set the character set (required by Apache 2.4 if not UTF-8)
- Modifications in CSS classes of colorful design theme
- Option -noautorotate of FFMPEG can be disabled by the main configuration setting: $mgmt_mediaoptions['autorotate-video'] = false; This is required for older FFMPEG versions without noautorotate option support.
- Hide Faces-JSON content in function getmetadata in Get API 
- Implementation of new input parameter autorotate in function createthumbnail_video in Media API in order to control auto rotation
- Implementation of default character set ini-setting in article_edit, page_multiedit, template_edit, template_source, version_content_compare, and version_template_compare since browsers ignore the metadata character set definition (Apache 2.4 related)
- Implementation of logging for deprecated access tokens in userlogin
- Implementation of a fallback rule for encryption standards in function hcms_encrypt and hcms_decrypt in Security API
- Improvements in installation routine
- Design modifications in project management
- Resizing of upload window in control_content_menu
- Implementation of a sort algorithm in function getprojectstructure in Project Management API in order to sort subprojects by startdate
- Implementation of a select area for selecting objects using the mouse click and drag feature
- Implementation of new JS function hcms_selectArea and hcms_endSelectArea in contextmenu.js
- Modifications in explorer_objectlist, search_objectlist, queue_objectlist, and user_objectlist in order to support the select area
- Modifications in various JS functions in order to support the select area in contextmenu.js
- Implementation of a new CSS class named hcmsSelectArea for all design themes
- Implementation of full screen video preview
- Modification of function showmedia in UI API in order to use original video for higher video resolutions, if supported
- Design improvements in page_multiedit
- Modification of search expression verification in frameset_main
- Bug fix: Video editor did not exclude 'thumbnail-audio' media option
- Bug fix: Function restoremediafile in Main API did not remove the symbolic link before restoring the media file, so the media file could not be restored back to the media repository
- Bug fix: Function showmapping in UI API did not escape special characters for the hidden form field
- Bug fix: Wallpaper configuration setting has not been verified in userlogin
- Bug fix: Verification of variable $contentdataevent in service savecontent was missing
- Bug fix: Function savemediaplayer_config in Media API did not assign proper array key to video bitrate
- Bug fix: CSS class for button size has not been assigned to saveclose button
- Bug fix: page_multiedit did not close JS statement in JS function checkImageForm
- Bug fix: control_objectlist_menu did reset the variable pagename if a multiobject and page has been provided
- Bug fix: Function createmedia in Media API did not set the correct size of the original video and used the size of the rendered preview video
- Bug fix: control_objectlist_menu did not display the number of selected objects if a folder has been selected as last object
- Bug fix: Function createmedia in Media API did not set proper width and height of cropped images if GD library has been used
- Bug fix: component_edit_page_single did not remove separators from single component string
- Bug fix: Template engine did not remove separators from single component string
- Bug fix: Mail links opened in Mobile Edition did not disable the search functionality

Version 7.0.5
Release 02/2018
- Modifications in function hcms_crypt in Security API in order to create a valid salt for encryption
- Modifications in main config file config.inc.php in install directory
- Implementation of language mapping for tesseract OCR in include/tesseract_lang.inc.php
- Implementation of OCR language in function indexcontent in media API based on the language setting of the user
- Modifications in function avoidfilecollision in order to support a second input parameter to enforce the execution and avoid file collisions
- Modifications in site_edit_form in order to copy publication configuration file to temp directory and load it from there
- Modifications in site_edit_form in order to reset all old configuration values
- Modifications in control_site_menu in order to apply natural case sort for the list of publications
- Implementation of loading screens for import and export of objects in Connector module
- Modifications in template engine in order to avoid overwriting CSS settings for the language select box
- Modifications in template engine in order to set language select box after the document has been loaded (to avoid manipulation by JS frameworks)
- Modifications in function cratenavigation in UI API in order to support only index files as navigation items
- Modifications in template engine to remove external styles in WYSIWYG view for all edit icons
- Implementation of code log for published objects with errors  and new error log entries in function publishobject in Main API
- Modifications in import in order to verify symbolic links
- Modifications in template_edit in order to automatically expand editor width 
- Modifications in function createtempfile in Encryption API in order to avoid database queries for unencrypted files
- Modifications in search_objectlist and explorer_objectlist in order to verify the objectlist column definitions before executing function getmetadata_container
- Modifications in function query in DB Connect in order to support milliseconds for the query execution time logging
- Modifications in function various APIs and in DB Connect in order to support multiple return values for the search result
- Modifications in function showcompexplorer in UI API in order to avoid scrolling to top and to support the new search results array
- Modifications in link_edit_explorer in order to avoid scrolling to top and to support the new search results array
- Modifications in template engine in order to replace all link tags by onclick events on image icons
- Modifications in function rewrite_targetURI in Main API in order to support the new search result array
- Modifications in OpenSearch Connector in order to support the new search result array
- Implementation of new update function update_database_v705 in Update API
- Implementation of new function rdbms_setmedianame and rdbms_getobject_info in DB Connect
- Modifications in createtables.sql in order to add new attribute media to table objects
- Modifications in function rdbms_createobject in DB Connect in order to support the media name (new input parameter)
- Modifications in Main API in order to support the new input parameter for function rdbms_createobject
- Added update function update_database_v705 to function userlogin in Security API
- Modifications in control_content_menu and control_objectlist_menu in order to support icons for the display of the position
- Modifications in the max_digital_filename verification in the system
- Modifications in Mobile Edition in order to display folders in the objectlist views as well
- Design modifications in Mobile Edition in control_queue_menu and control_user_menu
- Modifications in Geolocation search due to changes in the Google map API behaviour by Google
- Implementation of a new information feature for the Geolocation search
- Modifications in various JS function in contextmenu.js
- Updates in all language files
- Modifications in function rdbms_searchcontent in DB Connect incl. modifications in search_objectlist and home boxes in order to support the new result array
- Modifications in function hcms_crypt in Security API in order to verify the salt length for PHP function crypt
- Modifications in template engine to reduce the size of the edit buttons/icons in WYSIWYG view from 32 to 20 pixels
- Changed from help to info icon for annotations
- Implementation of new function createfilename in Main API in order to create a valid escaped file name
- Implementation of new function in_array_substr in Main API
- Design modifications and improvements in the Report Management module (alignment in table cells based on the data type, and the support of quotes for aliases)
- Modifications in the Report Management module in order to support nested attribute name in functions or mathematical expressions
- Support for all postscript file extensions to be treated as multiple page documents by function createmedia in Media API and function showmedia in UI API
- Implementation of multi-page annotation support for encapsulated postscript and SVG files in function showmedia in UI API
- Bug fix: The character set of the template source code has not been successfully extracted in template_source
- Bug fix: Modifications in site_edit_form due to issue with PHP file caching
- Bug fix: Function publishobject in Main API did not look for proper error code in rendered object
- Bug fix: List editor did not separate list value and text from a list entry defined in the template
- Bug fix: Refresh button in function showcompexplorer in UI API used wrong CSS class
- Bug fix: References to save button images haven been wrong in checkbox editor
- Bug fix: Template engine did not create proper JS code for tagit call if there has been no keyword list defined
- Bug fix: Removed parameter ctrlreload from first tab in control_content_menu to enable conotrol reloading when navigating in pages
- Bug fix:JS function hcms_endSelectArea in contextmenu.js did not verify if the element exists before applying a style
- Bug fix: JS function hcms_clearSelection in contextmenu.js did not verify if a selectarea html element has been defined (caused focus issue on input fields in MS Edge, IE, and Chrome)
- Bug fix: The report viewer of the Report Management did not forward the query variables to the CSV export
- Bug fix: Function uploadfile in Main API did not verify length of escaped file names and shorten them to the max. file name length value
- Bug fix: Function showmedia in UI API did set zero heights for annotations images if the original image dimensions can't be retrieved from the file
- Bug fix: Function showmedia in UI API did not set the correct width of the annotation toolbar

Version 7.0.6
Release 03/2018
- Implementation of video background wallpapers for the logon and home screen
- Modifications in function getwallpaper in Get API in order to support video wallpapers based on the version number
- Design modifications in popup_upload_html and popup_upload_swf
- Replacement of PHP function crypt for user passwords while supporting the old password hashes
- Modifications in function hcms_crypt in Security API and remote client (replacement of function crypt by hash_hmac using the systems private key)
- Modifications in function getfavorites in Get API to remove duplicate entries
- Modifications in home screen to disable the selection and display of duplicate home boxes
- Support of transparent background for images when using the GD library in function createmedia in Media API
- Modifications in Bengali language file
- Renamed several text variables in language files and source code
- Modifications in function showmedia in UI API in order to not include original video files additionally to the sources if the requested video display size is smaller than the width limit of 640 pixels
- Implementation of preview width configuration for the preview and annotations for images and document, see $mgmt_config['preview_document_width'] and $mgmt_config['window_image_width']
- Modifications in the template engine in function showmedia in UI API in order to support te new config settings
- Implementation of multiple standard OCR languages to scan images for besides the language setting of the user
- Modifications in function indexcontent in Media API in order to support multiple OCR languages
- Modifications in site_edit_form in order to support multiple OCR languages
- Modifications in function editpublication in Main API in order to support OCR language settings
- Modifications in function showmedia in UI API in order to use only the provided image width as limit for the rendered image size
- Modifications in function showmedia in UI API in order to set a image quality of 98%
- Modifications of the standard image quality settings in the main config
- Implementation of scaling of the face/object markers on images and videos in the template engine in case the image or video size has been changed
- Implementation of phone number field as new user parameter
- Implementation of new function update_users_706 in Update API in order to add new XML node "phone" to the users
- Modifications in user_edit_form, function edituser in Main API, and all functions calls in order to support the new phone parameter
- Modifications in user XML schemas in order to support the new phone parameter
- Updates of all language files to support the new text parameters
- Implementation of Google Authenticator library in Connector Module
- Implementation of new function getpreviewwidth in Get API
- Implementation of new main config parameter for the correction of the used storage due to annotation images, preview videos, file versions, thumbnails
- Implementation of new home box "free storage per publication" in order to display the used, free, and total storage of each publication
- Implementation of correction factor for used storage in popup_upload_html and popup_upload_swf
- Implementation of zoom feature for annotation images
- Modifications in the template engine and annotation.js in order to support the zoom feature
- Modifications in function createfolder and createmediaobject in order to use the template of the folder the object resides in
- Modifications in the template engine in order to replace template variables for all views, including form views
- Modifications in home and userlogin in order to support wallpaper.jpg or wallpaper.png image files as theme wallpapers
- Modifications in Export Connector Module in order to include annotation images for the export of the media files using symbolic links
- Implementation of a new location name search feature for the definition of an objects geo location in template engine
- Modifications in template engine to support the display of the geoloaction in WYSIWYG-views and preview
- Design modifications in template_source, group_edit_form, and report management
- Implementation of new function searchinindex in external search engine library (replaces old function searchindex that is still supported)
- The new function searchinindex in external search engine library  support include_url and search result array as well as the html output
- Modifications in default multimedia template
- Design modifications in black design theme
- Implementation of new preview attribute for text nodes in template engine in order to enable previews windows in form views
- Implementation of template includes and component templates for the DAM configuration of the system
- Modifications in the group_edit_form in order to provide access to the permissions for publishing components and to the template media permissions
- Modifications in the template engine in order to load default template if the assigned template does not exist
- Modifications in function cleancontent in Main API in order to remove script and other html tags and their content
- Modifications in the template engine in order to enable the sys user to execute function buildview for a DAM configuration
- Update of the Template Designer Guide
- Design modifications in page_multiedit
- Implementation of labels in the template engine and checkbox editor for the checkbox tags
- Modifications in function rdbms_searchcontent in DB Connect in order to look for any expression in file names or content if the order of the epxressions is the same (spaces between expressions must be used)
- Implementation of support for AND / OR logical operator in search expressions in function rdbms_searchcontent in DB Connect
- Modifications in template engine in order to initialize face markers after saving the asset
- Implementation of annotion/marker toolbar for videos
- Modifications in face/object markers for images and videos in order to display the input field on create
- Implementation of textareas instead of input fields for the markers
- Implementations and modifications in template engine and annotion.js in order to highlight selected annotation tool in toolbar 
- Modifications in function showmedia in UI API in order to force browser to load annotation images after they have been saved
- Modifications in function deletemediafiles in Main API
- Implementation of JQuery UI tooltips in template engine
- Removed support for HTML encoded characters in search expression in function rdbms_searchcontent in DB Connect (only decoded characters are used in textnodes)
- Modifications in function deletecontent in XML API in order to return the XML result if no node has been deleted
- Modifications in function insertcontent in XML API in order to return the XML result if no node has been added
- Modifications in function createmedia in Media API for optimized support for SVG graphics 
- Added vector image file extensions to format_ext.inc.php
- Implementation of mark/unmark-all feature for delete column of template and content versions
- Implementation of sandbox attribute for preview and live view in frameset_content and frameset_objectlist
- Implementation of mark/unmark-all feature for the task management
- Modifications in task management in order to support and display tasks without a user
- Modifications in GUI of installation script
- Modifications in search_form in order to support scrolling in the form
- Modifications in function showmedia in UI API in order to skip files which do not meet the file size max. limits for the preview process
- Design modifications in task management
- Design modifications in plugin management
- Improvements in main CSS of standard design theme
- Modifications in Export module in Connector in order to support detailed error messages and error color coding
- Bug fix: Drag button in WYSIWYG interface for components did not use the proper size in the template engine
- Bug fix: Favorites and recent objects home boxes did not initialize object array
- Bug fix: Function checkworkflow in Main API did not extract the content node from the template
- Bug fix: Function viewinclusions in template engine did return an empty code as result if the included code was empty
- Bug fix: Function setmetadata in Meta API did not use proper variable name for splitting mapping value into text type and text ID
- Bug fix: The face detection for videos did place the face marker based on the original video size and not the video frame
- Bug fix: The sendmail adn site_admin publication config parameter has not been verified in explorer_objectlist, search_objectlist, and group_edit_form
- Bug fix: Function showmedia in UI API did not reset document view for annotations if the document had only one page
- Bug fix: Function showmedia in UI API did not disable face/object marking for all other views except preview
- Bug fix: The template editor did not use a width for the content identification field
- Bug fix: Class hcmsIconOff in navigator.css of flat designtheme did use a size and caused display issues
- Bug fix: The template engine did use an undeclared variable in a JS function
- Bug fix: Function rdbms_getmedia in DB connect did not convert the container ID to an integer provide the geolocation for non-multimedia objects
- Bug fix: control_content_menu did not verify if the published key exists 
- Bug fix: Some variables have not been initialized in template_change if no template has been assigned to an object
- Bug fix: Function checkworkflow in Main API did not return the standard workflow role if no workflow has been assigned to an object
- Bug fix: The template engine and checkbox editor did not evaluate the saved value of checkboxes properly
- Bug fix: JS function openBrWindowMedia in media _edit_page did not access proper URL variables
- Bug fix: The contextmenu did not mark the proper objects if a sort has been applied on any column other the name (changes in contextmenu.js, explorer_objectlist, search_objectlist, queue_objectlist)
- Bug fix: Function rdbms_searchcontent in DB Connect did search for case sensitive object names
- Bug fix: Function convertpath did remove the domain name from any URL without verification if the domain is managed by the system
- Bug fix: JS function collectFaces in template engine did not remove the last face marker
- Bug fix: JS function createFaceOnImage in template engine did not set borders for markers based on the annotation drawing area
- Bug fix: Annotation click event has not been fired in annotate.js when activating an annotation tool
- Bug fix: Function rdbms_searchcontent in DB Connect did not remove double quotes in search expression (used for exact search)
- Bug fix: JS function openBrWindowLink in template engine did not create a proper object reference for the link input field
- Bug fix: Function createmedia in Media API set a high image density for all vector based images, this has now been limited to SVG graphics due to issues with ImageMagick

Version 7.0.7
Release 05/2018
- Implementation of a new Home screen box for the latest uploads including the download/access links for the objects
- Implementation of compress feature for the HTML5 file upload (only HTML5 file upload, Flash-Plugin based file upload will not receive the new feature)
- Modifications in CSS of the file upload for all design themes
- Modifications in jile upload to support the compression of files after the last file has been uploaded
- Modifications in upload service in order to support the new input parameter
- Modifications in function uploadfile in Main API in order to support the collection and compression of uploaded files
- Design modifications in popup_ftp
- Modifications in function setsession in Set API
- Design modifications in template engine
- Design modifications in site_edit_inheritance
- Modifications in function createpublication in order to verify if permission session exists
- Modifications in installation routine in order to verify the software version file exists
- Modifications in installation settings in order to deactivate the language translation plugin by default
- Modifications in Function indexcontent in Media API in order to use existing image if conversion to TIFF format is not available
- Modifications in function search_objectlist in order to verify if permission array entry exists
- Modifications in template engine in order to avoid unassigned variables
- Modifications in function getobjectcontainer in Get API  in order to support an new input parameter type to define if the working or published container should be loaded
- Modifications in function getobjectcontainer in Get API  in order to verify the provided object name using function valid_objectname
- Modifications in template engine in order to enable manipulation of content by a template script for views "publish", "cmsview", and "inlineview"
- Added variable types to the description of the input parameters of all function for all system APIs
- Update of the Programmers Guide
- Implementation of new replace attribute for hyperCMS text tags in template engine in order to search and replace content
- Update of the Template Designers Guide
- Implementation of logon logging in function userlogin in Security API
- Implementation of loading screen for the search
- Modifications in function rewrite_targetURI in Main API in order to disable search history log entries
- Modifications in function rdbms_searchcontent in DB Connect in order to enable search history log entries if not set
- Modifications in function createmedia and createdocument in Media API in order to set file size in kB to 1 if less than 1 kB
- Modifications in function createmedia in Media API in order to extract image width and height from file source as attribute values (used for SVG)
- Design modifications in colorful design theme
- Implementation of support for video metadata formats QuickTime (by Apple, mostly used for MOV and MP4), RIFF (Resource Interchange File Format), ASF (for WMA, WMV, DIVX) in function getmapping and setmetadata in Meta API
- Modifications in media_mapping in order to exclude single quotes for metadata tag names
- Minor changes in all language files
- Implementation of the latest Google Cloud API for PHP in Connector
- Updates in all functions of the Google Cloud Connector
- Implementation of Google Video Intelligence service in Connector and in function setmetadata in Meta API
- Added support for Google JSON key file to main configuration
- Removed Google Translator API in Connector
- Implementation of auto class loader for Google Vision and Google Translate API in Connector libraries
- Implementation of Google Vision service in Connector and in function setmetadata in Meta API
- Implementation of new main configuration settings for the Google Cloud Services
- Implementation of the new text for the new import features in all language files
- Update of the Import/Export Guide
- Implementation of the import of assets by file scan based on a source directory
- Implementation of new import parameters in the Connector Module
- Modifications in function importobjects in Import API of Connector Module
- Implementation of new function importxmlfiles, importmediafiles, and exportxmlfiles in Im/Export API of the Connector Module
- Modifications in function createmediaobject in Main API in order to support a new input parameter to leave the media file at its location and use a symbolic link
- Modifications in function getmedialocation in Get API in order to return the full file location
- Modifications in service savecontent in order to support media files in external media file storage
- Modifications in function getmedialocation in Get API in order to resolve symbolic links by a new input parameter
- Modifications in function getChildsForLocation of Workplace Intagration (WebDAV) in order to hide recycled assets and folders
- Modifications in function deletemediafiles in Main API in order to support up to 100.000 page files
- Modifications in function createmediaobject in Main API in order to call indexcontent after createmedia
- Modifications in function showmedia in UI API in order to use provided with or height for the videoplayer instead of the preview video dimensions
- Modifications in JS functions in userlogin in order to return boolean
- Modifications in frameset_content, frameset_objectlist, and explorer_objectview in order to support preview and live view window
- Modifications in public function getRealFileName in Functions.php of WebDAV Module
- Modifications in function loadfile_header, loadfile_fast, loadfile, loadlockfile, savefile, savelockfile, appendfile, and deletefile in Main API in order to support symbolic links
- Modifications in function restoremediafile, correctfile, manipulateobject, restoremediafile, and processobjects in Main API in order to support symbolic links
- Modifications in function edituser in Main API in order to set 10 digits as min. password length
- Modifications in function shellcmd_encode in Security API in order to support a second input parameter "type" and to remove multiple commands connectors in any case
- Modifications in popup_upload_html and popup_upload_swf regarding checkbox controls
- Modifications in page_info in order to display the export location of a media file (for symbolic links)
- Modifications in user_edit in order to verify group and publication data of a user
- Modifications in function createuser and edituser in order to apply function checkpassword first
- Modifications in standard main config file for the installation inn order to use strong passwords and medium thumbnail view
- Modifications in installation script in order to make database credentials mandatory and verify them
- Modifications in control_user_menu in order to remember the user name when createuser failed
- Modifications in user_sendlink in order to support the new password rules
- Modifications in media_rendering in order to set playertime to zero for the preview image if the video has not been started
- Implementation of new function createimages_video in Media API in order to create images from a video file
- Implementation of a new file format definition for RAW videos and implementation of the new format definition into various functions
- Added Canon RAW video format CRM as video file extension
- Implementation of new function is_rawvideo in Main API
- Modifications in function convertmedia in Media API in order to support the extraction of miages from a video
- Implementation of new download options for videos in control_content_menu and control_objectlist_menu
- Implementation of new JS function hideFaceOnVideo in template engine and UI API in order to hide face/object markers if the video is playing
- Modifications in imexport_explorer in order to apply a natural case sort for the folders and objects
- Implementation of new Google Cloud Speech libarary in Connector Module
- Implementation of new function GCspeech2text in Cloud API in order to extract text from the audio stream of audio and video files
- Implementation of new main config parameter $mgmt_config['gs_speech2text'] in order to enable and disable the speech-to-text service
- Implementation of new main config parameter $mgmt_config['gs_speech2text_langcode'] for the default language code to be used for speech-to-text
- Update of Google-Cloud-API
- Modifications in function setmetadata in Meta API in order to support the speech-to-text service and creating the VTT
- Implementation of new function sec2time in Media API
- Modifications in function createmedia in Media API in order to exclude options for audio files and remove unset options
- Removed FLAC file extension from videos in file format_ext.inc.php
- Implementation of new favorites contextmenu action in order to add new favorites without opening the object in explorer_objectlist and search_objectlist
- Minor improvements in function createmedia in Media API
- Implementation of new function splitmedia in Media API in order to split audio and video files in segments
- Modification of FFMPEG EQ filter options in function createmedia in Media API due to changes of the filter names in FFMPEG
- Design modifications in the installation form
- Bug fix: popup_ftp did not assign CSS class to file icons 
- Bug fix: popup_ftp did not perform a proper FTP logout
- Bug fix: Function indexcontent in Media API did not assign an error variable when creating the TIF file for OCR
- Bug fix: Undefined variable temp_operator in DB Connect
- Bug fix: popup_upload_html used wrong variable name for the storage factor of a publication
- Bug fix: Template engine did not correct input marker text box position using the scaling factor
- Bug fix: JS function html5support was missing in home screen
- Bug fix: explorer_objectview did not assign id to iframe for the preview of pages and components
- Bug fix: JS function openBrWindowLink in explorer_objectview has been blocked by browsers and has been removed
- Bug fix: page_info did not use roper media path in case the database is not available
- Bug fix: The user_edit window size was not set correctly in function createuser in Main API
- Bug fix: Function HTTP_Post did use \n instead of \r\n for HTTP headers
- Bug fix: Function createthumbnail_video in Media API did not delete the old destination file
- Bug fix: Function createfavorite in Main API did verify unasissgned variable $cat

Version 7.0.8
Release 06/2018
- Implementation of PhotoSwipe JS library into the system
- Implementation of PhotoSwipe template for the automatic creation of responsive image galleries (code snippet)
- Modification of field types in user_sendlink
- Implementation of new checkbox and date selector for mail delivery in user_sendlink
- Implementation of new queue directory in internal repository in order to support queue documents
- Implementation of date and time triggered e-mail notifications
- Modifications in function rdbms_createqueueentry and rdbms_getqueueentries in DB Connect in order to support numeric objects (IDs) as input
- Modifications in control_content_menu and control_objectlist_menu in order to resize new mail window (user_sendlink)
- Modifications in queue_objectlist in order to support the new mail queue entries
- Modifications in daily job in order to support mail queue entries
- Modifications in function processobjects in Main API in order to support the processing of mail queue entries
- Modifications in control_queue_menu in order to support mail queue entries
- Modifications in function rdbms_deletequeueentry in DB Connect in order to remove queue files
- Modifications in function getfileinfo in Get API in order to support mail files
- Implementation of new function createqueueentry in Main API
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js
- Implementation of new service sendmail for sending mail messages and links
- Updates in the Installation Guide
- Implementation of video download formats in user_sendlink and download actions in control_content_menu and control_objectlist_menu
- Implementation of support for original thumbnail video download (preview video) in service mediadownload
- Implementation of new function sendresetpassword in Main API
- Implementation of new function createpassword in Security API
- Modifications in function sendmessage in Main API in order to support empty from_user
- Modifications in userlogin in order to support the password reset
- Modifications in function showmedia in UI API in order to support download formats of access links
- Modifications in explorer_objectlist and search_objectlist in order to disable download links if access link has been used to access the system
- Implementation of new main configuration setting $mgmt_config['resetpassword'] to enable and disable the password reset
- Implementation of new function showgallery in UI API
- Implementation of object thumbnail view in user_sendlink
- Modifications in CSS class hcmsRequiredInput of all themes
- Implementation of message directory in internal repository
- Implementation of new function savemessage in Main API
- Modifications in function edituser in Main API in order to support *Leave* values to keep existing user values 
- Design modifications in the logon form
- Design modifications in image_rendering and media_rendering
- Change of browser bar color to black of the Mobile Edition
- Modifications in function createpublication in Main API to look for forbidden publication names due to main configuration key names
- Modifications in all APIs in order to verify the include of the publication management configuration file based on new parameters
- Minor improvements in DB Connect
- Minor design modifications in task_list
- Implementation of project ownership verification in project_list
- Minor design modifications in project_list
- Modifications in Security API in order to exlude pageaccess for DAM publications for special user accounts
- Implementation of new template variable %phpmailer% in template engine
- Implementation of views, download and upload counter of each asset in the template engine
- Implementation of "view" as new activity for dailystats
- Implementation of "view" for statistics in function downloadfile in Main API
- Design modifications in explorer
- Modifications in function rdbms_searchcontent in DB Connect in order to support MATCH AGAINST with automatic BOOLEAN MODE on full text index alternatively to LIKE (new config setting $mgmt_config['search_query_match'])
- Implementation of new main configuration settings for search queries ($mgmt_config['search_query_match'] and $mgmt_config['search_max_results'])
- Modifications in explorer, frameset_main, search_form, and search_objectlist in order to support the new main configuration setting $mgmt_config['search_query_match']
- Modifications in plugin_management, search statistics plugin, and simlpe statistics plugin
- Implementation of new function update_database_v708 in Update API
- Implementation of new function updates_all in Update API
- Modifications in function userlogin in Security API in order to call update_all instead of individual updates
- Modifications in createtables.sql
- Modifications in function rewrite_targetURI in Main API in order to use "like" search query mode
- Modifications in function getserverload in Get API in order to support memory usage and new input parameter for interval
- Implementation of getserverload in minutely job in order to log server performance
- Implementation of new server performance home box
- Implementation of the new zoom feature with automatic resizing of annotation elements for images 
- Removed pen annotation support for MS IE and Edge
- Modifications in function unpublishobject in Main API in order to support execute of template code and saving the unpublish date and time in the container
- Modifications in template engine in order to support "unpublish" as buildview parameter (execute code for the unpublishing of objects)
- Updates in all language files
- Modifications in function deletecontent and delteicontent in XML API
- Implementation of new function mediapublicaccess in Main API
- Implementation of function mediapublicaccess in mediadownload, and mediawrapper services
- Implementation of function mediapublicaccess in videoplayer
- Implementation of multi-factor authentication as new option besides the standard login using user name and password (requires a valid e-mail address and e-mail access of user)
- Modifications in userlogin in order to support the multi-factor authentication
- Implementation of new main configuration settings $mgmt_config['multifactorauth']
- Modifications in JS function hcms_openWindow in main.js in order to verify support of the JS function moveto by browsers
- Implementation of new JS function hcms_downloadURI in main.js
- Implementation of new JS function hcms_addTableRow in main.js
- Modifications in function createtaxonomy in Main API in order to recreate the taxonomy for all objects in case the taxonomy definition has been changed
- Modifications in function createtaxonomy in Main API in order to process new taxonomy file format (CSV) instead of single taxonomy files for each language and select a specific publication (new input)
- Removed automatic execution of function createtaxonomy in daily job
- Modifications in function rdbms_setpublicationtaxonomy in DB Connect in order to support empty publication input value and recreate the taxonomy for all publications
- Design modifications in media_hierarchy
- Implementation of new function load_csv in Main API
- Implementation of new function loadtaxonomy and savetaxonomy in Meta API
- Implementation of new function is_activelanguage in Main API
- Modifications in function showtranslator in UI API in order to call function is_activelanguage
- Implementation of taxonomy upload and download as CSV file in control_template_menu
- Implementation of multilingual taxonomy viewer and editor
- Modifications in template_info in order to display template owner
- Design modifications in page_info_stats
- Modifications in contextmenu.js in order to disable select area and use the browsers standard marking of content
- Modifications in function settaxonomy in Set API in order to force loading the taxonomy definition
- Bug fix: Download options of video have been applied for audio files as well in control_content_menu and control_objectlist_menu
- Bug fix: Function createmedia in Media API did not set the path to the source file for RAW images
- Bug fix: Wrong JS function call has been used for setSaveType in single components form view
- Bug fix: Dates provided by the search results have not been formatted
- Bug fix: task_list used wrong JS function name to open the edit window
- Bug fix: userlogin did not save logon credentials (remember me) in browser
- Bug fix: Function showmedia in UI API did not provide media properties if the database did not provide them (fallback to file system information)
- Bug fix: Function deletereport in Report API used wrong language variable key for success message
- Bug fix: queue_objectlist did kill user session for DAM publications if a valid publication name has been provided
- Bug fix: Fixed issue with annotation toolbar action selector in MS IE
- Bug fix: Annotations library has not been verified in template engine (issue only related to Free Edition)
- Bug fix: function rdbms_setpublicationtaxonomy in DB connect did use the wrong variable name for container ID in settaxnomy function call

Version 7.0.9
Release 08/2018
- Modifications and improvements in Workflow Management
- Modifications in function getserverload in Get API in order to verify results on MS Windows OS and set default values
- Modifications in event system in order to verify variables
- Modifications in the default metadata template (new field for related assets)
- Modifications in function rdbms_replacecontent, rdbms_searchuser, rdbms_searchrecipient, rdbms_getdeletedobjects, rdbms_getobject_info, and rdbms_getobjects in DB Connect in order to support text IDs to be included in the result
- Modifications in function getfavorites and getlockedobjects in Get API in order to support text IDs to be included in the result
- Modifications in search_objectlist in order to use the new input parameters for the DB Connect search functions
- Implementation of loading screen for template_edit, site_edit_form, pers_form, group_edit_form, user_edit, workflow_script_form, report_form, and instance_edit
- Implementation of new JavaScript code tag in template_edit
- Modifications in template_edit in order to exclude spaces in content IDs
- Modifications in template engine in order to verify content IDs (special characters)
- Modifications in function specialchr in Main API in order to return true for empty strings
- Implementation of JS functions in template engine for field control in form-views
- Modifications in function showeditor and showinlineditor in order to support unescaped article IDs
- Implementation of transparency effect in logon form
- Implementation of time zone support based on the users time zone setting
- Modifications in function edituser in Main API in order to support the new timezone parameter
- Implementation of timezone attribute to various entities in createtables.sql
- Modifications in user XML schemas in order to add the timezone
- Modifications in user_edit in order to support the timezone
- Modifications in function createinstance and sendresetpassword in Main API in order to support the timezone parameter
- Modifications in function userlogin in Security API in order to support the timezone parameter
- Modifications in userlogin in order to support the timezone parameter
- Modifications in session.inc.php in order to support the timezone parameter
- Implementation of the timezone in the clock of the top bar
- Implementation of new function convertdate and offsettime in Main API
- Implementation of new function showdate in UI API
- Implementation of function showdate in the system (API functions, userinterfaces, services)
- Migration from function rdbms_createqueueentry to createqueueentry in popup_publish, service uploadfile
- Migration from escape to date function for all dates used in DB Connect
- Modifications in function rdbms_createobject, rdbms_createqueueentry in DB Connect in order to convert the date and time to the servers time zone
- Implementation of hidden date string for table sorting in all list views
- Implementation of JS code removal from all views in template engine
- Modifications in function getmetadata in Get API in order to order metadata entries according to appearance in the template
- Modifications in function getimagecolors in Media API  in order to verify original file before creating an image from the file
- Modifications in FTP uploader (popup_ftp) in order to use labels for the file selector checkboxes and use formatted dates
- Modifications in Import/Export Connector module in order to support a specific publication with restrictions
- Implementation of individual watermarks for assets based on media tag for watermarks
- Modifications in template engine in order to support new watermark tag
- Modifications in function createmedia in order to support centered watermarks
- Modifications in media_view in order to set fallback character set (UTF-8)
- Modifications in function showcompexplorer in UI API in order to support watermarks
- Modifications in media_edit_page in order to support watermarks
- Modifications in function convertmedia in Media API in order to force recreation of media if a watermark is used
- Modifications in function showmedia in UI API in order to force recreation of media if a watermark is used
- Modifications in template_edit in order to display error message if the template code could not be saved (due to missing write permissions)
- Modifications in site_edit_inheritance in order to apply a natural case sort on the publication names
- Modifications in import/export module in order to use labels for checkboxes
- Modifications in function getuserinformation in order to return user group as result
- Modifications in user management in order to search for users with no group membership
- Implementation of sign up feature for unregistered users
- Design modifications in template engine in the saving layer
- Modifications in function editpublication in Main API in order to support new settings for the users registration
- Modifications in function editpublicationsetting in order to use an array as input instead of key and value as string
- Modifications in site_edit_form in order to support new settings for the users registration
- Modifications in function createpublication in Main API in order to enhance the publication name verification
- Modifications in function edituser in Main API in order to add separator to usergroup string
- Implementation of new main configuration setting $mgmt_config['userregistration'] for the display of the registration link
- Modifications in function userlogin in Security API in order to verify and convert usergroup string to array
- Modifications in function gettaxonomy_sublevel and gettaxonomy_childs in Get API in order to use first language of taxonomy if the users language is not available
- Removed .gif file extension from video files in include/formats_ext
- Implementation of function update_users_709 in Update API in order to add the timezone to all existing users and the new settings for the registration in the publication management configurations
- Implementation of EasySVG for the dynamic creation of SVG graphic files
- Removed support of deprecated SWF file upload that required the Adobe Falsh browser plugin (popup_upload_swf)
- Modifications in userlogin in order to include browser information in the forward link after the successful logon
- Added TIFF and BMP image target format definitions to default main configuration file in install directory
- Update of the manuals
- Update of all language files
- Implementation of new showcase component template "Upload" in the install directory for public file uploads
- Improvement in the showcase component templates Galleria and PhotoSwipe in the install directory
- Implementation of new function registeruser and registerassetbrowser in Security API in order to set session parameters for the user and the assetbrowser
- Modifications in function createsession in Security API in order to avoid creating a new session if a valid session exists already
- Modifications in function is_mobilebrowser and is_iOS in Main API in order to verify the HTTP_USER_AGENT
- Modifications in function downloadobject in Main API in order to support sessions
- Modifications in various set-functions in Set API in order to set default input parameters and verify all inputs parameters
- Bug fix: The readonly tag attribute has not been applied properly to components, comments, and geolocation maps in the template engine
- Bug fix: Function processobjects did use the wrong name for the service call of sendmail
- Bug fix: Service sendmail did use the wrong include path for the main configuration
- Bug fix: The height of the control layer in frameset_edit_media was not sufficient to display all media fields
- Bug fix: Function gettaxonomy_sublevel in Get API did only return taxonomy categories if the users language is supported by the taxonomy
- Bug fix: Logon using access links did not provide information from browser regarding is_mobile, is_iphone, and html5support
- Bug fix: The home screen did use a wrapper function instead of JS function hcms_html5file in order to verify HTML5 support
- Bug fix: Function userlogin in Security API did not set the user name for log entries in case the users hash has been used for logon
- Bug fix: log_list did not load custom log file due to missing input for function loadlog

Version 7.0.10
Release 09/2018
- Modifications in function uploadfile in Main API in order to support new result array parameters
- Modifications in service uploadfile in order to support the upload of additional text content (HTTP Post array variable must be named "text" and use the text-ID as key and the text content as value)
- Modifications in the showcase component template "Upload" in the install directory in order to support additional text content
- Modifications in function deletefolder, editmediaobject, and unpublishobject in Main API in order to correct location input parameters (tailing slash)
- Implementation of new main configuration setting $mgmt_config['publication_log'] for publication logs
- Implementation of new main configuration setting $mgmt_config['eventlog_notify'] for automated notification of users on global errors or warnings
- Modifications in function savelog in Main API in order to support publication logs and user notifications
- Modifications in function editpublication in Main API in order to support user notifications for system error or warning events
- Implementation of user notification settings in control_log_menu
- Modifications in service sendmail in order to stop execution of service if the mail file is not present
- Implementation of new function update_config_7010 in Update API in order to add new setting to all publication configurations
- Modifications in user_objectlist for an increased height of the user_edit window
- Modifications in function deletelog in Main API in order to support publication logs
- Changed $mgmt_config['max_digits_filename'] to 400 in main configuration
- Design modifications in popup_notify in order to include labels for all checkboxes
- Change of navigation tree node name for publication logs
- Modifications in various functions in Main API in order to create event log entries on success
- Modifications in function getwallpaper in Get API and function checkdiskkey in Security API due to new domain for key and wallpaper service
- Modifications in function createthumbnail_video and createimages_video in Media API in order to verify video file input
- Removed mp2 file extension from video files in /include/format.ext.inc.php
- Changed default video thumbnail size to 640x480 px in main configuration
- Removed txt file extension from $mgmt_imagepreview in default main configuration
- Modifications in function createdocument in order to support the conversion of plain text files and documents to images using libreoffice instead of UNOCONV
- Removed format conversion verification based on $mgmt_docconvert in the main configuration in function createdocument in Media API
- Update of the administrator manuals
- Minor modifications in function GCspeech2text in the Cloud API of the Connector module
- Modifications in function importmetadata in Meta API in order to transform special characters in content IDs provided in CSV-files
- Modifications in function sendresetpassword in order to verify if the user exists
- Modifications in service savecontent in order to log new information event
- Implementation of new main configuration setting $mgmt_config['loglevel'] for the definition of the log level (all, warning, error)
- Modifications in function accessgeneral in Security API in order to resolve symbolic links
- Modifications in function savelog in order to support reporting based on log levels
- Modifications in control_user_menu and user_objectlist in order to support the search of users without a publication membership
- Modifications in function valid_publicationname in Security API and remote client in order to verify *no_memberof* as publication name
- Modifications in function createuser and deleteuser in Main API in order to support the publication name *no_memberof*
- Modifications in user_edit and frameset_user in order to support the publication name *no_memberof*
- Update of GetID3 library to version 1.9.15
- Update of TCPDF library to version 6.2.13
- Removed speech2text library due to support by Connector Module of Enterprise Edition
- Update of JQuery to version 3.3.1 including all modifications in the system and the plugins
- Update to JQuery 1.12.4 of explorer, explorer_imageview, frameset_mobile, image_rendering, media_rendering, workflow_folder_form
- Update to JQuery 1.12.4 and 3.3.1 of templates in install directory
- Modifications in user_sendlink in order to exclude image formats for documents and to support longer list of formats
- Modifications in template Breadcrump in install directory
- Modifications in install script in order to use local jquery file
- Implementation of new Google libraries in Connector for Youtube support
- Implementation of overlay instead of popup in frameset_content for Youtube upload
- Modifications in function showmedia in order to support Youtube upload in overlay
- Modifications in Youtube Connector in  order to support overlay and new Google OAuth API and new token file name for each publication
- Bug fix: control_user_menu used wrong image for disabled registration icon
- Implementation of new service getusersonline in order to provide a list of all active users
- Modifications in chat in order to reload chat users every 10 seconds
- Modifications in function getusersonline in Get API in order to include support user and support publication filtering based on new input parameter
- Modifications in function writesession in Security API in order to save publication access
- Modifications in createpublication and deletepublication in Main API in order to provide publication access to function writesession
- Removed language selector from installation routine (default language is English)
- Minor changes in chat service
- Modifications in function savelog in Main API in order to rest/delete log file if it exceeds 12 GB of file size
- Modifications in explorer in order to activate template media node for DAM publications
- Implementation of new function unescapeview in template engine in order to unescape all system specific code segments from a string
- Modifications in template engine in order to include template engine for usage in scripts
- Modifications in function uploadtomediacat in Main API in order to verify and exclude server side scripts for upload
- Design modifications in control_media_menu
- Implementation of new function zipfiles_helper in Media API for basic zip file system support
- Design modifications in most control menus
- Modifications in function accesspermission in Security API in order to support the logging of warnings
- Modifications in page_view regarding the verification of the DAM and rootpermission
- Implementation of new function settemplate in Set API in order to set the template for single and multiple objects
- Modifications in template_change in order to change templates recursively for all objects in a folder
- Modifications in function createaccesslink, createobjectaccesslink, createwrapperlink, and createdownloadlink in Main API in order to correct object names
- Modifications in Home screen and all design themes in order to add the new CSS class hcmsHomeSpacer
- Bug fix: JS function nextEditWindow in popup_upload_html was outside of scope for iframe function call
- Bug fix: Function rdbms_searchcontent in DB Connect had an error in the SQL statement for counting the result rows due to a missing space
- Bug fix: userlogin displayed error messages twice
- Bug fix: function createdocument did not verify the target format before calling createmedia for thumbnail creation
- Bug fix: function manipulateobject did not verify container ID and media file name before writing it to the object file
- Bug fix: Variable mediafile and contentfile have not been verified in template engine
- Bug fix: Function accessgeneral in Security API did not verify the repository path in a page root
- Bug fix: Function selectcontent and selectxmlcontent in XML API did perform a case insensitive search for the condition
- Bug fix: editor/media_frameset used wrong reference for main.js
- Bug fix: Function showcompexplorer in UI API did not use full path as reference to JS sources
- Bug fix: Function shomedia did not HTML decode the JS variable vtt_confirm
- Bug fix: Changed position:fixed to absolute due to issues with MS Edge positioning of chat users selector
- Bug fix: Youtube connector did not split tag string into array for Google API method setTags
- Bug fix: Installation routine did not verify SMTP definitions
- Bug fix: Template engine did not verify the usage of the XML declaration inside a template script
- Bug fix: Daily job did not treat the results of function rdbms_getdeletedobjects as an array in order to empty the recycle bin
- Bug fix: Function rdbms_createobject in DB Connect accepted an object path with a tailing slash

Version 7.0.11
Release 12/2018
- Modifications and improvements in Security API
- Modifications in userlogin in order to separate messages from JavaScript code
- Update of PHPWord library
- Replacement of PHPExcel by PHPSpreadsheet library
- Modifications in OpenSearch in order to include the support of RSS 2.0 enclosure tag
- Modifications in OpenSearch in order to support RSS 2.0 feed and JSON as format of the search result
- Implementation of new example template ServiceSearchMedia and GalleriaSearch in install directory
- Modifications in template Galleria in install directory in order to suppress error messages if no image folder has been selected
- Update of Connector Guide (manual)
- Minor modifications in function getmetadata in Get API
- Implementation of information and error event logging in function creatuser, deleteuser, edituser, creategroup, deletegroup, and editgroup in Main API
- Modifications in the geolocation search in order to support the reset of the search area by left mouse click
- Modifications in the installation routine
- Modification of max file length setting $mgmt_config['max_digits_filename'] in main configuration file to 236 digits (due to limit of 255 bytes on most standard linux file systems)
- Modifications in function createobject in Main API in order to add error log entries
- Modifications in control_objectlist_menu in order to enable file compression only if the local permission "create" has been assigned
- Removed sys user from user list in publication management
- Design changes in top bar
- Design changes in Mobile Edition
- Modifications in the temp file search patterns in order to include objects stored in the recycle bin
- Modifications in function clonefolder and zipfiles in Media API in order to apply function is_tempfile on selected objects and also verify if a folder included in the location is in the recycle bin
- Modifications in template engine in order to escape quotes and $ for onedit=hidden textcontent, linktext, and mediaalttext
- Modifications in control_objectlist_menu in order to enable back button for Mobile Edition
- Implementation of new CSS class hcmsObjectGalleryMarker for all design themes
- Modifications in function createdocument in Media API in order to provide convert error code in log entry and to set environment variables before executing the command
- Implementation of views bar in the monthly statistics of page_info_stats
- Modifications in function exportxmlfiles in Import/Export API of Connector
- Implementation of create export directory if it does not exist in Export API of Connector
- Modifications of density (set 288 instead of 1800) for converting SVG graphics in function createmedia in Media API
- Implementation of new function getmediasize in Get API in order to extract width and height from differnt media files
- Modifications in function createmedia in Media API in order to render SVG graphics in their original size for the thumbnail presentation
- Added file extension .phtml to main config setting 'exclude_files'
- new htaccess and web.config files for media_tpl and media_cnt in repository to disable execution of PHP code in the content and template media repository
- Update of user manuals in all languages
- Modifications in function createdocument in Media API in order to support thumbnails for all document formats besides the one defined in main config setting $mgmt_docoptions
- Changed number format in the system to space for the thousands separator and dot as the decimal point
- Modifications in function createmedia in Media API in ordr to verify the video dimensions are divisble by 2 and change the dimensions accordingly
- Modifications in function getcharset in Get API in order to set contenttype for HTML5 files and verify results
- Modifications in various example templates in the install directory for 360-view, Zoom-view, and PDF-Generators
- Modifications in function collectMedia of the example templates in the install directory
- Implementation of publication specific template clean levels in the main configuration
- Implementation of the support for publication specific template clean levels in pers_form, template_edit, and workflow_script_form
- Modifications in function scriptcode_clean_functions in Security API in order to include hyperCMS Scripts independently from the application code for improved security
- Modifications in function scriptcode_clean_functions in Security API in order to provide 2 additional cleaning levels for hyperCMS API file functions and no-script
- Modifications in function scriptcode_extract in Security API in order to include code that has no end tag defined for improved security
- Modifications in function valid_publicationname in Security API in order to optionally verify if the publication name is included in the siteaccess
- Modifications in function tpl_globals_extended in template engine in order to include siteaccess
- Modifications in function showmedia in UI API in order to fix issues in MS IE/Edge with aligment of page selector box
- Bug fix: Function userlogin in Security API did not verify the users hash, so an empty hash as input was compared to an empty hash if the users XML node can not be loaded (user does not exist)
- Bug fix: OpenSearch API referred to an outdated language file explorer_objectlist.inc.php and used deprecated language variables
- Bug fix: Google Maps API does not support map.draggable property anymore and has been replaced by map.setOptions({draggable: true/false});
- Bug fix: Installation routine used old input parameters for function edituser
- Bug fix: Objects in the recycle bin still occur in download links
- Bug fix: Disable Navigator button and in Mobile Edition if access links are used
- Bug fix: libreoffice did not execute successfully due to missing home path variable
- Bug fix: Function exportxmlfiles in Import/Export API was not able to move files to mounted drives (rename is replaced by copy and delete)
- Bug fix: The determined URL of the installation script were not correct if the installation package has not been unpacked in the root of the web host
- Bug fix: The number format for the file size in search_objectlist was not set
- Bug fix: Function createmedia was not able to render preview videos if the video dimension was not divisble by 2 (FFMPEG)
- Bug fix: control_objectlist_menu did not extract proper folder name for recycled folders
- Bug fix: Function getcharset used data string instead of charset HTML meta tag to extract the character set
- Bug fix: Function processobjects in Main API did not verify the location and file variable before processing them
- Bug fix: Undefined variable media in control_content_menu in case of a new object
- Bug fix: Function scriptcode_extract ion Security API used a newline at the beginning of the string that could lead to an infinite loop when analyzing the code

Version 7.0.12
Release 01/2019
- Modifications in main.css and navigator.css for all design themes in order to fix alignment issues with MS Edge
- Implementation of new CSS class hcmsCenter in main.css and navigator.css of all design themes
- Design modifications in article_edit
- Design modifications in Workflow Management
- Design modifications in Personalization
- Design modifications in Project Management
- Design modifications in Task Management
- Design modifications in Import/Export Module
- Design modifications in Colorful design theme
- Design modifications in popup_ftp
- Design modifications in page_multiedit according to design of the template engine
- New implementation of datepicker JS functions in page_multiedit
- Removed all align="absmiddle" from system code
- Migration of all deprecated table, tr, and td attributes to new CSS classes hcmsTableStandard and hcmsTableNarrow defined in main.css and navigator.css
- Migration of all deprecated font tags to span tags
- Modifications in function getattribute in Get API in order to verify attribute values
- Modifications in function createobject in Main API in order to use input location in error message
- Modifications in group_edit_explorer in order to verify subdirectories
- Implementation of UTF-8 conversion of column titles explorer_objectlist and in search_objectlist
- Changed text to number type attribute for media width and height in template engine and media_edit_page
- Implementation of scrolling to top in template_help if a tab has been selected
- Change of frame height in frameset_edit_media from 200px to 220px
- Modifications in function rdbms_searchcontent in DB Connect in order to include media width and height in search result
- Modifications in search_objectlist in order to support the media width and height from the search result for performance improvement
- Modifications in function getmedialocation in Get API in order to improve performance when using dummy media files with prefix ".hcms." (skip is_link on non-existing files greatly improves speed of more than 1/100 of the time)
- Modifications of all API functions that uses the old "dummy." media file prefix
- Modifications of all service savecontent that uses the old "dummy." file prefix
- Modifications in function createtempfile in Encryption API order to skip thumbnail files since they are not encrypted (performance improvement by avoiding reading the file header)
- Removed unused upload button for deprecated flash uploader from img source of all design themes
- Update of Import/Export Guide
- Implementation of lazysizes javascript library
- Implementation of lazy image loader in explorer_objectlist and search_objectlist for the gallery view (based on lazysizes)
- Implementation of views in statistics of favorites home box and up- and download home box
- Modification of the Navigator select box sizes and advanced search box frame in order to align with the input boxes
- Implementation of new function ftp_deletefile in Connect API
- Implementation of FTP/FTPS support in function importmediafiles, importxmlfiles, and exportxmlfiles of the Import/Export API
- Implementation of FTP/FTPS support in the Import/Export Connector modules
- Design modifications in function buildsearchform
- Modifications in function sendresetpassword in Main API in order to verify the main config setting $mgmt_config['resetpassword'] and $mgmt_config['multifactorauth'] before executing the function
- Modifications in userlogin in order to verify the main config setting $mgmt_config['resetpassword'] and $mgmt_config['multifactorauth']
- Bug fix: The template engine did not exclude double quotes as forbidden special character of a tag ID
- Bug fix: The template engine did not create a functional  link for opening the article settings
- Bug fix: Missing type attributes found in some input elements of the template engine
- Bug fix: Variables $dir and $entry_dir have not been verified in folder_explorer
- Bug fix: Variables $dir and $site have not been verified in link_edit_explorer and link_explorer
- Bug fix: Function createmedia in Media API did apply wrong resize parameter width and height for the image thumbnails resolution (used size of the original image)
- Bug fix: .htacess files in install directory used wrong IP for localhost
- Bug fix: Function manipulateobject in Main API did not initialize the variable $mediafile_new

Version 7.1.0
Release 02/2019
- Implementation of the new design theme "experience"
- Design modifications in all design themes
- Changed max characters to be send as chat message from 600 to 800
- Design modifications in rich text editor including link_explorer, media_explorer, and media_frameset
- Design modifications in rich calendar
- Design modifications in folder_explorer, link_edit_explorer, media_mapping, media_taxonomy, version_content, and version_template
- Design modifications in chat sidebar
- Design modifications in Report Management
- Design modifications in Plugin Management
- Design modifications in control_content_menu and control_objectlist_menu
- Design modifications in UI API
- Design modifications in all example templates of the install directory 
- Update of all manuals
- Replacement of all input tags by button tags if CSS class hcmsButtonBlue, hcmsButtonGreen, or hcmsButtonOrange has been assigned
- Implementation of OCR for PDF documents (executed only if extraction of text from PDF has failed)
- Implementation of new helper function ocr_extractcontent in Media API that supports PDF documents and images
- Implementation of automatic orientation detection of the text in images and documents
- Modifications in createmedia in Media API in order to support the rendering of temporary images from PDF pages
- Modifications in function indexcontent in Media API in order to support a new input parameter and return the content without saving it in the system
- Modifications in function indexcontent in Media API in order to support OCR for PDF documents
- Modifications in function showmedia in UI API in order to correct JS function names
- Change of control frame height in JS function minControlFrame in frameset_content
- Separation of version number and version text (split of version.inc.php)
- Removed version number on logon screen
- Implementation of error logging in function setmetadata in Meta API
- Removed false as return value in function setmetadata in Meta API
- Modifications in template engine in order to reset the character set for media assets to UTF-8 and return character set in result
- Minor design modifications in page_view
- Modifications in page_view in order to set character set in HTTP header
- Modifications in function showmedia in UI API in order to use titles on div layers of annotation buttons instead of input elements due to display issues
- Modifications of textarea height in template_edit, pers_form, and workflow_script_form
- Bug fix: Report Management rounded longitude/latitude values for the table view
- Bug fix: OCR used translation language settings and not OCR languages settings
- Bug fix: frameset_edit_media used wrong width for the control frame
- Bug fix: Function valid_publicationname in Security API verifies a publication name based on the users siteaccess and therefore a new publication could not be created by function createpublication in Main API
- Bug fix: Function valid_publicationname in Security API did not verify the global siteaccess variable
- Bug fix: Function getfileinfo in Get API did not set deleted status for recycled objects correctly
- Bug fix: Function createnavigation in UI API did not exclude recycled objects from the navigation
- Bug fix: Function setmetadata in Meta API used wrong tag-ID to set Quality-data in container
- Bug fix: Media assets of publications that doesn't use UTF-8 as character set have not been displayed as UTF-8 (Media assets and their XML schemas use always UTF-8)
- Bug fix: Taxonomy editor did not add new rows after 1st page due to wrong index for initial language setup of the new row

Version 8.0.0
Release 03/2019
- Implementation of the new system GUI version 8
- Implementation of the new left bar that replaces the old top bar
- Removed general search from the left
- Design modifications in home, explorer, chat, frameset_main, image_rendering, media_rendering, search_form, page_multiedit, image_rendering, media_rendering, and control_media_menu
- Design modifications in function showmedia in UI API
- Design modifications in Project Management module
- Design modifications in user_edit
- Design modifications in popup_ftp for upload and Import/Export module of the Connector
- Removed flat design theme from system
- Modifications in all design themes for the new GUI
- Implementation of new JS function hcms_enterKeyPressed in main.js
- Implementation of enter key event for general search fields in order to execute search without pressing the search button
- New standard design theme is the previous experience design theme (old standard theme has been renamed to blue)
- Removed display of the version number from userregister
- Update of all manuals
- Design modifications of the facename input fields in the template engine
- Design modifications in Workflow Management module
- Design modifications in user_sendlink using new layers for the message options taht can be opened and closed
- Moved the tab for download formats to a new layer in user_sendlink
- Minor modifications in task_list
- Modifications in site_edit_form in order to explain that the selected language options for the automated translation also applies for the taxonomy 
- Modifications in taxonomy editor in order to improve usability and performance (only display language options if more than one language has been defined in the publication settings)
- Define English as default language for the taxonomy if no language option has been defined in the publication settings
- Modifications in site_edit_form in order to enable an unassigned design theme
- Modifications in function editpublication in Main API in order to enable an empty design theme in the publication settings
- Modifications in function rdms_getdailystat in DB Connect
- Modifications in explorer_objectview in order to add an mouseover event to the buttons so the selector layers will close automatically
- Modifications in version_content_compare and version_template_compare in order to assign a CSS class for the fields
- Modifications in version_content_compare in order to exclude comments and Faces-JSON
- Added idml file extension to format_ext
- Added font as new file extension type to format_ext
- Implementation of support for AI and INDD files in function getfileinfo in Get API
- Implementation of font files in function getfileinfo in Get API
- Implementation of new devices and their screen sizes in the main configuration
- Implementation of new input parameter for user in function getprojectstructure in the Project Management API
- Update of the language files regarding the Workflow module
- Implementation of a private chat by the introduction of relationships based on user invitations (modifications in chat, service/chat, chat.js)
- Implementation of new chat log format including the user/sender in a separate row
- New main configuration setting for public or private chat
- Modifications in function valid_publicationname in Security API in order to set ".." as false name
- Modifications in function userlogin in Security API in order to remove user as host in chat relationships
- Updates in Security API
- Implementation of new JQuery mobile version 1.4.5 and JQuery mobile theme
- Removed JQuery mobile version 1.3.1
- Implementation of the new Mobile Edition including a new design
- Modifications of all controls (including Import/Export, Instance, Report and Workflow modules) for the new Mobile Edition
- Modification in control_objectlist_menu in order to improve the conditions for the button actions
- Implementation of a new input parameter and logic in function zipfiles in Media API in order to support the packing of unstructured files
- Modifications in function zipfiles in Media API in order to verify container user before including the file in the packed file and to extract the publication name from the path (for objects from different publications)
- Modifications in function zipfiles in Media API in order to place message in packed file in case no files are available due to locking by other users or no media objects
- Modifications in function zipfiles in Media API in order to set directory for Windows ZIP to temp directory (same as UNIX)
- Implementation of a new input parameter and logic in function createmultidownloadlink in Main API in order to support the packing of unstructured files
- Implementation of send mail link for all of the users favorite objects (without selecting any objects)
- Modifications in search_objectlist in order to assign explorer action to variable from_page and enable differentiation based on different from_page values
- Modifications in function getcontainername in Get API in order to verify session before accessing its values (for locked containers)
- Implemenatation of popup window/layer in frameset_objectlist and frameset_content
- Design modifications in JS and CSS of javascript/jstree
- Modifications in sendmail service in order to separate the creation of new user accounts and the send messages process
- Modifications in user_sendmail service in order to support publication as input parameter for function getallusers
- Modifications in function edituser in Main API in order to support multiple publication memberships and assign the group memberships to all of the publication memberships
- Implementation of new function createmultiaccesslink in Main API in order to create a unique access link for a collection of objects
- Modifications in function rdbms_createaccesslink in DB Connect in order to support multiple object paths or object IDs as input
- Modifications in function rdbms_getaccessinfo in DB Connect in order to support multiple object IDs as output
- Changed object_id attribute in table accesslink from integer to varchar in order to support multiple object IDs
- Modifications in function userlogin in Security API in order to support multiobject linking for access links
- Modifications in message_objectlist in order to support new message variables and to display recipients including users, new users by e-mail and user groups
- Implementation of new function linking_valid, linking_inscope in Main API
- Implementation of new function update_database_v800 in Update API
- Modifications in function registeruser in Security API in order to support the new access linking
- Modifications in function accesspermission in Security API in order to support the new access linking (removed access links evaluation from function since explorer_objectlist verifies the access links)
- Modifications in JQuery UI CSS files in order to inherit font-family and font-size
- Modifications in explorer in order to implement new access linking (disable explorer)
- Modifications in page_info in order to disable all links if access linking is used
- Modifications in frameset_main in order to include task management button in the left bar in case of access linking
- Modifications in frameset_mobile in order to include task management button instead of navigation button in the top bar in case of access linking
- Moved srt file extension for video subtitles from video to clear text format in include/format_ext.inc.php
- Implementation of new main configuration setting $mgmt_config['message_newwindow'] in order to define if messages will be opened in a new or the same window
- Implementation of window controls for same or new window of messages in frameset_messages, control_message_menu, and message_objectlist
- Implementation of window controls for same or new window of messages in frameset_objectlist, and control_objectlist_menu
- Modifications in function showgallery in UI API in order to support full path names image titles and to open objects if used inside iframe
- Moved logout button from explorer to top frame in Mobile Edition
- Design modifications in userlogout
- Modification in number format of home boxes for access statistics
- Modifications in function showAPIdocs in UI API in order to verify array elements
- Modifications in various functions of the Media API in order to verify that the executable link is not empty
- Modifications in various functions of the Main API in order to set max_digit_filename to 236
- Modifications in function createobject in Main API in order to exclude error loging and messages if basic input has been provided but input parameters failed the verification
- Implementation of initialization of date and time into hyperCMS API loader in case it is not provided by the main configuration
- Hide userregistration form if accessed directly and if registration of new users is disabled
- Modifications in template engine in order to assign CSS class hcmsTextArea to facename text area fields
- Modifications in template engine face marker and detection functions in order to verify the tag is a certain element type before executing (to prevent display of all markers on videos after a marker has been removed)
- Modifications in function creatmedia in order to verify the created video segment files and the joined video file
- Modifications in function showmedia in order to display full width editor window for text-based template media
- Modifications in function showmedia in order to initialize variables and verify if template media file exists
- Modifications in Report Management module in order to apply labels to radio buttons of the report chart types
- Design modifications in Report Management 
- Removed JQuery UI 1.10.2 CSS files
- Implementation of update.log in install directory in order to disable the update process for new installations
- Bug fix: JS function hcms_showInfo in main.js did not convert the input from seconds to milliseconds
- Bug fix: Variable counter has not been declared in task_list in case of an empty task list of a user
- Bug fix: function savetaxonomy in Meta API will not save the taxonomy if not language option has been defined in the publication settings
- Bug fix: Taxonomy editor used wrong index number for first taxonomy element if no taxonomy is available
- Bug fix: Delete button for users in taskbar has not been enabled for a multiple selection in control_user_menu
- Bug fix: Function convertmedia in Media API did not exclude image target formats for the conversion of documents (call of function createdocument)
- Bug fix: Undefined variable onclick and clipboard_array in task_list
- Bug fix: Undefined variable useritem_array in function getworkflowitem in Get API
- Bug fix: Undefined variable multiobject_count in control_user_menu
- Bug fix: sendmail service used wrong input parameter for usergroup in edituser function call
- Bug fix: sendmail service did not implode e-mail addresses for log entry
- Bug fix: Function tasknotification in Task API did use wrong input parameter (start and end date) for call of function rdbms_gettask
- Bug fix: Previews of single objects have not been displayed in user_sendmail if multiobject has not been set
- Bug fix: Function createmedia in Media API dd not provide the new full source path to the new video file that has been created from the video segments
- Bug fix: media_view did not add publication name to media variable in case it has not been provided (function showmedia provides publication and media file name separately)

Version 8.0.1
Release 05/2019
- Modifications in function manipulateallobjects in Main API in order to process 10 objects at once (new default value)
- Modifications in popup_status in order to change the JS function for refreshing of the window
- Modifications in function editpublication, editpublicationsetting, and deletepublication in Main API in order to verify input parameters before scanning for files
- Modifications in control_site_menu in order to exclude verification of publication name of the request (will be verified by function editpublication, editpublicationsetting, and deletepublication)
- Implementation of new night design theme
- Modifications in user_sendlink in order to remove unused input parameter
- Design modifications in user_sendlink in order to align delete buttons for recipients correctly
- Removed deprecated Convert API functions
- Design modifications of tabs in Mobile Edition
- Modifications in number format of home boxes free_storage and free_storage_per_publication
- Removed file size from views in home boxes statistics_of_favorites and up_and_download
- Removed file size from views in page_info_stats
- Modifications in function rdbms_getmediastat in DB Connect in order to use inner joins instead of where statement to join tables
- Modifications in function rdbms_getmediastat in DB Connect in order to optimize the dynamic SQL creation of the statement
- Modifications in function rdbms_getmediastat in DB Connect in order to return total filesize in result array
- Modifications in function rdbms_getmediastat in DB Connect in order to replace string as input parameter by boolean for the filesize result request
- Modifications in page_info_recipients, page_info_stats in order to support the new input parameters of function rdbms_getmediastat
- Modifications in home boxes statistics_of_favorites, up_and_download, recent_downlods, recent_uploadlinks, and recent_uploads in order to support the new input parameters of function rdbms_getmediastat
- Modifications in page_info_stats in order to summarize values for statistics based on new return result from function rdbms_getmediastat
- Modifications in page_info_stats in order to modify chart size for mobile devices
- Enable home boxes server_load, statistics_of_favorites and up_and_download for mobile devices with responsive chart size
- Removed file extension srt from $mgmt_mediapreview from the main configuration in the install directory
- Modifications in function generateExplorerTree in explorer in order to verify if folder is writeable
- Modifications in function uploadfile in order to expand error reporting on upload error of 3 (no or partial file upload)
- Modifications in function uploadfile in order to move logging event from service uploadfile to function uploadfile and expand logging information
- Modifications in DB Connect functions in order to verify result before adding it to the result array
- Modifications in function createuser in Main API in order to allow special characters (.-_@) for the user name
- Modifications in control_user_menu in order to allow special characters (.-_@) for the user name
- Design modifications in group_edit_form
- Design modifications in explorer_objectlist and search_objectlist for the gallery view
- Implementation of new function setguiview in Set API in order to save the users GUI preferences
- Modifications in function toggleview and togglesidebar in UI API in order to save the users GUI settings
- Modifications in page_view in order to save the users GUI settings
- Modifications in function deleteuser in Main API in order to remove users GUI settings
- Modifications in function userlogin and registeruser in Security API in order to get and set users GUI settings
- Implementation of load screen in explorer
- Modifications in explorer and home in order to force reloading the CSS files (avoid old files from browser cache)
- Design modifications in all design themes for the load screen
- Modifications in function loadtaxonomy in Meta API in order to load default taxonomy if no publication specific taxonomy is available
- Design modifications in all editors
- Modifications in function rdbms_searchcontent in DB Connect in order to remove 2nd search expression for MATCH AGAINST search since it is only used for LIKE
- Modifications in function rdbms_getkeywords in DB Connect in order to return keywords with more than 2 digits
- Implementation of explorer_keywords in order to create keyword list for explorer on demand
- Modifications in explorer in order to request keyword list on demand
- Modifications in JS function hcms_loadPage and hcms_showPage in main.js in order to remove support of Netscape and IE4 and support source frame as input
- Modifications in search_form_advanced in order to support the new parameters of JS function hcms_showPage
- Modifications in function buildsearchform in template engine in order to support the new parameters of JS function hcms_showPage
- Modifications in function cleancontent in Main API in order to remove additional characters
- Modifications in function splitkeywords in Meta API in order to exclude keywords
- Modifications in template engine in order to add padding for report search forms
- Implementation of pathtype attribute for hyperCMS text tags in order to define media link type used for images and links
- Modifications in template_help and template engine in order to support the new pathtype attribute for text content and render the result based on the pathtype defined in the template
- Modifications in explorer and search_form in order to set maxlength to 2000 for the general search expression (useful when searching for an object path)
- Modifications in home box server_load, up_and_download in order to apply time zone of user
- Modifications in page_info_stats in order to apply time zone of user
- Implementation of new function is_keyword in Main API
- Modifications in function spitkeywords in  Meta API and rdbms_getkeywords in DB Connect in order to apply function is_keyword
- Modifications in various function of Main API in order to remove unused global variables
- Modifications in function is_tempfile in order to verify temp file patterns file before loading it
- Modifications in function rdbms_insertdailystat in DB Connect in order to set user to "unknown" if no user name or IP address is available
- Modifications in function clonefolder in Media API and function downloadobject, downloadfile, uploadfile in Main API in order to set IP instead of sys user name for daily statistics
- Modifications in component_edit_page_multi and component_edit_page_single in order to display the full path on mouse over
- Modifications in group_access_form in order to shorten the folder path and display the full folder path on mouse over
- Modifications in function is_tempfile in Main API in order to include tempfile patterns in function instead of loading the patterns from the include directory
- Implementation of multi select support for mobile devices in contextmenu.js and all list views (explorer_objectlist, search_objectlist, queue_objectlist, message_objectlist, user_objectlist)
- Modifications in home box server_load in order to reload the page every 5 minutes
- Modifications in page_multiedit in order to display standard thumbnails for folders and non-multimedia objects
- Modifications in explorer and search_form in order to verify search expression for fulltext search
- Removed autocomplete feature from frameset_main since search is no longer needed
- Modifications in explorer_objectview in order to locate object view outside the windows scopes while loading
- Implementation of a load screen for the object view in frameset_objectlist and explorer_objectview
- Implementation of new color schema for the display of the used storage in the home boxes
- Implementation of new multiedit lock and unlock feature for appending content if the content of the same fields does not match
- Modifications in service savecontent and page_multiedit in order to support the text content appending in multiedit mode
- Implementation of new function appendcontent_helper in service savecontent in order to append text content to XML containers
- Implementation of new service setappendcontent in order to lock and unlock the multiedit form
- Implementation of new session parameter for appendcontent to include/session.inc.php
- Minor design modifications in function sendresetpassword in Main API
- Implementation of error logging into function deletelog in Main API
- Modifications in function valid_objectname in Security API
- Implementation of character set conversion to UTF-16LE in function create_csv in Main API in order to support MS Excel character encoding
- Modifications in function createmedia in Media API in order to adjust density values for SVG graphics and to reduce thumbnail size of vector graphics if the original size is smaller than the thumbnail size
- Modifications in function convertimage in Media API in order to adjust max. density (DPI) value to 2400 dpi
- Modifications in explorer_objectlist in order to display the load screen if more button is used
- Modifications in function getmediasize in Get API in order to support ImageMagick and encrypted media files
- Modifications in function getvideoinfo and getpdfinfo in Get API in order to remove temporary media files after decryption
- Modifications in function showmedia in UI API in order to apply function getmediasize and store non-existing media info in database
- Moved functions getimagecolors and getimagecolorkey from Media to Get API
- Implementation of new function getimageinfo in Get API in order to provide all information (MD5 hash, file size, image size, image colors, type, ...) of an image
- Modifications in explorer_objectlist and search_objectlist in order to set image size if CSS class is not applied
- Modifications in template engine in order to implement the %publication% template variable for the publication access of a user (used for reports)
- Implementation of new main configuration setting $mgmt_config['workflow_loop'] in order to enable a loop for workflows
- Modifications in Workflow Management in order to enable the redirect to the start user (in order to create a loop)
- Modifications in Workflow Management in order to display full workflow folder path in workflow_folder_form on mouse over
- Modifications in Import/Export API in order to display each import/export result immediately
- Implementation of the new area chart and function showareachart in Report Management module
- Bug fix: control_site_menu did not accept the publication name as parameter of the request string
- Bug fix: popup_status did not execute if page or folder variable was empty
- Bug fix: Function rdbms_getmediastat in DB Connect did not escape object path before executing SQL statement
- Bug fix: Report Management did wrap the search form in a div layer
- Bug fix: Modifications in control_log_menu and log_list in order to enable users to access publication event log
- Bug fix: Function rdbms_searchcontent in DB Connect did not use LIKE search pattern if set in main configuration
- Bug fix: Function is_tempfile did not load tempfile patterns from external file
- Bug fix: JS function hcms_updateControlObjectListMenu in contextmenu.js did not verify if location has been provided before the submit of data

Version 8.0.2
Release 06/2019
- Modifications in function getpdfinfo and getvideoinfo in Get API in order to add support for MD5 hash, file time, file size, file type to output parameters
- Modifications in function createobject in Main API in order to exclude the %publication% variable name from the conversion
- Modifications in function rdbms_setcontent in DB Connect in order to escape the text ID
- Modifications in function createmediaobject in Main API in order to display template name in error messages
- Modifications in function rdbms_setpublicationkeywords in DB Connect in order to remove unused variable $text_array
- Implementation of the new search save feature in the explorer and search_objectlist that is based on unique search IDs
- Implementation of the new function searchlog_delete in explorer
- Implementation of the new JS function selectedSavedSearch in explorer
- Design modifications in search feature of explorer
- Modifications in JS function deletesearch in explorer in order to verify selected saved search
- Modifications in explorer in order to diplay the parameters of a saved search
- Removed the display of the saved search date and time from the list of saved searches in explorer
- Modifications in function createmedia in Media API in order to verify is new media file exists besides possible error codes that trigger an error event
- Modifications in function createuser in Main API in order to change the max user name length and password length to 100 digits
- Modifications in userlogin in order to display submitted instance name, user name and password
- Modifications in function checkpassword in Security API in order to enable passwords of up to 100 digits
- Update of all language files
- Implementation of relationships between component objects in order to track the relations between the original and the copy of an asset
- Implementation of the new function setrelation in Set API
- Modifications in function manipulateobject in Main API in order to set the relationship when a copy will be pasted
- Implementation of new main configuration settings for the source and destination content ID for the relationship
- Modifications in function setcomplink in Set API in order to verify the container content
- Bug fix: Function getvideoinfo in Get API did refer to the wrong media file for the file size
- Bug fix: Function valid_objectname in Security API did not allow ":" in the object name (is a valid character on UNIX/Linux OS and must be accepted)
- Bug fix: Function getpdfinfo in Get API did reset the result array after the width and height as part of the array have been calculated
- Bug fix: Function getmediasize in Get API did return all page sizes of documents and not the size of the first page only
- Bug fix: JS function hcms_clearSelection in contentmenu.js did not lock the function hcms_clearSelection if download links have been activated in the list view
- Bug fix: Function deletelog in Main API used wrong log type entry for log event 00821
- Bug fix: MS IE and Edge did not display close buttons used in frameset_objectlist, frameset_content, and user_sendlink due to nested fixed positioned div-layers
- Bug fix: Function rdbms_searchcontent in DB Connect did not verify variable $temp_expression
- Bug fix: Function rdbms_searchcontent in DB Connect did not initialize array elements $sql_expr_advanced[$i]

Version 8.0.3
Release 07/2019
- Implementation of related assets viewer/gallery in sidebar
- Implementation of a gallery view for the component explorer
- Modifications in function showcompexplorer in UI API in order to support new input parameters and to generate a thumbnail view besides the list view
- Modifications in function showcompexplorer in UI API in order to support the lazy image loader
- Modifications in component_edit_explorer in order to automatically select the gallery view if multimedia objects will be selected (multmedia link or used as DAM)
- Update of all language files
- Modifications in Multiedit (page_multiedit) in order to support the samecontent property and set the "same content"
- Modifications in Multiedit (page_multiedit) in order to support the locked property and set the "locked" marker for each field
- Modifications in Multiedit (page_multiedit) in order to open each selected object by click on the thumbnail
- Modifications in function getvideoinfo in Get API in order to remove .orig file extension for the thumbnail file name
- Minor changes in function registeruser in Security API
- Bug fix: Multiple component select box was not able to move components in template engine (removed defaultSelected in JS function moveSelected)
- Bug fix: Multiedit (page_multiedit) did lock all fields instead of unlocking them for editing when checkbox "Only fields marked with * hold the same content and may be changed. If unchecked the text will be appended to the existing content." has been used
- Bug fix: Function getvideoinfo in Get API did not verify the thumbnail or video file before executing filemtime
- Bug fix: Function createmedia in Media API did use function getvideoinfo before verifying that the provided file is a video file
- Bug fix: The task management permission of the logged in user has not been verified in the main/left navigation bar (only if an access link has been used for access)
- Bug fix: search_objectlist was not able to display the objects due to the missing object hash (userlogin did not use the provided object hash and used function rdbms_getobject_hash on an object hash)

Version 8.0.4
Release 09/2019
- Implementation of the new home box permission in the home screen that is based on the personal settings permission, see function checkrootpermission ('desktopsetting')
- Implementation of the home button in the main/left navigation bar if an access link is used for access
- Implementation of the home boxes configuration in the user administration (user_edit)
- Modifications in control_user_menu in order to set new window size for user_edit
- Modifications in user_objectlist in order to set new window size for user_edit
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js in order to set new window size for user_edit
- Implementation of the new Public Portal access link that is based on the access of a user profile 
- Implementation of the new function createportallink in Main API in order to create the new portal access link
- Implementation of the new function setportalpermissions in Security API in order to rest permissions if a portal access link has been used for logon
- Modifications in userlogin in order to support new access link parameter named "portal" and the function setportalpermissions
- Modifications in user_edit in order to create and display the portal access link for users with user administration permissions
- Modifications in index in order to support new access link parameter named "portal"
- Implementation of the permissions reset for root and global permissions of a user if the portal access link has been used for logon
- Implementation of valid dates (from-to) for user accounts
- Implementation of the new function update_users_709 in Update API in order to add new XML nodes to the users directory
- Implementation of the new XML nodes into the XML schemas of the system
- Implementation of the user attributes for the valid dates in user_edit including the date picker
- Modifications in function edituser in Main API in order to support the valid date from and to parameters and save them in the user node
- Modifications in function createinstance and sendresetpassword in Main API in order to support the modified edituser function
- Modifications in the installation routine in order to support the modified edituser function
- Modifications in userregister in order to support the modified edituser function
- Modifications in function userlogin in Security API in order to verify the users valid date
- Implementation of the new function registerportal in Security API in order to save portal configurations in the session
- Implementation of the new session variable hcms_portal in the include/session.inc.php
- Modifications in OpenAPI in order to support the modified edituser function
- Implementation of the new main config setting $mgmt_config['user_newwindow'] in order to open users in same or new window
- Modifications in frameset main, frameset_user, control_user_menu, user_objectlist and JS function in contextmenu.js in order to support the new main config parameter $mgmt_config['user_newwindow'] and provide the user form as popup or new window
- Modifications in function createuser in order to support the new main config parameter $mgmt_config['user_newwindow'] and provide the user form as popup or new window
- Implementation of the new main config setting $mgmt_config['passwordhistory'] in order to define the number of passwords that can't be reused based on the password history of a user
- Implementation of the new function update_users_546 in Update API that replaces the update to version 5.4.6 , 5.5.11 and 5.5.15  that used to be part of function createuser and edituser in Main API
- Modifications in function createuser and edituser in Main API in order to remove the update for version 5.4.6 , 5.5.11 and 5.5.15
- Modifications in function createuser and edituser in Main API in order to implement the password history
- Modifications in function checkpassword in Security API in order to implement a new input parameter for the user name and the password history verification
- Implementation of the new main config setting $mgmt_config['passwordexpires'] in order to define the number of days before the password of a user expires and must be reset
- Implementation of the new main config setting $mgmt_config['user_log'] in order to write user specific log files
- Modifications in function savelog in Main API in order to save the user specific log entries in a separate log file
- Modifications in function update_users_804 in Update API in order to update/rename publication log files
- Modifications in function edituser in Main API in order to verify publication name before setting the user groups membership
- Implementation of the new password reset for users user_password in order to trigger the reset based on events
- Modifications in function loadlog in Main API in order to skip empty log entries and remove new lines
- Implementation of the new main config $mgmt_config['userexpires'] in order to set an expiration time for user
- Modifications in function userlogin in Security API in order to lock user if no activity has been logged for a certain time
- Modifications in userlogin in order to support the new output parameters of function userlogin
- Modifications in function deletelog in Main API in order to remove log file instead of removing its content
- Modifications in function deleteuser in Main API in order to remove the new user specific log files
- Implementation of the new main config setting $mgmt_config['passwordblacklist'] in order to define a password blacklist
- Modifications in function checkpassword in Security API in order to support the new password blacklist
- Modifications in function killsession in Security API in order to log the logout event
- Implementation of a password reset button into control_user_menu in order to reset the password and notify the user
- Modifications in site_edit_form in order to display active label for all checkboxes
- Modifications in site_edit_form in order to add new checkbox for Portal access links
- Modifications in function editpublication in Main API in order to add new Portal access links publication setting
- Implementation of the new design theme named "day" (neutral light design)
- Implementation of the new main configuration setting $mgmt_config['userconcurrent'] in order to enable or disable concurrent users using the same account
- Modifications in function writesession in Security API in order to support the new main config parameter $mgmt_config['userconcurrent']
- Modifications in function createmedia in order to remove error logging in case no error has been reported from the application and the new file does not exist
- Implementation of the new Portal Designer as part of the Template Management interface
- Implementation of the new jscolor JS library for the color picker
- Implementation of the new portal directory in the external repository for the installation
- Implementation of the new portal XMl schema for the portal definitions
- Modifications in function deletepublication in Main API in order to remove the portal media
- Modifications in explorer in order to implement the new Portal templates as navigation node
- Implementation of the new functions createportal, editportal, and deleteportal in Main API
- Modifications in function showmedia in UI API in order to block the Youtube upload if a Portal access link is used 
- Minor modifications in the source code comments of template_edit
- Minor modifications in empty to set a max-height for the logo
- Modifications in function getlocaltemplates in Get API in order to support portal templates
- Modifications in order to calculate the space based on the logo image defined by the portal design
- Modifications in function getthemelocation in Get API in order to support Portal themes
- Modifications in function getwallpaper in Get API in order to support Portal themes
- Modifications in home and userlogin in order to implement the new function getwallpaper
- Modifications in function getmediafileversion in Get API in order to verify $scandir
- Implementation of the new getthemes in Get API in order to return all design themes
- Modifications in user_edit and site_edit_form in order implement the new function getthemes
- Design modifications in userlogin
- Modifications in the CSS main.css and navigator.css of all design themes in order to set box-sizing:border-box for all input elements
- Design modifications in user_edit, explorer, and search_form in order to adjust the inputs width to the new CSS settings
- Implementation of the new user status in user_objectlist in order to display if a user is active or logged out
- Implementation of the new user logout action in control_user_menu in order to logout users in the users administration
- Modifications in function killsession in Security API in order to support the new input parameter for killing all sessions of a user
- Modifications in function userlogin and registeruser in Security API in order to implement the download formats defined by a portal template
- Modifications in function getpdfinfo in Get API in order to verify if the file exist before executing function filemtime
- Modifications in several functions in Link API in order to verify the publications linkengine setting
- Modifications in function getuserinformation in Get API in order to get only a requested user and support the user name as input
- Modifications in function createtemplate in Main API in order to test for special characters in the template name
- Modifications in user_edit in order to collect all themes for a user with superadmin permissions based on the Publication access ($siteaccess)
- Removed general access to Persoanlization in Mobile Edition
- Implementation of the new session parameter hcms_favorites for stroing the favorites of portal users in their session
- Modifications in explorer in order to implement the favorites navigation item for portal users
- Modifications in function getfavorites in order to support the session based favorites of portal users
- Modifications in functions createfavorite and deletefavorite in Main API in order to support the session based favorites of portal users
- Modifications in control_content_menu, popup_action in order to check the root permission "desktopcheckedout" for locking and unlocking objects
- Implementation of the new search bar as home box
- Implementation of the new main configuration setting $mgmt_config['homebox_directory'] for individual home boxes
- Renamed the main configuration setting $mgmt_config['welcome'] to $mgmt_config['homebox_welcome']
- Modifications home box "news" in order to support the new main configuration $mgmt_config['homebox_welcome'] with support of the old deprecated name
- Implementation of the newn pathtype=location for media tags in the template engine in order to provide the converted location path to the object
- Implementation of the new function gethomeboxes in Get API in order to collect all available home boxes
- Renamed function getboxes to getuserboxes in Get API
- Renamed function setboxes to setuserboxes in Set API
- Modifications in function getuserboxes in Get API in order to use the home boxes defined in the main configuration if no user defined home boxes are available
- Implementation of the new function showhomeboxes in UI API in order to display selected home boxes
- Modifications in home and user_edit in order to implement the new gethomeboxes, getuserboxes, and setsuerboxes functions
- Implementation of the XML schema "template_homebox.xml.php"
- Modifications in function gettemplates in Get API in order to support the new HomeBox standard template
- Modifications in function loadtemplate in Main API in order to support the new HomeBox standard template
- Modifications in search_objectlist in order to verify that the access array is valid
- Integration of the logic of function registerportal into function userlogin in Security API
- Modifications in function deletepublication in order to verify component and page root directory exists
- Modifications in explorer in order to verify $user_array
- Modifications in template engine in order to correct the text fields height and width for unformatted text due to the new CSS settings
- Modifications in XML schema template_default.xml.php in order to correct heights of fields
- Modifications in all example templates of the install directory in order to adjust the height of the text fields
- Removed spaces in all empty lines of the source code of all APIs
- Modifications in user_edit in order to change the verification of permissions
- Modifications in page_info in order to display the access statistics button only for multimedia objects
- Modifications in page_info in order to display the recipients button for pages
- Modifications portal_edit and function editportal in Main API in order to remove uploaded files (logo and background images)
- Renamed main configuration setting $mgmt_config['chat-support'] to $mgmt_config['chat_support']
- Modifications in function getusersonline in Get API in order to support the new main configuration setting $mgmt_config['chat_support']
- Implementation of the new main configuration setting $mgmt_config['userdelete'] in order to delete all users that exceeded their valid date
- Implementation of the deletion of invalid users in the daily job based on the new main configuration setting $mgmt_config['userdelete']
- Modifications in installation routine in order to support the new input parameters of function edituser
- Modifications in function rdbms_searchcontent in DB Connect in order to verify and sanitize input parameters
- Modifications in Plugins (plugin.conf.php, plugin.xml), explrer, log_export, log_list in order to support the new publication log file name
- Modifications control_content_menu, control_user_menu, licensenotification_form, and media_edit_explorer in order to adjust field widths
- Modifications in the CSS of all design themes in order to reduce the vertical input padding
- Modifications in page_info in order to enable access statistics for folders
- Modifications in function rdbms_insertdailystat in DB Connect in order to convert the container ID to an integer value
- Modifications in function rdbms_insertdailystat in DB Connect in order to support the new input parameter that includes all sub-objects of a folder
- Modifications in function rdbms_insertdailystat in DB Connect in order to collect all sub-objects of a folder and log the daily access statistics for each included object
- Modifications in function rdbms_insertdailystat in DB Connect in order to support the container ID as an input array
- Modifications in various functions in the Main and Media API in order to support the new input parameter of function rdbms_insertdailystat
- Modifications in function rdbms_searchcontent in DB Connect in order to trim folder path after verification
- Modifications in function rdbms_getmediastat in DB Connect in order to include folders in the statistics
- Modifications in function createmultidownloadlink in Main API in order to provide container ID in the zipped file name for statistics
- Modifications in function clonefolder in Media API in order to collect and return the container IDs and remove the writing of statistics by function rdbms_insertdailystat
- Modifications in function zipfiles in Media API in order to save temporary file with all container IDs for statistics
- Modifications in function downloadfile in order to support the temporary file with all container IDs for statistics
- Modifications in function downloadfile in order to verify that a valid container Id has been provided before writing the statistics data
- Modifications in main.css and implementation of the new CSS class hcmsBlur for all design themes
- Implementation of a new blur effect in the logon and register screen if a key is pressed in the form
- Modifications in home screen in order to support the modified CSS classes
- Modifications in control_user_menu in order to support user name and password length of max. 100 digits
- Modifications in user_edit in order to apply max. length restrictions on input fields
- Modifications in SOAP service user_edit in OpenAPI of the Connector Module in order to support the new input parameters of function edituser
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to support the new input parameter to include sub items in the result
- Modifications in function processobjects in Main API in order to log error if the marked object does not exist in the file system
- Modifications in daily job in order to remove deleted objects from the database that could have not be deleted in the file system
- Modifications in control_log_menu in order to use same title for the central and publication logs
- Modifications in service savecontent due to minor changes in the logging data
- Modifications in function manipulateobject in Main API due to minor changes in the logging data
- Implementation of a new blur effect in the home screen if the home box selector is used
- Modifications in function getthemelocation in Get API in order to force the design theme defined by the main configuration
- Modifications in function getbrowserinfo in Get API in order to support MS IE 11 and Edge
- Modifications in home, userlogin, and userregister in order to apply new video attributes
- Modifications in home box server_load in order to disable reload if MS IE or Edge is used (in order to support the blur effect for videos)
- Implementation of the new object browser in order to support the browsing of the large previews
- Implementation of default dimensions in explorer_objectview in order to create temporary images of standard sizes
- Modifications in JS function hcms_sortTable in main.js in order to save sorted objects
- Modifications in explorer_objectview, frameset_content, and frameset_objectlist in order to support image browsing
- Implementation of the new JS functions hcms_getLocation and hcms_getObject in main.js
- Implementation of the new JS function hcms_collectObjectpath in contextmenu.js in order to initialize the hcms_objectpath JS array
- Modifications in explorer_objectlist, search_objectlist, log_list, queue_objectlist, and message_objectlist in order to implement the new local JS function initialize and collect all object paths (only for asset or page objects)
- Modifications in export_form in order to support the new JS functions hcms_getLocation and hcms_getObject
- Modifications in service/sendmail in order to automatically close sendmail form after 1 second
- Implementation of the new template variables %url_tplmedia% and %abs_tplmedia%
- Modifications in frameset_content and frameset_objectlist in order to remove iframe style restrictions for iOS and implement new styles for scrolling on mobile devices
- Modifications in control_message_menu and message_objectlist in order to resize message window
- Modifications in queue_objectlist and message_objectlist in order to sort all date formats
- Modifications in function checkusersession in Security API in order to verify if session variable for the publication access exists
- Modifications in various functions of the Main and Set API in order to verify if the DB Connect function exists
- Design modifications in the installation routine
- Update of all language files
- Update of the Administrators Guide, Connector Guide, Template Guide and Programmers Guide
- Implementation of bookmarks into all guides
- Bug fix: user_sendlink did include a wrong div-endtag
- Bug fix: control_user_menu did use obsolete td-tag and name for img-tags in toolbar
- Bug fix: Function scriptcode_clean_functions in Security API did exclude template code that had wrong or no application input parameter
- Bug fix: The folder/file download without options in control_objectlist_menu did not work if the select area has been used (page variable was not present but has been verified)
- Bug fix: main.js and contextmenu.js did not provide the fix for iframes for JS alert and confirm
- Bug fix: Initialization of the theme and homebox variables has been missing in control_user_menu, user_edit, and user_objectlist
- Bug fix: JS function hcms_bubbleSort in main.js did not remove spaces or commas in numbers
- Bug fix: control_queue_menu did not verify all permissions of users and killed user session if a queue entry has been deleted
- Bug fix: Function processobjects in Main API did use deprecated name "intention" instead of "action" for the mail service
- Bug fix: Service sendmail did not use the provided user name from mail file and always tried to access the user name from the user session
- Bug fix: search_objectlist did net exclude "add to favorites" from the context menu of the recycle bin

Version 8.0.5
Release 10/2019
- Moved function checklanguage and checkgroupaccess from template engine to Security API
- Modifications in function checkgroupaccess in order to verify the group membership and return false in case there is none
- Modifications in function userlogin in Security API in order to remove columns for the objectlist if user has no access to the content (defined in groups-attribute by the template tag)
- Implementation of the function call checkgroupaccess in function userlogin in order to verify access to the content (for selecting columns in the context menu in explorer_objectlist)
- Implementation of the image viewer snippet support in function showmedia of UI API and service/savecontent
- Modifications in service/savecontent, image_viewerconfig, and media_playerconfig in order to provide the "Title" text content to the media viewer/player
- Modifications in page_info in order to verify that DB Connect is set
- Implementation of the new encrypted dl and wl parameter in service/mediawrapper and service/mediadownload that supports an encrypted combination of the object hash, media type and config value
- Modifications in function createwrapperlink and createdownloadlink in Main API in order to support the media type and config value as input parameters and to create the new encrypted wl and dl parameter
- Design modifications in media_playerconfig
- Implementation of the new service/support in order to access event logs
- Modifications in template engine in order to display preview and the form next to each other for large screen resolutions
- Modifications in function showmedia in UI API in order to always display the object name (including the view type "media_only")
- Modifications in control_content in order to relocate the minimize/maximize buttons
- Modifications in explorer_objectview in order to define offset parameter and to display the object name
- Implementation of the main configuration setting $mgmt_config['object_newwindow'] in order to enable and disable new windows for objects
- Modifications in frameset_main and frameset_mobile in order to support the new object window parameter
- Implementation of JS function initialize in explorer_objectview in order to enable previous and next buttons if no object array is available
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js in order to open objects and messages in new or main window
- Implementation of new JS function setwindows in frameset_main and frameset_mobile in order to set the new window parameters for object, message and user forms
- Modifications in message_objectlist in order to open a new window on double klick
- Renamed various local JS functions (this also required modifications of functions in contextmenu.js)
- Modifications in template engine in order to execute facedetection after the image has been loaded
- Modifications in control_objectlist, explorer_objectlist, and search_objectlist in order to verify the sidebar based on its current display style setting
- Modifications in API loader in order to reset new object window setting of the main configuration for the Mobile Edition
- Modifications in API loader in order to disable face recognition setting of the main configuration for the Mobile Edition
- Modifications in function showmedia in order to provide the file name for the PDF viewer used for file download
- Modifications in template engine in order to verify if the detectface JS function has been executed and call it again in case it hasn't
- Implementation of the new JS function hcms_arrayUnique in main.js
- Modifications in template engine in order to call JS function hcms_arrayUnique in JS function collectFaces (remove duplicates)
- Modifications in JS function detectFaceOnImage in order to remove all face markers before creating them based on the JSON definition
- Modifications in JS function deleteFace in order to remove all face markers instead of hiding them
- Modifications in function createimages_video in Media API in order to support the width and height input parameter for the size of the created images (does not save thumbnails in the cloud or by remote client)
- Modifications in function createmedia in Media API in order to create thumbnails for each video of type "origthumb"
- Modifications in function deletemediafiles in Main API in order to remove directory for video thumbnail images
- Implementation of the thumbnail support for the VIDEO.JS video player in order to display thumbnails when hovering over the progress bar 
- Modifications in function showvideoplayer and showvideoplayer_head in UI API in order to include the thumbnail support for VIDEO.JS
- Modifications in function createviewlink in Main API in order to support the video thumbnails (container-id/thumbnail-file)
- Modifications in function createpublication in Main API in order to verify that at least on letter is used in the publication name
- Modifications in service/mediawrapper and service/mediadownload in order to support video thumbnails (changed mediafile name verification from valid_objectname to valid_locationname)
- Modifications in control_site_menu in order to verify siteaccess variable and remove deprecated border attribute in image button
- Modifications in annotate.js in order to relocate some of the toolbar buttons
- Modifications in media_playerconfig in order to apply new styles on iframe
- Added file extension "pspimage" to image formats in include/format_ext
- Modifications in page_multiedit in order to set body height to auto
- Modifications in user_objectlist in order to open new window on double click
- Modifications in frameset_user in order to enable scrolling
- Minor modifications in all framesets
- Renamed various function in DB Connect in order to separate the functions of class hcms_db from the standard PHP functions
- Modifications in all functions in Update API that used the hcms_db class of DB Connect
- Removed save and close button and JS function from page_multiedit
- Modifications in page_multiedit in order to display location on mouse over thumbnails
- Modifications in function zipfiles in Media API in order to verify if total file size in comparison with the zip file size with no compression has changed -4/+4 percent 
- Modifications in function zipfiles in Media API in order to recreate ZIP file if the file size is outside the tolerance of -4/+4 percent
- Modifications in function zipfiles in Media API in order to remove the old version of the zip file (due to issues with merging using the zip command)
- Implementation of the new attribute "publishdate" in database table "container" of createtables.sql
- Implementation of the new function update_database_v805 in Update API in order to update database to version 8.0.5
- Modifications in function rdbms_searchcontent, rdbms_replacecontent, rdbms_searchuser, rdbms_searchrecipient, rdbms_getobject_info, rdbms_getobjects, rdbms_getdeletedobjects, and rdbms_getmedia in DB Connect in order to support the new attribute "publishdate"
- Modifications in explorer_objectlist and search_objectlist in order to support the new attribute "publishdate"
- Modifications in page_info in order to support the create date and new publish date from the database
- Modifications in function rdbms_setcontent in DB Connect in order to support the new input parameters for the "modifieddate" and "publishdate"
- Modifications in function getmetadata_container in Get API in order to support the new attribute "publishdate"
- Modifications in function is_date in Main API due to issues with date verification based on DateTime::createFromFormat
- Modifications in function showdate in UI API in order to recreate date if the source and target format is the same
- Modifications in function getmetadata_container in Get API in order to initialize default values for dates and user and to support "user" and "date" as text IDs
- Modifications in function showmedia and showobject in UI API in order to use information from database instead of container and to display owner and dates for all media types
- Modifications in explorer_view in order to use 100 percent of the width die display
- Modifications in explorer_objectlist in order to display loading screen if the columns have been changed
- Implementation of a loading screen in userlogin (update to version 8.0.5 can take several minutes)
- Modifications in main.css of design themes to correct the z-index of CSS classes for the login screen
- Modifications in function manipulateobject in order to call rdbms_setcontent
- Modifications in function showmedia in UI API and explorer_objectview in order to align assets and their name on the left side
- Modifications in JS function hcms_createVTTrecords in main.js and template engine in order to resize VTT fields
- Implementation of RTF document support in main configuration and function showmedia in UI API in order to use the main config setting $mgmt_docconvert for the verification
- Modifications in function convertdate in Main API in order to always recreate input date
- Implementation of the new JS function hcms_getImageSize in main.js in order to get image size as CSS style
- Modifications in function showmedia in UI API in order to get media size of the created temporary image
- Implementation of the JS function hcms_exportChart in the Report Management module in order to support the export of chart images
- Implementation of the JS function hcms_minMaxLayer in main.js in order to support minimizing and maximizing of layers
- Modifications in home box all_reports in order to support the image export and the minimizing/maximizing of reports
- Design modifications in all home boxes
- Removed eleVR and valiant360 JS libraries (360 VR and image viewer)
- Implementation of the new Panolens JS library as 360 viewer and for VR
- Modifications in function showmedia in order to enable 360 views of images and videos
- Implementation of media_360view as 360 degree and VR viewer for images and videos (no support for MS IE and Mobile Edition due to performance issues)
- Modifications in media_playerconfig in order to support width and height settings for the videplayer code snippet and to create the code for the 360 video player (no support for MS IE and Mobile Edition due to performance issues)
- Modifications in image_viewerconfig in order to support the code for the 360 image viewer (no support for MS IE and Mobile Edition due to performance issues)
- Design modifications in version_template_compare
- Implementation of the new function showmedia in order to change default vidoe sizes ro 854x480px
- Modifications in main configuration file in order to change default vidoe sizes ro 854x480px
- Modifications in control_content_menu and control_objectlist_menu in order to improve file download options
- Implementation of new plus/minus buttons for dark and light mode in all design themes
- Modifications in template engine in order to sort the publication names of the search select box
- Modifications in function showmessage and showinfobox in UI API in order to replace close button action JS function hcms_showhideInfo with hcms_switchInfo
- Modifications in function showgallery in UI API in order to always use the media location of thumbnails
- Modifications in function getFileContents in the Workplace Integration module in order to support embedded thumbnails in the HTML link files
- Modifications in home box all_reports in order to use report title instead of the report file name for the select box
- Modifications in Google Cloud Connector in order to support publication specific cloud connections
- Modifications in function setmetadata in Meta API in order to support the new Google Cloud Connector functions
- Modifications in MS Azure Cloud Connector in order to support publication specific cloud connections
- Modifications in function setmetadata in Meta API in order to support the new MS Azure Cloud Connector functions
- Modifications in Amazon AWS Cloud Connector in order to support publication specific cloud connections
- Modifications in function setmetadata in Meta API in order to support the new Amazon AWS Cloud Connector functions
- Modifications in site_edit form in order to manage the Google Cloud API settings including Google Vision, Google Video Intelligence, and Google Speech-to-Text
- Modifications in function editpublication in Main API in order to support the Google Cloud API settings
- Modifications in function buildsearchform in template engine in order to support the new input parameter for enabling and disabling empty values and title display
- Modifications in function buildsearchform in template engine in order to implement a loading screen
- Modifications in Report Management in order to disable empty filter values and display a title for the filters
- Modifications in home box all_reports in order to implement OK button to call the selected report (removed call on selectbox change event)
- Modifications in Report Management in order to add log events to function createreport, deletereport and editreport in the Report API
- Modifications in Report Management in order to add log events to all chart functions in the Report API
- Implementation of the geo location viewer in popup_log
- Modifications in log_list in order to resize the popup window for log entries
- Modifications in Report Management in order to seperate chart configuration values of column and area chart
- Modifications in Report Management in order to verify the publication access of the user when executing a SQL query
- Design modifications in Report Management
- Implementation of download and access links as virtual html files in the Workplace Integration module (WebDAV)
- Modifications in functions createobjectaccesslink, createwrapperlink, and createdownloadlink in Main API in order to support and extract the container ID from a media file
- Modifications in function writeSessionDataToFile in Workplace Integration module in order to set time zone of the user
- Modifications in class Sabre_hyperCMS_File and function getChildsForLocation, function get, function getFileContents, function httpGet in Workplace Integration module in order to support HTML access/download links (return HTML file instead of the files content)
- Implementation of the new publication configuration settings in order to enable and disable WebDAV download and access links
- Modifications in site_edit_form in order to support the new WebDAV download and access links
- Modifications in function editpublication in Main API in order to support the new WebDAV download and access links
- Implementation of the new function showthumbnail in UI API that provides an optionally base64 encoded thumbnail image
- Bug fix: Function showmedia in UI API did not apply the CSS class "hcmsHeadlineTiny" to audio and video names
- Bug fix: The height of the facename input fields has been to low in the template engine and has been corrected from 18px to 32px
- Bug fix: control_objectlist_menu did not close the selector if multiple objects have been selected for editing
- Bug fix: Firefox is not able to stare boolean values in local storage and therefore caused a misbehavior when comparing the values for the new window settings
- Bug fix: Function showobject in UI API did use wrong variable name and was not able to access the object information
- Bug fix: frameset_objectlist did provide the style property "overflow" 2 times for the same div-tag
- Bug fix: explorer_objectview did not assign the style property "z-index" to the toolbar for the preview of pages
- Bug fix: JS function deleteFace did not prevent the functions createFaceOnImage and createFaceOnvideo being executed on click of the face delete button (changed onclick to onmousedown event)
- Bug fix: page_multiedit initialized the variables is_audio, is_image, and is_video as true instead of false and set the values false after the verification of the media type
- Bug fix: explorer_objectlist did not use modified date from database for folders due to the verification of the file size instead of the modified date
- Bug fix: Function createdocument in Media API did not correctky verify the requested format in $mgmt_docoptions
- Bug fix: Function convertmedia in Media API did exclude images as target formats for document conversions
- Bug fix: search_objectlist set the variable maxhits always to 300 if the verification of maxhits was successful
- Bug fix: Function cretaemedia in Media API did not correct the width and heigth in all cases by verifing that the width and height is divisible by 2
- Bug fix: Function createfilename in Main API had issues if single and multibyte characters have been mixed in a string. The function verifies the result and corrects it in this case.

Version 8.0.6
Release 01/2019
- Modifications in German language file
- Modifications in function userlogin in Security API in order to suppress PHP deprecated error and comment the use of a deprecated salt (used before version 7.0.6)
- Modifications in function cleancontent in Main API in order to remove all multi-dots/commas/underscores, tab spaces, newlines, quotes, brackets, underscore, and semicolon from being removed from the string
- Modifications in template engine in order to adjust width of geo location field beneath the map
- Modifications in function getmapping in Meta API in order to modify EXIF tags and add GPS geo location tags (alternative EXIF mapping based on the output of function extractmetadata has been implemented as example comment)
- Modifications in function setmetadata in Meta API in order to use function exif_getdata instead of native PHP function
- Modifications in function setmetadata in Meta API in order to set latitude and longitude provided by EXIF data (overwrites users GPS coordinates)
- Modifications in function exif_getdata in Meta API in order to supply all GPS coordinates (latitude, longitude, altitude)
- Modifications in function rdbms_createobject in DB Connect in order to support latitude and longitude as optional input parameters
- Re-Implementation of function geo2decimal in Meta API in order to support the GPS coordinates output of function exif_getdata 
- Implementation of the new main configuration setting $mgmt_config['gps_save'] in order to save the GPS coordinates provided by the media file (overwrites users geo location)
- Modifications in function createuser in Main API in order to require a minimum length of 4 digits for the user name
- Modifications in service savecontent in order to verify the main configuration settings
- Modifications in function setmedia in Set API in order to replace a deprecated text message by an error log entry
- Modifications in function setmedia in Set API in order to remove the input parameter for current object reference and automatically extract the old object reference for the link management
- Modifications in function setpagelink in Set API in order to remove the input parameter for current object reference and automatically extract the old object reference for the link management 
- Modifications in function setcomplink in Set API in order to remove the input parameter for current object reference and automatically extract the old object reference for the link management
- Modifications in service savecontent in order to remove the request parameters for current used object references and modify the function calls to setmedia, setpagelink, and setcomplink
- Modifications in function setmedia, setpagelink, and setcomplink in Set API in order to convert the provided object references (call of function convertpath)
- Modifications in function function convertpath in order to verify the root path provided by the publication configuration
- Modifications in function rdbms_getduplicate_file in DB Connect in order to exclude objects in the recycle bin
- Modifications in template engine in order to remove the GET parameters for the currently used object references
- Modifications in frameset_edit_link, link_edit_page, frameset_edit_media, media_edit_page, frameset_edit_component, component_edit_page_multi, and component_edit_page_single in order to remove the parameter for current object reference 
- Modifications in Import/Export module in order to remove the extraction of the current object references from the container and modify the function calls to setmedia, setpagelink, and setcomplink
- Modifications in function link_db_update in Link API in order to return the link index database if the old and new links are the same
- Modifications in function getobjectid and function getobjectlink in Get API in order to remove the separator at the end of the string
- Modifications in the template engine in order to support the new template variable %user% and to provide the system session for the rendering/execution of the template script code
- Modifications in function rdbms_searchcontent in DB Connect in order to support the new input parameter for the sorting of the search result
- Modifications in Import/Export module in order to verify the extracted XML nodes
- Modifications in all content editors in order to set the character set in the HTTP header as well
- Implementation of the new function convert_utf8 in Main API in order to convert strings and arrays to UTF-8 (UTF-8 is mandatory for json_encode)
- Implementation of the new function savecontent in Main API (this function does not replace service savecontent and should only be used for programming)
- Implementation of the new function is_folder in Main API in order to verify if a provided object is a folder
- Modifications in popup_action in order to check the permissions of folders for action "unlock"
- Modifications in function savecontent in OpenAPI library in order to use the new function savecontent and modify the WSDL template accordingly
- Modifications in OpenAPI functions in order to serialize and unserialize instead of json_enode and json_decode
- Modifications in Main API functions in order to support the new main configuration settings $mgmt_config['api_checkpermission'] and check the user permissions
- Modifications in Task Management API functions in order to support the new main configuration settings $mgmt_config['api_checkpermission'] and check the user permissions
- Modifications in Project Management API functions in order to support the new main configuration settings $mgmt_config['api_checkpermission'] and check the user permissions
- Modifications in Workflow Management API functions in order to support the new main configuration settings $mgmt_config['api_checkpermission'] and check the user permissions
- Implementation of the new function getobjectlist in Get API as a simplified wrapper function for rdbms_searchcontent
- Modifications in function createmultidownloadlink in Main API in order to support an array is multiobject input parameter and to accept multiobjects with only one object
- Modifications in function showAPIdocs in order to use unordered lists for the HTML output of the input, global, and output parameters. Moved the description after the title.
- Modifications in function showAPIdocs in UI API in order to support a new input parameter for horizontal rules and the display of the description, input parameters, global variables, and output in the HTML output
- Modifications in function getusersonline in order to verify that the separator exists in the session record of the user
- Modifications in function uploadfile in Main API in order to fallback to rename if move_uploaded_file failed for the upload of a new thumbnail file
- Modifications in function uploadfile in Main API in order to include new error log events
- Modifications in group_edit_form in order to set default values before the extraction of the permissions from the group data
- Modifications in function correctfile in Main API in order to convert the file name (function createfilename)
- Modifications in function deletefolder in Main API in order to use function is_emptyfolder instead of scandir
- Modifications in function showmedia in UI API in order to remove MS IE version verification due to issues with the PDF viewer (PDF.js)
- Update of PDF.js JavaScript library from version 1.1.215 to version 2.2.228
- Implementation of the new function showworkflowstatus in UI API in order to display the workflow status information
- Design modifications in page_view
- Modifications in installation routine in order to create the contentcount.dat file. Removed the contentcount.dat file from install directory.
- Modifications in installation routine in order to modify the setmedia call due to the removed input parameter of the function
- Modifications in function userlogin in Security API in order to verify if the check.dat file has been saved successfully 
- Modifications in function savecontainer in Main API in order to verify that the container content tag exists
- Bug fix: Function rdbms_searchcontent in DB Connect did not escape % and _ in the search expressions as they are used as wildcard characters in the SQL query
- Bug fix: user_edit did not verify the login category before the user administration permission check
- Bug fix: Modifications in function iptc_create, xmp_create, and id3_create in Meta API in order to extract the text ID without the type prefix from the mapping data
- Bug fix: Function showcompexplorer in UI API did provide thumbnail file name instead of thumbnail image if no individual thumbnail has been created
- Bug fix: Function manipulateobject did not remove dot of the .off file extension for action "page_rename" and therefore caused the creation of the same object if it has not been published

Version 8.1.0
Release 02/2020
- Implementation of the new RESTful API in the Connector module
- Implementation of the new RESTful API library and test script
- Implementation of the new function rewrite_restURI in order to rewrite the URL for the new REStful API and its GET requests
- Renamed the "openapi" connector directory to "soap" since the new OpenAPI will include a SOAP "soap" and RESTful API "rest"
- Modifications in API loader in order to include the RESTful API of the Connector module
- Implementation of the new drag and drop feature for objects and folders in order to support cut, copy, and connected copy by drag and drop (not supported by the Mobile Edition and by MS Internet Explorer)
- Modifications in explorer in order to support the new drag and drop feature and attributes in the folder items of the navigation tree
- Modifications in explorer_objetclist and search_objectlist in order to support the new drag attributes in the folder items
- Implementation of the new JS function hcms_findElementByTagName in contextmenu.js
- Modifications in the required permissions for linked copy- The create permission is has been removed from all functions and permission checks.
- Modifications in popup_status in order to support 2 stages of actions (used for the new drag and drop features)
- Modifications in popup_status in order to focus on the popup window for the start and the end of the process
- Modifications in popup_action in order to reduce the code for the actions cut, copy, and linkcopy
- Modifications in function cutobject, copyobject, and copyconnectedobject in order to remove duplicates in the clipboard
- Implementation of the new function getclipboard in Get API in order to read the clipboard objects
- Modifications in search_objectlist and frameset_objectlist in order to support the display of the clipboard objects
- Modifications in function rdbms_getobject_info in DB Connect in order to support an object path as input besides the object id and object hash
- Modifications in function manipulateallobjects in order to verify if a folder can be moved before calling function copyfolders
- Modifications in explorer_objectlist and search_objectlist in order to create folder file if it does not exist
- Modification in frameset_edit_link and frameset_edit_media in order to support scrolling on iOS devices
- Renamed JS function hcms_drag to hcms_dragLayers in main.js
- Modifications in workflow_manager and template engine due to the renamed JS function hcms_dragLayers
- Design modifications in frameset_content 
- Update of all language files
- Modifications in frameset_edit_link and frameset_edit_media in order to support scrolling on iOS devices
- Implementation of the new function recreateusersession in Security API in order to read and recreate the session data in case the data is missing (due to issues with Android Chrome and the Mobile Edition)
- Modifications in function registeruser in Security API in order to save the session data of the user for recreation in case the data is missing
- Modifications in function writesessiondata in Security API
- Modifications in function writesession in Security API in order to force function writesessiondata to save the session data of the user
- Modifications in function setsession in Set API in order to force function writesessiondata to save the users session data even if the main configuration setting $mgmt_config['writesessiondata'] is disabled
- Modifications in various services in order to apply function setsession and save the users session data for recreation
- Modifications in function toggleview, togglesidebar, and showcompexplorer in UI API in order to apply function setsession and save the users session data for recreation
- Modifications in template engine in order to apply function setsession and save the users session data for recreation
- Modifications in editorf in order to apply function setsession and save the users session data for recreation
- Modifications in function, cutobject, copyobject, copyconnectedobject, manipulateallobjects, and createfavorite in Main API in order to apply function setsession and save the users session data for recreation
- Modifications in the Youtube Connector module in order to apply function setsession and save the users session data for recreation
- Modifications in the API loader in order to recreate the user session data if it is missing (experimental)
- Removed JQuery Mobile Edition due to lack of support and issues with Android Chrome browser
- New implementation of the Mobile Edition without any third-party library
- Modifications in frameset_main and JS function hcms_openChat in main.js in order to apply transition effect on explorer and chat frames
- Modifications in mobile design theme
- Design modifications in control_objectlist_menu for the new Mobile Edition
- Implementation of new JS function openChat in frameset_mobile due to issues with JS function hcms_openChat in main.js in Android Chrome
- Removed deprecated session variables "site_editor" and "contenttype_editor" of the rich text editor in template engine and editorf
- The chat is also supported on iOS devices by the Mobile Edition
- Modification in JS function hcms_bubbleSort in main.js in order to treat empty strings as zero when sorting by numbers
- Modifications in explorer_objectlist and search_objectlist in order to support the navigation of folders by the implementation of a new button for the Mobile Edition
- Design modifications in Blue design theme
- Design modifications in home screen
- Modifications in portal_edit in order to load the new wallpaper by using a timestamp in the request
- Modifications in JS function switchsidebar in control_objectlist_menu in order to apply transition effect for the sidebar
- Modifications in JS function minControlFrame and maxControlFrame in control_content_menu in order to apply transition effect for the sidebar
- Modifications in JS function hcms_showInfo, hcms_hideInfo, hcms_switchInfo, hcms_switchSelector, hcms_hideSelector, and hcms_showHideLayers in main.js in order to apply transition effect for the sidebar
- Modifications in explorer in order to reduce the free spaces and the file size
- Modifications in explorer in order to enable any combination of the full-text or advanced or keyword search with the recipient, date, media, geo location, and media search
- Modifications in function link_db_getobject in Link API in order to return multiobjects that are an array
- Modifications in function createmultidownloadlink in order to treat a single multiobject like a multimedia object
- Implementation of the new JS functions for select boxes in main.js
- Removed local JS function for select boxes from user_edit
- Implementation of the new JS function hcms_getBrowserName in main.js
- Removed deprecated browser information from main.js
- Removed MS Internet Explorer support from drag and drop JS functions in contextmenu.js
- Modifications in function showtranslator in UI API in order to change left padding for the select boxes
- Modifications in main.css and navigator.css of all design themes in order to apply a new design for the select boxes
- Modifications in frameset_objectlist and frameset_content ion order to adjust the popup frame for previews for the Mobile Edition
- Implementation of the new local JS function switchInfo in the home screen in order to solve display issues with MS Edge
- Modifications in local JS functions in explorer_objectview due to issues with Safari and offsetWidth and offsetHeight properties
- Modifications of the standard preview sizes in explorer_objectview in order to replace 800x600 with 1024x768 as the new standard size
- Modifications in message_objectlist, queue_objectlist, and user_objectlist in order to replace hidden input element by link element for the new content menu that selects the attribute data-objectpath of the links
- Modifications in explorer_objectlist in order to set a max height for the context menu of the list header
- Modifications in function showmedia in UI API in order to verify media info array (only used for fallback if media info is missing)
- Modifications of the max file sizes for the preview of MS Powerpoint and MS Excel files in the main configuration (used for installation)
- Modifications in explorer_objectlist, frameset_objectlist, and control_objectlst_menu in order to change the sidebar width from 330 to 350 pixels
- Modifications in function GCanalyzeimage in Cloud Connector in order to render image in JPG format for API call
- Modifications in function GCanalyzevideo in Cloud Connector in order to provide preview video for API call
- Implementation of the new function metadata_exists in Meta API in order to verify if the metadata exists before making a Cloud API call
- Modifications in function setmetadata in Meta API in order to make Cloud API calls after the standard metadata extraction from files and to verify if the metadata exists before making a Cloud API call 
- Modifications in explorer_objectview in order to reduce the navigation area size around the arrows
- Implementation of the Google Analytics support for most parts of the system in order to track the user activities in the system besides the event log
- Implementation of the new function getgoogleanalytics in Get API
- Implementation of the new footer include script in order to include JS code (required for Google Analytics)
- Implementation of the new main configuration setting $mgmt_config['googleanalytics_key'] in order to save the Google Analytics key for user tracking
- Removed Google Plus support from function showsharelinks in UI API
- Modifications in frameset_main in order to display the left bar for the asset browser
- Modifications in service mediawrapper in order to provide the file name (same as in service mediadownload)
- Modifications in function convertmedia in Media API in order to support the type "origthumb" for thumbnail/preview videos
- Modifications in function createmedia in Media API in order to verify the provided type exists in the image rendering options
- Implementation of the advanced image editing options for download and wrapper links for single media objects in index, service mediadownload and mediawrapper
- Design modifications in explorer_objectlist
- Update of all user manuals
- Bug fix: frameset_edit_media did not close the div tag for the control layer
- Bug fix: Function createmultidownloadlink did not remove the tailing separator from the multiobject input
- Bug fix: Function showmedia in UI API did not support Safari and Opera for document preview due to missing browser verification
- Bug fix: Function createmultidownloadlink in Main API did not verify if a single multiobject was a folder and therefore need to be zipped
- Bug fix: Modifications in template_edit_mediatype in order to correct remove deprecated HTML table attributes and assign CSS class
- Bug fix: explorer_imagepreview did not close the type attribute of the JavaScript tag
- Bug fix: Function correctfile did use function createfilename on locked content container names and therefore was not able to load the locked container

Version 8.1.1
Release 03/2020
- Implementation of the new publication access permissions for SOAP and RESTful services in order to activate and deactivate them per publication
- Modifications in all SOAP and RESTful functions in order to support the new publication setting
- Modifications in function editpublication in order to support the new settings for the SOAP and RESTful API access permissions
- Modifications in API loader in order to include RESTful library only if the SOAP API is not loaded already (SOAP configuration)
- Modifications in site_edit_form in order to include the settings for the RESTful and SOAP API
- Design modifications in site_edit_form
- Design modifications in task management
- Implementation of the new Kanban style view in the task management
- Design modifications in page_multiedit
- Modifications in function isLoggedInHyperdav in WebDAV module in order to only accept user session files that are not older than 24 hours
- Modifications in function setGlobalsForConfig in WebDAV module in order to include globals of the language files
- Modifications in WebDAV index (loader) in order to load English as the default language file 
- Modifications in function createfolder in Main API in order to add log events
- Modifications in API loader in order to include language file without verification of the $hcms_lang variable
- Modifications in hypermailer API in order to set default language code
- Modifications in function createmedia in Media API in order to require a source file of at least 100 bytes (to avoid WebDAV error on empty files)
- Modifications in JS function hcms_showHideLayers in main.js in order to set z-index (2nd argument) besides the visibility
- Design modifications in workflow_manager of the Workflow Management module
- Implementation of the new CSS classes hycmsToDo, hcmsInProgress, and hcmsFinished in all design themes
- Implementation of the function showdate in the task management in order to localize the displayed start and end dates of the tasks
- Design modifications in user_sendlink
- Modifications in function showmessage in UI API in order to assign unique tag id if the default id is used
- Upgrade of the hypridauth API in the Connector module
- Modifications in the Mobile Edition in order to minimize the navigation sidebar on most navigation endpoints except for the asset or page navigation items
- Modifications in news home box in order to support max/min the display of the box
- Modifications in function rdbms_getmediastat in DB Connect in order to sort the result by date (important for home boxes recent downloads, uploads, and uploadlinks)
- Modifications in function rdbms_getmediastat in DB Connect in order to support the new input parameter maxhits for the limitation of the number of the returned results
- Modifications in recent downloads, uploads, and uploadlinks home box in order to use the maxhits parameter for the call of function rdbms_getmediastat and to break the loop when maxcount has been reached
- Update of all language files
- Implementation of paging besides the expanding of folder and objects in explorer_objectlist and search_objectlist
- Implementation of the new main configuration setting $mgmt_config['explorer_paging'] in order to enable paging instead of expanding of the object list
- Modifications in explorer_objectlist in order to break loop when the requested objects have been collected
- Modifications in function createfilename in Main API in order to verify the truncated file name 2 times
- Removed the CSS class hcmsObjectListMarker from all design themes
- Implementation of the CSS class hcmsObjectListMarker in explorer_objectlist and search_objectlist
- Modifications in explorer_objectlist and search_objectlist in order to replace the gallery view table data elements width div elements
- Modifications in contextmenu.js in order to support the new gallery based on div elements
- Modifications in explorer_objectlist and search_objectlist in order to provide larger thumbnail images for medium (max 160px) and large (max 220px) views
- Modifications in all design themes in order to support larger thumbnail images for medium (160px) and (max 220px) large views
- Removed deprecated image button_explorer_more.png from all design themes
- Modifications in control_message_menu and message_objectlist in order to remove the maxhits parameter (maxhits is 300 by default)
- Modifications in control_objectlist_menu in order to correct view icon placement on iPhones
- Modifications in frameset_objectlist and frameset_mobile in order to remove the maxhits parameter
- Modifications in explorer_objectlist and search_objectlist in order to correct the total number of objects if the object has been marked as deleted or the user has no access permission
- Modifications in user_objectlist in order to correct the total number of users if hidden users are in the list
- Modifications in queue_objectlist in order to correct the total number of queue entries if the entry is not valid for the current user
- Modifications in message_objectlist in order to correct the total number of message entries if the message is not valid
- Implementation of paging besides the expanding in queue_objectlist, message_objectlist, and user_objectlist
- Design modifications in queue_objectlist
- Modifications in OpenSearch Connector module in order to have all input request parameters in the same code section
- Implementation of the client-side memory for the column widths per publication and category in explorer_objectlist
- Implementation of the new JS function sizecols in explorer_objectlist
- Implementation of function addslashes in all chart functions of the Report Management API in order to escape the text used in the charts
- Modifications in function showgeolocationchart in Report Management API in order to define default geo location for the center of the map
- Modifications in function showgeolocationchart in Report Management API in order to support links in markers that will be opened in a new browser windows/tab
- Modifications in function showgeolocationchart in Report Management API in order to support label text for markers
- Implementation of a selected icon for CSS class hcmsObjectSelected for the gallery view in all design themes
- Modifications in explorer_objectlist and search_objectlist in order to assign CSS class hcmsObjectUnselected as default
- Bug fix: Function showpiechart in the Report Management module did not declare the global user variable
- Bug fix: Function rdbms_getmediastat in DB Connect did only apply 'order by date' in some cases based on the input parameters for the container ID and object path
- Bug fix: The temporary variables for each queue entry have not been fully seperated from the filter variables (issue with $site)
- Bug fix: popup_action did not assign the result of function copyobject for a single object to a variable
- Bug fix: popup_action and poup_status did not verify if the multiobject variable holds more than one object
- Bug fix: Function encryptfile and decryptfile of the Free Edition did not return the content of the media file 

Version 8.1.2
Release 04/2020
- Implementation of the new main configuration setting $mgmt_config['upload_newwindow'] in order to open the upload window in the same or new browser window (does not apply for Mobile Edition)
- Implementation of the new JS function openUpload and switchUpload in frameset_main
- Modifications in popup_upload_html in order to support the new upload design
- Modifications in control_objectlist_menu in order to support the new upload design
- Modifications in function showcompexplorer in UI API in order to support the new upload design
- Added and partially replaced CSS style overflow to iframe scrolling attribute in explorer_objectview, frameset_edit_component, frameset_content, frameset_edit_link, frameset_edit_media, frameset_group_access, frameset_group, 
  frameset_licensenotification, frameset_log, frameset_main, frameset_media, frameset_message, frameset_mobile, frameset_objectlist, frameset_pers, frameset_portal, frameset_queue, frameset_site_edit, frameset_site, 
  frameset_template_change, frameset_template_edit, frameset_template, frameset_user, media_playerconfig, page_info_ip, plugin_showpage, popup_upload_html, search_objectlist
- Added and partially replaced CSS style overflow to iframe scrolling attribute in news home box
- Added and partially replaced CSS style overflow to iframe scrolling attribute in the Connector modules frameset_imexport, frameset_instance
- Added and partially replaced CSS style overflow to iframe scrolling attribute in frameset_report, frameset_workflow
- Added and partially replaced CSS style overflow to iframe scrolling attribute in media_frameset of editor
- Added and partially replaced CSS style overflow to iframe scrolling attribute in the templates 360view.comp.tpl, CarouselZoom.comp.tpl, Galleria.comp.tpl, GalleriaSearch.comp.tpl, PhotoSwipe.comp.tpl, Upload.comp.tpl
- Minor design modifications in log_list, message_objectlist, and user_objectlist
- Changed background color in CSS class hcmsWorkplaceObjectlist in navigator.css of the day design theme
- Design modifications in function showtopbar in UI API
- Enabled the standard context menu in page_info in order to copy and paste links more easily
- Modifications in various JS functions in main.js in order to change the transition duration to 0.3 seconds
- Modifications in control_objectlist_menu, frameset_content, frameset_main, and frameset_mobile in order to change the transition duration to 0.3 seconds
- Design modifications in the home screen and home boxes
- Implementation of the new JS function showwarning in frameset_main in order to display a warning message before an unload
- Updates in the English and German languages files
- Design modifications of the video buttons in function showmedia in UI API
- Implementation of the loading screen in popup_action and popup_status due to long processing times for larger collections of objects in case the recycle bin is used (database needs to update all entries)
- Removed JS eval function for the evaluation of HTML elements in the JS code of various scripts
- Design modification in the CSS classes in main.css and navigator.css of all design themes regarding the select elements and background colors of input, textarea, and select elements
- Implementation of transparent effect for all disabled form elements in the CSS classes in main.css and navigator.css of all design themes
- Design modification in the search form of the explorer
- Removed top bar from page_info
- Implementation of the JS function encodeURIComponent for all GET parameters values of JS function hcms_createContextmenuItem in contextmenu.js
- Removed url_encode on JS function parameters in explorer_objectlist and search_objectlist
- Implementation of the JS function encodeURIComponent in JS function openUpload in frameset_main
- Implementation of the JS function encodeURIComponent in JS function openObjectView in frameset_content
- Implementation of the JS function encodeURIComponent in JS function openObjectView in frameset_objectlist
- Implementation of the JS function encodeURIComponent in JS function jumpTo in control_queue_menu
- Implementation of the JS function encodeURIComponent in JS function openBrWindowComp in component_edit_page_single and component_edit_page_multi
- Implementation of the JS function encodeURIComponent in JS function geturl in link_edit_page
- Implementation of the JS function encodeURIComponent in JS function openBrWindowMedia in media_edit_page
- Implementation of the JS function encodeURIComponent in various JS function in popup_upload_html
- Implementation of the JS function encodeURIComponent in various JS function in template engine
- Implementation of paging and expanding in the event log viewer log_list
- Modifications in search statistics plugin in order to escape the search expressions for the display
- Modifications in simple statistics plugin in order to apply a new table design
- Modifications in explorer in order to escape the saved search parameters for display
- Added the display of the publication name to all controls
- Implementation of the new function getobjectpath in the Get API (alias for function rdbms_getobject in DB Connect)
- Modifications in function showtopbar and showtopmenubar in UI API in order to add padding to the title/text
- Design modifications in site_edit_form
- Implementation of the full screen upload layer (fully maximized upload window/layer)
- Modifications in log_list and popup_log in order to display all attributes of a log entry
- Implementation of the new main configuration setting $mgmt_config['imageeditor'] in order to define an alternative image editor for single images
- Modifications in service savecontent in order to support the new main configuration setting $mgmt_config['imageeditor']
- Implementation of the new alternative image editor JS-library based on miniPaint (javascript/minipaint)
- Implementation of the new alternative image editor image_minipaint based on miniPaint
- Various modifications in the minipaint bundle.js and user interface in order to support "Quick save" and "Save as" in the system
- Modifications in image_rendering in order to replace the old saving screen by the new one based on CSS class hcmsLoadScreen
- Modifications in function editmediaobject in Main API in order to support a new input parameter for the base64 encoded media data (as alternative to server-side conversion using createmedia)
- Implementation of the new service savemedia in order to save a media file that has been provided/rendered by the client (no server-side rendering except for the new thumbnail)
- Implementation of the new function getbase64fileextension in Get API in order to return the file extension based on the base64 encoded file content
- Modifications in the Attitude design templates (style.css) in install/templates
- Modifications in the web2print example templates in install/templates 
- Upgrade of the rich text editor CKEditor to version 4.14 (upgrade was highly recommended due to security issues in older versions)
- Modifications in editor/ckeditor/plugins/image/dialogs/image.js in order to support the asset browser and the provided scaled media sizes
- Update of TCPDF library to version 6.3.5
- Modifications in function showgeolocationchart of the Report Management API in order to adjus map zoom level and positioning
- Implementation of the new function getscaytlang in Get API in order to provide the language locale for the Scayt plugin of CKEditor 4.14
- Modifications in function showeditor and showinlineeditor in UI API in order to support the new function getscaytlang
- Implementation of the new JS function hcms_dragLayer in main.js for dragging a single element
- Modifications in JS function hcms_ajaxService in main.js in order to log errors in browser console
- Modifications in frameset_edit_component, frameset_group_access, frameset_edit_link, frameset_edit_media, media_frameset, and frameset_workflow_folder in order to support animations for the min/max of the navigation layer
- Modifications in function load_csv in Main API in order to support character encoding and remove exsiting UTF-8 BOM
- Modifications in function create_csv in Main API in order to support MS Excel by optionally adding an UTF-8 BOM to the file and to support character encoding
- Modifications in control_objectlist_menu, control_template_menu in order to support the new input parameter of the function create_csv
- Modifications in JS function translatelanguage of the taxonomy editor (media_taxonomy) in order to delay translation requests
- Design modifications in the taxonomy editor (media_taxonomy)
- Modifications in standard taxonomy in install/data/include/default.taxonomy.csv
- Modifications in the function convertchars in the Main API in order to use function mb_convert_encoding for character conversion and function iconv as fallback
- Implementation of the new JS function hcms_sleep in main.js in order to pause a script
- Modifications in JS function hcms_translateText in main.js in order to delay function calls to the translate cloud service
- Modifications in the English language file
- Bug fix: popup_status did not initialize the array multiobject_temp
- Bug fix: explorer_objectview did not resolve the folders location correctly
- Bug fix: JS function hcms_createContextmenuItem in contextmenu.js did not add the folder to the location for action "preview"
- Bug fix: control_objectlist_menu did reset variable show after initialization and suppressed previous messages of actions
- Bug fix: popup_status reloaded objectlist and caused a repost of data, the reload has been replaced by a request to the same location
- Bug fix: Function showcompexplorer in UI API did not include the full path to lazysizes.min.js
- Bug fix: media_select in editor did not scale the images according to the provided scaling factor (dpi) if the width and height has been correctly provided by function showmedia
- Bug fix: Function savetaxonomy in Meta API did not update the existing taxonomy entries if a new language has been added or an existing language has been removed from the taxonomy
- Bug fix: Function showAPIdocs in UI API was not able to resolve the input of functions if a '//' occurred in the default input values

Version 9.0.0
Release 06/2020
- Implementation of the new system GUI version 9 (Redesign of various toolbars, Redesign of the search and search & replace form)
- Implementation of connections between the workflow items of the Workflow Management module
- Implementation of the new domarrow JS library (does not support IE < 10)
- Implementation of new JS function acceptConnections and rejectConnections in the workflow_manager of the Workflow Management module in order to update connections between the workflow items
- Implementation of the new task title for the workflow items of the Workflow Management module
- Modifications in various function of the of the Workflow Management API in order to support the task title
- Modifications in showworkflowstatus in UI API in order to display the task name in the workflow status
- Modifications in JS functions hcms_dragLayer and hcms_dragLayers in main.js in order to support connections between draggable elements
- Modifications in user_sendlink in order to remove deprecated align attribute in date selector images
- Implementation of optional task start and end date in popup_message (used for accept and reject when executing a workflow)
- Modifications in various functions of the Workflow Management API in order to support the optional task start and end date
- Modifications in various functions of the Workflow Management API in order to support the new task title defined in the workflow definition
- Modifications in task_list in order to show and hide the filter icon
- Design modifications in the Workflow Management
- Implementation of the new refresh button in the task_list of the Task Management module in order to update the task list form the server
- Design modifications in task_list of the Task Management module
- Modifications in page_view in order to delete/reset the existing workflow of the object (workflow edit permission required)
- Modifications in control_workflow_menu in the Workflow Management module in order to disable "Apply workflow to page folders" if the publication is configured as DAM solution
- Design modifications in frameset_imexport_folder of the Im/Export Connector module
- Modifications in the function gettaxonomy_childs in the Get API in order to optionally return the full taxonomy ID path instead of the ID
- Implementation of the new function rdbms_gettaxonomy in DB Connect in order to retrieve the taxonomy data of a specific container
- Implementation of the new function showtaxonomytree in the UI API in order to display the taxonomy tree or a branch including checkboxes for the keywords
- Implementation of a JS based search function with auto scroll feature for the next search results in function showtaxonomytree in the UI API
- Implementation of the new JS function hcms_slideDownLayer in main.js
- Implementation of the new keywords template tag attribute display in the template engine in order to display the taxonomy tree or branch
- Modifications in function settext in Set API in order to support the new keyword tag result array of the new taxonomy tree
- Modifications in service savecontent in order to support the new keyword tag result array of the new taxonomy tree (convert array to comma separated keyword list)
- Modifications in function settaxonomy in order to verify the used language in a text for each text ID individually and to support language settings foreach text ID individually
- Modifications in function rdbms_setcontent in DB Connect in order to reduce database I/O. Function settaxonomy and rdbms_setkeywords have been executed with each content update (both functions analyze the full content of a container, query and update the database)
- Implementation of function settaxonomy and rdbms_setkeywords in service savecontent
- Implementation of function settaxonomy and rdbms_setkeywords in function savecontent in the Main API
- Modifications in page_multiedit in order to support the new taxonomy tree
- Removed the assigned CSS class for disabled fields from page_multiedit
- Modifications in JS function validateForm in page_multiedit and template engine in order to exclude required-constraint on checkboxes
- Modifications in various system components in order to add the attribute type="text/javascript" to the script tag
- Modifications in service savecontent and function savecontent in order to provide the language code to function settaxonomy (restriction of settaxonomy to the selected language provided by the taxonomy tree in function showtaxonomytree)
- Modifications in service savecontent and function savecontent in order to create and save unique keywords for each text ID
- Renamed JS function save to savecontent in page_multiedit
- Modifications in JS function savecontent in page_multiedit in order to process and prepare the content of the taxonomy tree for the AJAX post request
- Design modifications in page_multiedit
- Modifications in page_multiedit in order to display the contents of objects even if they are not the same (if fields are not editable/locked)
- Modifications in media_360view in order to support horizontal panoramic views
- Modifications in function showmedia in UI API in order to use horizontal panoramic view instead of 360 degree view if the media ratio is greater than 3.5
- Design modifications in frameset_objectlist in order to position the close button
- Modifications in media_taxonomy in order to remove the delete language feature (JS function deletelanguage)
- Design modifications in media_taxonomy
- Design modifications in page_multiedit for enhanced usability
- Design modifications in task_list fo Task Management module
- Renamed function gethierarchy_defintion to gethierarchy_definition in Get API and all function calls in the system
- Modifications in portal XML schema in order to add the new navigation node
- Modifications in function editportal in Main API in order to support the new navigation settings
- Modifications in function editportal in Main API in order to automatically update the portal template by adding the new XML node for the navigation
- Modifications in portal_edit in order to implement the new navigation settings and enable the navigation tree options
- Modifications in explorer in order to implement the portal navigation settings for the display of the defined navigation trees of the portal
- Modifications in explorer in order to skip all other publications even if the portal user has access to them
- Moved geolocation detection from home to frameset_main and frameset_mobile
- Design modifications in function showmedia in UI API in order to adjust height of 360 degree video player
- Downgraded three.js to revision 105 due to JS console log message of Panolens
- Design modifications in project_list and function showprojectrecord of the Project Management module/API
- Implementation of the new JS function setdate and setrowclass in project_list
- Modifications in function showprojectrecord of the Project Management API in order to change the row color according to the selected task priority
- Design modifications in task_list of the Task Management module
- Implementation of the new JS function setdate and setrowclass in task_list
- Modifications in task_list in order to change the row color according to the selected task priority
- Modifications in the paging of task_list
- Implementation of the new global JS setting hcms_transitioneffect in main.js in order to enable and disable the transition effect of some functions
- Design modifications in control_message_menu
- Implementation of the load screen in frameset_message
- Modifications in link_explorer in order to update the search field to the new placeholder standard
- Modifications in link_explorer, link_edit_explorer, and function showcompexplorer in UI API in order to execute search if the search expression is empty in order to list all objects of the current location
- Implementation of the new JS function hcms_displayLayers in main.js in order to use the CSS style display instead of visibility (compare JS function hcms_showHideLayers)
- Implementation of the autocomplete search expression history of the user in the home screen search box
- Modifications in function getwallpaper in Get API in order to return default wallpaper in case of an error
- Modifications in all design themes in order to add the new default wallpaper
- Implementation of the new main configuration setting for the Support password $mgmt_config['pass_support']
- Modifications in function rdbms_setcontent in DB Connect
- Modifications in function userlogin in Security API in order to provide the result array as input and use the result array by onlogon_post event
- Modifications in function onlogon_post of the event system in order to return the result array
- Modifications in explorer in order to preload frameseset_objectlist if it has not been loaded
- Modifications in function buildbarchart in template engine in order to support onclick events (links) for the chart bars (use 'onclick' as key name)
- Modifications in function rdbms_getobjects in DB Connect in order to support multiple values separated by | as input for the container ID
- Modifications in up- and download statistics home screen box in order to support links in the chart bars which will lead to a list of all the daily viewed, downloaded, and uploaded objects (search by container ID)
- Modifications in page_info_stats for folders in order to support links in the chart bars which will lead to a list of all the daily viewed, downloaded, and uploaded objects (search by container ID)
- Modifications in frameset_objectlist in order to support the container_id parameter
- Modifications in home screen in order to support popup layers for detailed information and view
- Implementation of the new popup_gallery in order to provide a gallery view for popup layers
- Modifications in serverload home box in order to reload every 10 minutes instead of 5 minutes
- Design modifications in the loading screen
- Minor modifications in popup_save_dropbox
- Implementation of lazyload in function showgallery in UI API
- Modifications in function showgallery in UI API in order to reduce the execution duration on large collections
- Modifications in function showcompexplorer in UI API in order to reduce the execution duration on large collections
- Modifications in all file and folder icons of all design themes in order to remove the shadow effect
- Modifications in the CSS class hcmsImageItem of all design themes in order to remove shadow effect
- Modifications in the CSS classes hcmsThumbnailWidthlarge/medium/small and hcmsThumbnailHeightlarge/medium/small in order to remove border style
- Modifications in explorer_objectlist and search_objectlist in order to remove the image style for asset thumbnails
- Modifications in function getFileContents in the Workplace Integration module in order to delay the access or download link call
- Modifications in template engine in order to add a spacer at the end of the form elements
- Modifications in function createmedia in Media API in order to switch width and height if the video has been autorotated
- Modifications in function readmediaplayer_config in Media API in order to switch width and height if the video has been autorotated
- Modifications in function createthumbnail_video and createimages_video in order to remove the input parameter for the autorotation of the video (only main configuration setting $mgmt_mediaoptions['autorotate-video'] will be applied)
- Updates in the user manuals
- Update of lazysizes JS library to version 5.2.0
- Update of colResizable JQuery library to version 1.6
- Design modifications in all list views
- Modifications in Mobile Edition in order to optimize the status bar in all list views
- Implementation of the new local JS function resetcols in explorer_objectlist in order to reset the width of all columns
- Modifications in function getmetadata_multiobjects in Get API in order to remove all tags from the text content
- Modifications in function cleancontent in Main API in order to convert additional escaped special characters
- Modifications in frameset_objectlist and search objectlist in order to remove function getimagesize and assign both CSS classes for width and height
- Removed all thumbnail size definitions from the design themes CSS and included them locally in frameset_objectlist and search objectlist
- Modifications in control_group_menu and group_edit_form in order to implement the new graphical user interface for managing groups
- Modifications in control_instance_menu in order to implement the new graphical user interface for managing instances
- Modifications in control_site_menu and site_edit_form in order to implement the new graphical user interface for managing publications
- Modifications in control_pers_menu and pers_form in order to implement the new graphical user interface for managing personalization
- Modifications in control_portal_menu and portal_edit in order to implement the new graphical user interface for managing portals1
- Modifications in control_template_menu and template_edit in order to implement the new graphical user interface for managing portals
- Modifications in control_workflow_menu in order to implement the new graphical user interface for managing workflows
- Modifications in control_report_menu in order to implement the new graphical user interface for managing reports
- Modifications in publication management in order to remove unused $site parameter
- Removed site_edit_menu that has been implemented in frameset_site_edit
- Removed template_edit_menu that has been implemented in frameset_template_edit
- Modifications in function createpublication and deletepublication in Main API in order to always close the inheritance database/index
- Design modifications in control_objectlist_menu in order to place the search icon at the right end of the tool bar  
- Design modifications in template media management
- Design modifications in explorer
- Design modifications in frameset_main in order to resize the navigation layer
- Design modifications in explorer in order to resize the search form
- Modifications in explorer in order to implement the search & replace feature and the search inside a location
- Modifications in explorer and explorer_keywords in order to resize according to the size of the new search layer
- Implementation of the new local JS function setSearchLocation in frameset_objectlist, frameset_main, and explorer in order to set the search location
- Removed deprecated search_form
- Modifications in search_objectlist in order to support new search and replace parameter $find_expression (replaces $search_expression that is now only used for the search)
- Design modifications in Import/Export module
- Renamed JS function hcms_ElementStyle to hcms_elementStyle in main.js and all function calls
- Renamed JS function hcms_ElementbyIdStyle to hcms_elementbyIdStyle in main.js and all function calls
- Renamed JS function hcms_showInfo to hcms_showFormLayer in main.js and all function calls
- Renamed JS function hcms_hideInfo to hcms_hideFormLayer in main.js and all function calls
- Renamed JS function hcms_switchInfo to hcms_switchFormLayer in main.js and all function calls
- Enabled scrollwheel option for Google Maps in explorer, template engine, and Report Management module
- Design modifications in control_message_menu for the Mobile Edition
- Design modifications in history for the Mobile Edition
- Design modifications in user_edit
- Design modifications in group_edit_form
- Modifications in message_objectlist in order to remove name column and replace it with the title column
- Modifications in frameset_main in order to switch (max/min) search frame when clicking the search icon
- Modifications in head_contentype in order to initialize the variable $color
- Modifications in template engine in order to verify the variable $list2_array
- Modifications in frameset_main and control_objectlist_menu in order to enable and disable transition effects
- Design modifications in colorful design theme
- Bug fix: CSS classes have been missing in main.css of the standard design theme
- Bug fix: Function getworkflowitem in Get API did not include empty values for "automatic select" of users and groups for a workflow item
- Bug fix: Function settaxonomy in Set API did not perform a search in a standard keyword lists string
- Bug fix: Function settaxonomy in Set API did not provide an empty entry in order to delete all taxonomy entries for the text ID
- Bug fix: Function rdbms_settaxonomy in DB Connect included entries with a taxonomy ID of zero (zero is not a valid taxonomy ID since the taxonomy index start with 1)
- Bug fix: page_multiedit did not correct the field heights based on limits
- Bug fix: page_multiedit did not display the text if it is the same for all selected objects
- Bug fix: hcms_favorites variable name in include/session.inc.php was not correct
- Bug fix: JS function validateForm in template engine did not validate requited fields before testing their values
- Bug fix: JS function validateForm in template engine did not use trim on required values
- Bug fix: Function showthumbnail in UI API did not provide proper link for portal themes
- Bug fix: Disabled automatic design theme in user_edit for the Mobile Edition since it would apply a non-mobile design theme for mobile devices
- Bug fix: Function showcompexplorer in UI API did not provide view parameter when executing the search
- Bug fix: Function showcompexplorer in UI API used the current location instead of the location of the search result objects and therefore was not able to find the object and provide the thumbnail
- Bug fix: Function showcompexplorer in UI API did not provide the CSS class for the gallery view for non-media components/assets
- Bug fix: MS IE did not hide the nested child elements of the div-layers in task_list, using opacity:inherit and z-index:inherit on the child elements to fix the MS IE bug
- Bug fix: Login form userlogin displayed loading screen if no input has been provided
- Bug fix: French language file did not properly end the line of $hcms_lang['please-wait-for-the-approval']
- Bug fix: Function getvideoinfo in Get API did not properly extract the video rotation if the word "rotate" was part of the video file name
- Bug fix: Function getmetadata_multiobjects in Get API did not export the defined columns/content for pages and components
- Bug fix: Reset of columns sizes if the selection of columns has been changed in explorer_objectlist
- Bug fix: explorer_objectlist did set the initial columns size before initializing colResizable
- Bug fix: Function deletereport used wrong language text key for the success message
- Bug fix: Removed deprecated JS function escape from component_edit_page_multi, component_edit_page_single, media_edit_page, and link_edit_page due to issues

Version 9.0.1
Release 07/2020
- Modifications in control_content_menu and control_objectlist_menu in order to optimize the download feature
- Modifications in function createmultidownloadlink in Main API in order to remove media and folder location as optional input parameters
- Minor modifications in service mediadownload and mediawrapper
- Modifications in function getmetadata_multiobjects in order to remove container, media, deleteuser, and deletedate from the result
- Modifications in the home box up_and_download in order to apply showdate for the correct date format based on the language setting of the user
- Modifications in page_info_stats in order to apply showdate for the correct date format based on the language setting of the user
- Design modifications in the header of all list views
- Modifications in function unzipfile in Main API in order to replace for-next by foreach loop
- Modifications in service savecontent in order to replace for-next by foreach loop
- Modifications in function uploadfile in Main API in order to replace for-next by foreach loop
- Modifications in function manipulateallobjects in Main API in order to replace for-next by foreach loop
- Modifications in function setarticle in Set API in order to replace for-next by foreach loop
- Modifications in function settext in Set API in order to replace for-next by foreach loop
- Modifications in function setmedia in Set API in order to replace for-next by foreach loop
- Modifications in function setpagelink in Set API in order to replace for-next by foreach loop
- Modifications in function setcomplink in Set API in order to replace for-next by foreach loop
- Implementation of the new search function for the user administration
- Modifications in function createmedia in Media API in order to set media size in database based on the created thumbnail in case no media size could be extracted from the source media file
- Modifications in function manipulateallobjects in Main API in order to return a message if the marking or restore of deleted folders or objects failed
- Design modifications in popup_status and popup_notify
- Modifications in explorer_objectlist and search_objectlist for the new design of the large thumbnail view
- Modifications in main configuration in order to set the thumbnail size frame to 260 x 220 pixels
- Modifications in explorer, explorer_objectlist, and search_objectlist in order to remove _gsdata_ directory created by Cyberduck sync (using function deletefolder)
- Modifications in function showcompexplorer in UI API in order to remove _gsdata_ directory created by Cyberduck sync (using function deletefolder)
- Modifications in imexport_explorer in Im/Export Connector module in order to remove _gsdata_ directory created by Cyberduck sync (using function deletefolder)
- Implementation of the new function html2pdf in Media API in order to convert HTML files to a single PDF file
- Implementation of the new function mergepdf in Media API in order to merge PDF files to a single PDF file
- Implementation of the new main configuration parameters $mgmt_config['html2pdf'] for WKHTMLTOPDF, $mgmt_config['x11'] for X11-Server, and $mgmt_config['mergepdf'] for PDFTK
- Modifications in the installation script in order to support the new main configuration parameters
- Modifications in the template engine in order to support the new pathtype attribute for components
- Implementation of new Web2Print example templates in the install directory that use the new function html2pdf
- Modifications in the existing Web2Print example templates in the install directory that use the TCPDF library
- Modifications in the function showAPIdocs in UI API in order to display only defined function names (new optional input parameter)
- Modifications in search_form_advanced in order to define the search field width
- Merged main.css and navigator.css into one CSS file holding all classes for all design themes
- Replaced navigator.css with main.css
- Implementation of the new CSS desktop.css and mobile.css in the system in order to support all design themes for the Desktop and Mobile Edition
- Design modifications in the context menu of the Workflow Management module
- Modifications in function registeruser and userlogin in Security API in order to remove the mobile design theme
- Design modifications in the Mobile Edition
- Implementation of the new JS function hcms_getBrightness in main.js
- Implementation of the new function getbrightness in Get API
- Implementation of the new function invertcolorCSS in UI API
- Modifications in the function userlogin in Security API in order to provide the invert setting for portals based on the design theme and primary color of the portal
- Modifications in the function registeruser in Security API in order to set the new parameter 'hcms_themeinvertcolors'
- Implementation of the new session variable 'hms_themeinvertcolors' in include/session.inc.php
- Modifications in all controls in order to support the invert of the colors of buttons
- Removed deprecated #default#AnchorClick behaviour from control_content_menu
- Removed the video wallpaper in the design theme preview of portal_edit
- Modifications in user_edit in order to calculate the invert setting for colors of portal design themes
- Modifications in function createmedia and createdocument in Media API in order to remove the existing thumbnail if the media conversion of the new file is not possible
- Design modifications in Project Management module
- Design modifications in Task Management module
- Modifications in function getfileinfo in order to support new file extension and icons
- Modifications in function showmedia in UI API for the preview of plain text files
- Modifications in function hcms_loadSidebar in contextmenu.js in order to verify if sidebar is visible
- Modifications in explorer_objectlist and search_objectlist for the sidebar
- Modifications in explorer_preview and page_info in order to display the links to objects and apply the permissions
- Modifications in explorer_preview in order to shorten long text strings
- Implementation of statistics in explorer_preview (sidebar preview)
- Modifications in function getmetadata in Get API in order to add a comment to the key value if labels will be returned as result array keys (labels are not unique)
- Modifications in function showobject in UI API
- Design modifications in Workflow Management module
- Modifications in Workflow Management module in order to display the task title in the workflow items
- Modifications in JS function hcms_loadSidebar in contextmenu.js in order to delay the request due to browser issues (MS Edge, Chrome)
- Modifications in JS function hcms_openWindow in main.js in order to delay the request
- Design modifications in page_info_stats
- Implementation of the loading screen in control_objectlist_menu for various actions (rename object and folder, compress assets)
- Modifications in function createmedia in Media API in order to exclude conversion of MP3 files to reduced preview MP3 files
- Modifications in frameset_template_edit in order to reload the template versions on click of the versions tab
- Update of the installation guide
- Bug fix: control_content_menu did not provide the folder name in the location for function createmultidownloadlink
- Bug fix: Implementation of a new condition in popup_action for action "publish" since the output will interfere with session_start used in the template engine
- Bug fix: Implementation of a new condition in popup_status for action "publish" since the output will interfere with session_start used in the template engine
- Bug fix: Function sendresetpassword did not reset password if the user was not at leastassigned to one publication
- Bug fix: user_edit did not execute function gethomeboxes if no publications have been assigned to the user
- Bug fix: user_objectlist did not move to next set of user account during paging (replaced for-next by foreach loop)
- Bug fix: Function rdbms_setdeletedobjects in DB Connect did not log an error if a folder or object can't be restored since a folder or object with the same name exists already
- Bug fix: component_edit_page_single and the template engine did disable the text field for single components instead of applying readonly (this is only a display error)
- Bug fix: home box all_reports did not switch the OK button image
- Bug fix: The display of the sidebar is based on its width and not the style display which caused the content to load even if the sidebar is hidden
- Bug fix: control_template_menu did exclude the template default.meta.tpl from the selector

Version 9.0.2
Release 08/2020
- Design modifications in all_reports and news home screen boxes
- Modifications in function showmedia in UI API in order to remove border from plain/clear text editor
- Design modifications in the workflow script editor
- Design modifications in the template editor
- Design modifications in the personalization editor
- Design modifications in media_preview and media_edit_page
- Implementation of the four new Brand Guideline templates in xmlschema
- Implementation of the new CSS for the brand guideline templates in theme/brandguide.css 
- Implementation of the new JS function hcms_Hex2Rgb in main.js
- Implementation of the new JS function hcms_Rgb2Cmyk in main.js
- Implementation of the new function rgb2cmyk in Media API
- Modifications in function rgb2hex in Media API in order to support RGB values as input array
- Modifications in function showcompexplorer in UI API in order to enable components for DAM configuration
- Modifications in function createwrapperlink in Main API in order to verify object hash does exist
- Modifications in template engine and template_help in order to support the location pathtype for component hcms_stripTags
- Modifications in template engine in order to add CSS styles to the edit buttons of components
- Modifications in template engine in order use system CSS if no CSS has been defined in the compsylesheet tag 
- Modifications in template_homebox schema in order to support a single component link as alternative link to a single component or asset for home boxes
- Modifications in function gettemplate in Get API in order to support the new brand guideline templates
- Modifications in function loadtemplate in Main API in order to support the new brand guideline templates
- Modifications in media_select of the rich text editor in order to return a wrapperlink instead of a direct link for DAM configurations
- Modifications in page_preview in order to enable the control-reload in the buildview function call
- Modifications in xmlschema template_homebox in order to remove HTML, HEAD and BODY tags from the component template
- Modifications in function followlink in template engine in order to verify if $publ_config['url_publ_page'] includes the :// marker
- Implementation of the new service mediadownload and mediawrapper in order to support PDF printing of HTML files
- Implementation of the new JS function hcms_createTOC in main.js in order to create a table of content based on the HTML headlines
- Modifications in the template engine in order to replace lockonload by adding the system onload events to the ones defined in the template
- Modifications in site_edit_form in order to include MS AD settings (Connector module required)
- Modifications in function editpublication in Main API in order to support the new MS AD settings (Connector module required)
- Modifications in function authconnect in ad_connect and ldap_connect of the Connector module in order to support publication specific AD settings
- Modifications in function userlogin in Security API in order to support publication specific AD settings
- Implementation of the new main configuration setting $mgmt_config['authconnect_all']
- Modifications in explorer_preview in order to verify if the object is in the recycle bin (marked as deleted) and to verify the local permissions array for the links
- Modifications in Import/Export module in order to verify if there is a buffer for output using PHP function ob_get_length()
- Implementation of the new JS function setlogospacer in the home screen
- Implementation of the new function is_hiddenfile in Main API
- Modifications in explorer_objectlist, link_edit_explorer, and editor/link_explorer in order to exclude the files .htaccess and web.config from the listing
- Modifications in JS function detectFaceOnVideo, detectFaceOnImage, and initFaceOnVideo in the template engine in order to position the face markers correctly if not displayed in its original size
- Modifications in JS function createFaceOnVideo and createFaceOnImage in the template engine in order to use unscaled values due to the displayed media size is used when markers are placed by mouse click or touch
- Implementation of new video thumbnail gallery for videos with focal point support based on markers/faces in videos
- Modifications in function showvideoplayer in UI API in order to support the new video thumbnail galleries with jump-to-playbacktime feature
- Modifications in service savecontent in order to create and save the video thumbnail gallery and set the focal point for each image in the gallery based on the marker/face definitions 
- Modifications in function createthumbnail_video in Media API in order to support individual width and height of the created image and individual file name for the created image as input
- Modifications in function createthumbnail_video and createimages_video in order to support negative integer values for width and height in order to keep the aspect ratio
- Modifications in service mediastream in order to support all media files including media files without a container identifier in their file name
- Modifications in CSS class hcmsLoadScreen in main.css of all design themes
- Modifications in videoplayer in order to use the night design theme
- Modifications in JS function collectFaces in template engine in order to implement JSON.stringify for face names (escape double quotes)
- Videoplayer PROJEKKTOR is deprecated but will be kept in order to support installations using PROJEKKTOR
- Modifications in media_rendering in order to set media player dimension based on the viewportwidth and main config setting $mgmt_config['preview_video_width']
- Design modifications in media_rendering, page_multiedit, and image_rendering
- Modifications in the menu options for audio/video and image rendering settings in media_rendering, page_multiedit, and image_rendering
- Implementation of the responsive design for the menu options for audio/video and image rendering settings in media_rendering, page_multiedit, and image_rendering
- Modifications in service rendervideo in order to separate the thumbnail image creation from the video rendering
- Replaced the individual load screen with the default load screen in media_rendering
- Removed "-f image2" option from FFMPEG command in function createthumbnail_video in Media API
- Modifications in function showmedia in UI API in order to insert hidden duration input after the end of the video information table
- Modifications in function showmedia in UI API in order to remove &nbsp; in video information values
- Modifications in version_content and version_template in order to disable the delete feature if the user has no delete permission for the object or template
- Modifications in hypercms index in order to forward to install routine if the main configuration file is missing
- Modifications in DB Connect constructor in order to set sql_mode to TRADITIONAL
- Modifications in DB Connect in order to apply function intval for all container_id and object_id attributes
- Modifications in the verification of integer values in various functions of DB Connect
- Changes in language files
- Bug fix: The search frame did not switch to the navigation tree if the search frame has been opened by search icon in the right side of the taskbar
- Bug fix: Sort of table rows did not work in log_list due to the missing data-attribute in all links. Modifications in JS function hcms_sortTable in main.js in order to verify the link result.
- Bug fix: The status bar tried to close a non-existing contextmenu on mouse over in log_list
- Bug fix: Function showvideoplayer in UI API used view link for video thumbnails that will only be resolved when a valid user session exists
- Bug fix: JS function collectFaces in template engine could not handle double quotes in face names
- Bug fix: The display of the VTT records in function showmedia caused a line break in a single record
- Bug fix: The margin for the VTT editor has not properly applied to the language select box
- Bug fix: page_multiedit did not verify if the selected media files are of mixed file-types (image, audio, video) in order to lock the rendering options for mixed file-types
- Bug fix: Rich text editor media_select did not provide the mediafile and medialink values in case of a selected video file and caused a JS error
- Bug fix: Rich text editor video plugin.js did not set the controls parameter in the video URL and did not provide the controls input parameter in the generate_videoplayer_iframe function call
- Bug fix: version_template did not verify the token before deleting the selected template versions
- Bug fix: Function xmp_writefile in Meta API did not verify if the executable exists
- Bug fix: Function iptc_writefile in Meta API did not verify if the executable exists
- Bug fix: Function extractmetadata in Meta API did not verify if the executable exists
- Bug fix: DB Connect used the same error code 50039 multiple times

Version 9.0.3
Release 09/2020
- Modifications in table textnodes in createtables.sql in order to set text_id length to 255 digits
- Implementation of the new function update_database_v903 in the Update API
- Modifications in function updates_all in the Update API in order to execute function update_database_v903
- Modifications in function showvideoplayer in UI API in order to apply a line break for the thumbnail text
- Modifications in function showvideoplayer in UI API in order to sort the thumbnails by time in seconds (numeric sort)
- Design modifications in the video thumbnail frame/border of the videoplayer preview images
- Modifications in video plugin of the rich text editor in order to enable the controls for the video ('true' as default value)
- Modifications in explorer_objectview, media_rendering, and version_content_compare in order to disable the fullscreen view of the video player 
- Modifications in rich text editor editorf and media_select in order to disable the fullscreen view of the video player 
- Removed Projekktor JS code and keyboard controls checkbox from video player plugin of the rich text editor
- Removed Projekktor video player code from function showvideoplayer_head in UI API
- Removed Projekktor video player code from function showvideoplayer in UI API
- Removed Projekktor video player code from function showmedia in UI API
- Removed Projekktor video player code from JS function getplayertime in media_rendering
- Removed Projekktor video player code from JS function updateCodeSegment and video player options in media_playerconfig
- Removed Projekktor video player JS library
- Modifications in main configuration file in the install directory in order to remove the deprecated alternative video player setting $mgmt_config['videoplayer']
- Modifications in service savecontent in order to remove face images of the face/object markers if they have been removed
- Modifications in template engine in order to redefine the padding for comments
- Modifications in image_minipaint in order to request the original image file to be converted to JPG in case the file type is not supported by the browser
- Modifications in service mediawrapper in order to support file type requests without additional conversion options
- Modifications in function createmedia in Media API in order to support the watermark values "none", "no", "0", or false to suppress the watermarking
- Bug fix: videoplayer did not set the fullscreen parameter for function call showvideoplayer_head
- Bug fix: Service savecontent removed face/object markers in the Mobile Edition (main configuration settings $mgmt_config['facedetection'] has not been verified)
- Bug fix: Service savecontent did not remove the old face images of the face/object markers if they have been updated
- Bug fix: Service savecontent did not provide face image names if the face definitions already existed (face images have been removed on save).
- Bug fix: Image editor Minipaint did not load the converted image in case an image format has been used that is not supported by the browser

Version 9.0.4
Release 10/2020
- Update of JQuery to version 3.5.1 and modifications in all system components using JQuery version 1.12.4 and 3.3.1 (dropped support for IE 6 and 7)
- Modifications in rich text editor editoru and editorf
- Modifications in jquery.jstree.js in order to replace the JQuery function size by property length
- Modifications in image_rendering in order to implement JQuery migrate 3.3.0
- Modifications in media_rendering in order to implement JQuery migrate 3.3.0
- Modifications in page_multiedit in order to implement JQuery migrate 3.3.0
- Modifications in explorer_imageview in order to implement JQuery migrate 3.3.0
- Modifications in the attitude example page templates in the install directory
- Modifications in the function showinlineeditor_head in the UI API
- Modifications in the template engine in order to insert the JS and JQuery libraries before the template (important for the support of older JQuery libaries that are used in page templates)
- Modifications in all asset presentation templates in the install directory for the update to JQuery version 3.5.1. Older browser versions (Internet Explorer 6 and 7) are not supported anymore by the templates for the asset presentation (code snippets for the integration in web pages) due to migration to JQuery version 3.5.1
- Modifications in the component template GalleriaSearch in the install directory in order to create and update a view file for the presentation that can be generally accessed (new view link in code snippet)
- Modifications in JS function hcms_updateControlObjectListMenu in contextmenu.js in order to include JS function call hcms_loadSidebar
- Modifications in JS function hcms_loadSidebar in contextmenu.js in order to replace submit to iframe by iframe source (due to issues with 2 form submits at once in Safari)
- Modifications in explorer_objectlist and search_objectlist in order to remove JS function call hcms_loadSidebar
- Modifications in JS function hcms_showHideLayers, hcms_displayLayers, hcms_switchSelector, and hcms_hideSelector in main.js in order to disable opacity CSS settings if hcms_transitioneffect is false
- Modifications in function downloadobject in Main API in order to use unique file name instead of prefix
- Modifications in main.js and contextmenu.js in order to read is_mobile from the localStorage
- Modifications in setting hcms_transitioneffect in main.js (default value is false)
- Modifications in function downloadobject in Main API in order to create/copy the object code only if the object has been updated (object code will be kept in data/temp/view)
- Renamed JS function setWindows to setGlobals in frameset_main and frameset_mobile
- Modifications in frameset_main and frameset_mobile in order to implement the localStorage for is_mobile in JS function setGlobals
- Modifications in explorer_objectlist, search_objectlist, message_objectlist, queue_objectlist, and user_objectlist in order to remove the setting of the value for the JS global variable is_mobile
- Modifications in explorer_objectlist, search_objectlist, message_objectlist, queue_objectlist, and user_objectlist in order to remove the setting of the value for the JS global variables selectarea, contextenable, contextxmove, and contextymove
- Modifications in control_user_menu in order to allow the special characters , and ; in passwords
- Modifications in createtables.sql in DB Connect in order to set length of all user name attributes to 100 (previous value was 60, modifications in the database need to be performed manually)
- Modifications in createtables.sql in DB Connect in order to set length of the template name attribute to 100 (previous value was 60, modifications in the database need to be performed manually)
- Modifications in createtables.sql in DB Connect in order to set startdate attribute of table task to allow NULL value (Modifications in the database need to be performed manually)
- Modifications in function createtask in Task Management API in order to modify the date format
- Modifications in function rdbms_createtask in DB Connect in order to set the default empty date to 0000-00-00 instead of an empty string
- Modifications in public function __construct in DB Connect in order to change sql_mode from TRADITIONAL to STRICT_TRANS_TABLES, STRICT_ALL_TABLES, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION
- Modifications in function downloadfile in Main API in order to write and close the session before the file download and restart the session after the file download for non-blocking download
- Modifications in function rdbms_setdeletedobjects in DB Connect in order to support non-blocking operation for folders/collections
- Modifications in Task Management list in order to migrate from JS function hcms_showHideLayers (visibility style) to function hcms_displayLayers (display style)
- Modifications in frameset_template_edit in order to migrate from JS function hcms_showHideLayers (visibility style) to function hcms_displayLayers (display style)
- Modifications in frameset_site_edit in order to migrate from JS function hcms_showHideLayers (visibility style) to function hcms_displayLayers (display style)
- Design modifications in the Task Management module
- Design modifications in the Project Management module
- Removed swfobject.js and mediaplayer.swf from javascript
- Modifications in explorer in order to use the version number for loading main.js and contextmenu.js (browser chache based on version of the JS files)
- Modifications in frameset_main and frameset_mobile in order to use the version number for loading main.css and desktop.js or mobile.css (browser chache based on version of the CSS files)
- Providing all JS files as minified JS libraries in hypercms/javascript
- Modifications in all system components in order to use the minified version of the JS libraries
- Update of PDF.JS library to version 2.5.207
- Modifications in videoplayer in order to use the MP4 format for function call createmedia
- Modifications in videoplayer in order to add the original video file as source if it is of MP4, WebM or OGG/OGV video format and the display width is more than 854 pixels
- Modifications in media_playerconfig in order to use the orginal MP4 video file if a preview video is only available
- Modifications in function createmedia in Media API in order to verify that the width and height for scaling are not zero
- Modifications in function showmedia in UI API in order to use orgional video file if it is of MP4, WebM or OGG/OGV video format and the display width is more than 854 pixels
- Modifications in pop_action and popup_status in order to suppress possible error messages due to header sent
- Modifications in function getwallpaper in Get API in order to apply the wallpaper defined in the main configuration as the 1st option and the theme wallpaper as the 2nd option
- Modifications in userregister in order to apply function getwallpaper and remove the old wallpaper code
- Updates in the Template Designers Guide and Installation Guide
- Bug fix: Safari is not able to submit 2 forms at once (issues with control and sidebar update)
- Bug fix: Safari did not display selectors due to an issue with the opacity CSS setting in main.js
- Bug fix: An empty string for the start- or enddate has caused an error in function rdbms_createtask in DB Connect due to the database mode
- Bug fix: The Task Management list did not hide all elements inside a tab
- Bug fix: The Task Management list did not initialize the variable for the objects thumbnail
- Bug fix: Function showthumbnail in UI API did not use the provided thumbnail size for the calculation of the width or height of the thumbnail
- Bug fix: The Workflow Management module loaded the desktop or mobile stylesheet two times
- Bug fix: Function showtaxonomytree in UI API did not verify the first search result item
- Bug fix: Function showmedia in UI API did not assign a z-index higher than 9900 to the 360 video player overlay and layers from the standard video player could still be seen

Version 9.0.5
Release 11/2020
- All preview images used in the graphical user interface of the system will not be watermarked (if a watermark has been defined in the publication of for the asset). Only downloaded views of the original image will be automatically watermarked.
- The preview video used in the graphical user interface of the system will not be watermarked (if a watermark has been defined in the publication of for the asset). Only created videos of the original video will be automatically watermarked. 
- Modifications in function createmedia in Media API in order to auto rotate the image based on the EXIF orientation (support of ImageMagick and PHP GD library)
- Modifications in function getmediasize in Get API in order to auto rotate image width and height based on the EXIF orientation
- Modifications in function showmedia in UI API in order to replace function getimagesize with function getmediasize (function getimagesize should only be used for thumbnail images)
- Modifications in explorer_imageview, image_rendering, media_edit_page, media_view, page_multiedit, editor/media_select in order to replace function getimagesize with function getmediasize
- Modifications in function createmediaobject and uploadfile in Main API in order to replace function getimagesize with function getmediasize
- Modifications in function convertimage in Media API in order to replace function getimagesize with function getmediasize
- Modifications in service renderimage in order to replace function getimagesize with function getmediasize
- Modifications in function copymetadata in Meta API in order to suppress copy of the orientation, width and height tag since the orientation, width and height has been corrected by function createmedia
- Modifications in function copymetadata in Meta API in order to set the EXIF width and height based on the actual dimensions of the target image file
- Downgrade of PDF.js JavaScript library from version 2.5.207 to version 2.2.228 due to issues with document previews by users using old browser versions
- Modifications in function showmedia in UI API in order to assign an new sub file extension "preview" instead of "view" for preview images that can be used to identify them by function createmedia
- Modifications in function createmedia in Media API in order to suppress watermarking for annotation images and preview images requested by function showmedia
- Modifications in function createmedia in Media API in order to set new dimension (260x260 px) for the thumbnail of audio files based on their album art image
- Modifications in function createmedia in Media API in order to support a new input parameter to suppress the rdbms_setmedia function call (save media information)
- Modifications in function convertimage in Media API in order to support a new input parameter to suppress watermarking
- Modifications in function showmedia in UI API in order to remove existing video renderings
- Design modifications in function showmedia in UI API for the presentation of the video information table
- Implementation of the new service deletemedia in order to remove a selected media file version that is based on the original media file (audio or video)
- Modifications in function GCanalyzeimage in Cloud API in createmedia function call
- Modifications in function editmediaobject in Main API in createmedia function call
- Modifications in OpenSearch module in createmedia function call
- Modifications in function splitmedia in Media API in createmedia function call
- Modifications in function convertmedia in Media API in createmedia function call
- Modifications in function convertimage in Media API in createmedia function call
- Modifications in function createdocument in Media API in createmedia function call
- Modifications in the template engine in createmedia function call
- Modifications in function showmedia in UI API in createmedia function call
- Modifications in service renderimage and rendervideo in createmedia function call
- Modifications in videplayer in createmedia function call
- Modifications in explorer_objectlist and search_objectlist in createmedia function call
- Modifications in function id3_writefile, xmp_writefile, and iptc_writefile in Meta API in order to remove rdbms_setmedia function call
- Modifications in service and function savecontent in order to remove MD5 hash from rdms_setmedia function call (since the search for duplicates is based on the MD5 hash)
- Modifications in page_info in order to calculate the MD5 hash of the actual file (since the search for duplicates is based on the MD5 hash and the saved MD5 hash is not necessarily the actual MD5 hash)
- Design modifications in image_rendering and media_rendering
- Modifications in template engine in order to initialize and empty the variable $searchtag_array
- Implementation of the new hyperCMS help tag in the template engine that can be used for the presentation of information in the form view
- Implementation of the new hyperCMS help tag and icon in the template editor
- Modifications in the template engine in order to strip tags only for the template view of metadata templates (important for the help tag if the value includes HTML tags)
- Modifications in CSS class hcmsFace in main.css of all design themes in order to reduce the z-index to 9
- Design modifications in media_playerconfig
- Design modifications in document_viewerconfig
- Implementation of the video link in media_playerconfig
- Implementation of the design theme support for the video link in media_playerconfig
- Implementation of auto-resizing (width and height) for large screen videos in media_playerconfig
- Implementation of the design theme support for the video link in videoplayer (new input parameter theme, display of the theme wallpaper, logo and video title)
- Implementation of an in-iframe check in videoplayer in order to automatically use the design theme and center the video if no iframe is used for the video integration
- Implementation of the load screen in videoplayer
- Modifications in function checkdiskkey in Security API
- Modifications in explorer in order to remove diskkey
- Modifications in group_edit_form in order to remove diskkey
- Removed deprecated variable disksite from diskkey file
- Updates in the Template Designers and Installation Guide
- Updates in all language files
- Modifications in function AZUREconnect and S3connect in Cloud APIs in order to support publication specific connection. For AWS S3 and MS Azure the publication specific definitions need to be made in the main configuration, these settings are not officially supported. The AWS S3 container or MS Azure blob names in the main configuration do not support publication specific settings.
- Modifications in function is_cloudstorage and is_cloudobject in Main API in order to extract the publication name from the file input and exclude the main configuration cloud settings since they will be verified by the cloud API functions
- Modifications in all Cloud API functions in order to remove verification of main configuration cloud settings
- Implementation of the new Cloud API main configuration settings $mgmt_config['aws_api'], $mgmt_config['gs_api'], and $mgmt_config['azure_api'] in order to enable and disable the Cloud APIs of the vendors (AWS, Google, MS Azure)
- Modifications in function S3connect in AWS S3 Cloud API in order to catch errors using S3Exception
- Modifications in Google Cloud API functions GCanalyzevideo, GCanalyzeiage, and GCspeech2text in order to remove verification of the main configuration settings, only publication settings will be used
- Removed deprecated main configuration settings $mgmt_config['gs_analyze_image'], $mgmt_config['gs_analyze_video'], and $mgmt_config['gs_speech2text']
- Modifications in function createmedia in Media API in order to create annotation images in JPEG format of highest quality 
- Modifications in function showmedia in UI API in order to create annotation images in JPEG format of highest quality 
- Modifications in annotation JS library in order to "flatten" the vector image using JPEG format of highest quality
- Implementation of the new function deleteannotationimages in Main API in order to delete all annotation images of a media file
- Modifications in function deletemediafiles in Main API in order to call function deleteannotationimages
- Modifications in explorer in order to change error code 10178 to warning code 00178 if a directory has been deleted and the explorer can't access it anymore
- Modifications in template editor in order to assign a different window name for the help window
- Bug fix: Function createmedia in Media API did save file size of the created PDF preview document
- Bug fix: Variable $file_content has not been initialized for MS Power Point (PPTX) files in function indexcontent in Media API
- Bug fix: Since the MD5 hash has been updated whenever new metadata has been saved in the original media file, the search for duplicates was not able to identify the file due to the changed MD5 hash of the file
- Bug fix: JS function createFaceOnImage in template engine did refer to an undefined width and height variable of the marker
- Bug fix: Changed to z-index of the video overlay for the marker images to 10 due to an overlay issue with the help layer in the video editor
- Bug fix: The video title has not been encoded for the embed code in media_playerconfig
- Bug fix: Modifications in function showmedia in UI API in order to use the correct original video width and height for the file parameter in the source code and remove the check of minimum values since this might lead to a fallback to default video dimensions
- Bug fix: control_queue_menu used input parameter for inherit_db_read function call
- Bug fix: Function metadata_exists in Meta API did verify the text array which lead to a wrong result since the text array can be empty

Version 9.0.6
Release 12/2020
- Updates in the Administrators Guide, Connector Guide, Installation Guide, and Users Guide
- Various modifications for PHP version 7.4 (migration from while-each to foreach)
- Modifications in various functions in order to apply function correctpath
- Moved CKEditor libraries from editor to javascript/ckeditor directory
- Moved all text editors from editor to root directory
- Modifications in function showeditor in UI API in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in function showcompexplorer in UI API in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in service savecontent in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in template engine in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in function showinlineeditor in UI API in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in media_playerconfig in order to change the source locations of the editor popup windows for the media and page browser
- Modifications in function uploadfile in Main API in order to write and close the session before the file upload and restart the session after the file upload for non-blocking upload
- Implementation of the electronic signature
- Implementation of the new JSignature JQuery library for the signature
- Implementation of the new hyperCMS template tag texts for the signature in the template editor
- Implementation of the new hyperCMS template tag texts for the support of the signature
- Modifications in function showinlineditor in UI API in order to unset all styles for the editable elements
- Modifications in function showinlineditor in UI API in order to support the signature
- Modifications in template_edit_constraints in order to implement labels for the checkboxes and radio buttons
- Modifications in service savecontent in order to support signatures
- Modifications in function settext in Set API in order to support signatures
- Modification in the template_editor in order to support the news texts hyperCMS tag
- Modification in the template_help in order to present the news texts hyperCMS tag
- Removed deprecated library rest-api form Connector module
- Removed unused library saml-api from Connector module 
- Modifications in class.phpmailer in order to verify deprecated function get_magic_quotes_runtime
- Modifications in function ftp_filelist in Connect API due to array and string offset access syntax with curly braces
- Modifications in remoteclient in order to verify the POST request before calling function remoteclient
- Modifications in library getid3 due to Array and string offset access syntax with curly braces
- Update of getID3 library to version 1.9.20
- Update of easySVG library
- Update of PHPWord library to version 0.17
- Removed PHP JPEG metadata toolkit version 1.12 from library since it has never been used
- Modifications in userlogin in order to support Basic HTTP authentication
- Removed the LDAP/AD connector from data/connect. The new LDAP/AD connector is part of the Connector module. The old versions of function authconnect are still supported.
- Modifications in data/ldap_connect function authconnect in order to support the publication and user group mapping for the synchronization of the users with AD/LDAP
- Modifications in data/ldap_connect function authconnect in order disable the strong password rules if the user has been successfully authenticated or retrieved from LDAP/AD
- Implementation of the new main configuration settings $mgmt_config['ldap_user_filter'] and $mgmt_config['ldap_user_attributes'] for the LDAP/AD query
- Implementation of the new main configuration settings $mgmt_config['ldap_sync_publications_mapping'] and $mgmt_config['ldap_sync_groups_mapping'] for the publication and group membership mapping definitions
- Modifications in ldap_connect in order to support domain names in the user name (will be used for the LDAP/AD connection)
- Modifications in ldap_connect in order to support anonymous LDAP bind
- Modifications in ldap_connect in order to set *Leave* values for user data that can't be provided by the LDAP/AD server
- Implementation of the new main configuration setting $mgmt_config['ldap_delete_user'] in order to delete users which do not exist in the LDAP/AD directory
- Modifications in ldap_connect in order to support the new main configuration setting $mgmt_config['ldap_delete_user'] and delete users which do not exist in the LDAP/AD directory 
- Implementation of the new main configuration settings $mgmt_config['ldap_admin_username'] and $mgmt_config['ldap_admin_password'] for the general LDAP/AD access is SSO is used and only the user name can be provided via OAuth
- Implementation of the new main configuration settings $mgmt_config['oauth_consumer_key'], $mgmt_config['oauth_secret'], and $mgmt_config['oauth_timezone'] for OAuth 1.0 support
- Implementation of the new OAuth 1.0 remote client located in install/data/oauth_remoteclient.php and can be used on a remote IIS web server with activated Integrated Windows authentication for SSO with the system (only user name will be provided using OAuth)
- Implementation of the new function verifyoauthclient in the Connector module (SSO API)
- Modifications in API loader in order to include SSO API
- Modifications in function editpublication in Main API in order to support the new setting 'ldap_delete_user', 'ldap_user_filter', 'ldap_user_attributes', and 'ldap_sync_publications_mapping'
- Modifications in function editpublication in Main API in order to html decode all settings
- Modifications in function editpublication in Main API in order to escape double quotes for settings of type string
- Modifications in function userlogin in Security API in order to synchronize the user data using ldap_connect without locking out users that are not kept in LDAP/AD (creates a warning log entry)
- Modifications in text_edit_format and text_edit_unformat regarding the verification of the content
- Modifications in function getuserinformation in Get API in order to verify the user array after the XML query
- Modifications in the installation routine in order to set the parameters for the SMT user name and password as optional to support anonymous SMTP access
- Modifications in the installation routine in order to verify write permissions and required PHP extensions before the installation
- Design modifications in the installation routine 
- Modifications in function userlogin in Security API in order to set the inverted portal theme name for icons in 'hcms_themeinvertcolors'
- Modifications in user_edit in order to set the inverted portal theme name for icons in 'hcms_themeinvertcolors'
- Modifications in all controls in order to partly remove CSS classes from function invertcolorCSS calls and moving to the inverted icons of theme 'day' and 'night'
- Modifications in function createsession in Security API in order to verify the session by session ID and also the global session variable
- Modifications in function getthemelocation in order to refer to inverted source theme to invert image colors
- Modifications in test and logviewer plugin controls in order to partly remove CSS classes from function invertcolorCSS calls and moving to the inverted icons of theme 'day' and 'night'
- Modifications in portal_edit, frameset_main and frameset_mobile in order to partly remove CSS classes from function invertcolorCSS calls and moving to the inverted icons of theme 'day' and 'night'
- Modifications in function invertcolorCSS in order to invert colors of CSS class hcmsToolbarBlock for portal design themes
- Modifications in function getwallpaper in order to use SSL for the download of the images
- Modifications in function convert_utf8 in Main API in order to verify that the mb_detect_encoding function exists and fallback to is_utf8 function call
- Modifications in function load_csv in Main API in order to verify that the mb_detect_encoding function exists and fallback to UTF-8 character set
- Modifications in various function of the XML API in order to verify variable record_array
- Implementation of the new authconnect Connector module that is used as a fallback for the LDAP/AD connector in data/connect
- Modifications in function userlogin in Security API in order to support the new authconnect/ldap_connect in the Connector module (used as fallback LDAP/AD connect)
- Modifications in function edituser in Main API in order to support arrays as input for the parameters usergroup and usersite
- Modifications in function edituser in Main API in order to remove duplicates from input parameters usergroup and usersite
- Modifications in function inherit_db_save in Main API in order to verify input
- Modifications in function inherit_db_load and inherit_db_read in Main API in order to trim loaded data
- Modifications in site_edit_inheritance in order to verify that parent publications are not empty
- Modifications in frameset_content and frameset_objectlist in order to enable popups for FTP and DropBox windows using the sandbox attribute for the objectview element
- Modifications in most system parts in order to use function cleandomain on $mgmt_config['url_path_cms'] to convert the URL to a relative path
- Implementation of the new main configuration setting $mgmt_config['cleandomain']
- Modifications in function cleandomain in Main API in order to support the main configuration setting $mgmt_config['cleandomain']
- Modifications in function hcms_crypt in Security API and remote client in order to move from the faster crc32 to sha1 encryption with reduced string length of max 32 characters if a start and length input parameter has not been provided
- Implementation of the new main configuration setting $mgmt_config['passwordminlength']
- Modifications in function checkpassword in Security API in order to support the new main configuration parameter $mgmt_config['passwordminlength']
- Modifications in function createuser and edituser in Main API in order to support the new main configuration parameter $mgmt_config['passwordminlength']
- Modifications in function edituser in Main API in order to log additional errors
- Modifications in service mediawrapper in order to verify variables
- Modifications in function rewrite_targetURI in Main API in order to apply function cleandomain to the URI and support URI parameters
- Modifications in function showAPIdocs in UI API in order to support anchors
- Modifications in media_rendering in order to rename JS function name from setsegements to setsegments
- Modifications in frameset_mobile in order to implement a local CSS class hcmsShadow that is used for the Navigator overlay
- Modifications in function getmediasize in Get API in order to verify the results before deleting the temporary file
- Modifications in function copymetadata in Meta API in order to verify the results before deleting the temporary files
- Modifications in template engine in order to correct the initialization of the position array for text and component content
- Removed include of footer in explorer_preview and media_view
- Implementation of the new CSS class hcmsBoxShadow in all design themes
- Modifications in function sendresetpassword in Main API in order to send a password reset link instead of the temporary password
- Modifications in function sendresetpassword in Main API in order to use type instead link input parameter
- Modifications in control_user_menu in order to change sendresetpassword function call
- Modifications in userlogin in order to change sendresetpassword function calls
- Modifications in JS function closeUpload of frameset_main in order to verify that the JS function showwarning exists in the upload frame
- Modifications in userlogin and resetpassword in order to provide the old password (hash) for the password reset
- Modifications in function createmapping in Meta API in order to initialize the mapping array
- Implementation of the new function includefooter in the Main API that replaces the standard footer include in the system
- Modifications in function getuserip in Get API in order to support HTTP_CLIENT_IP
- Implementation of error reporting in message_objectlist
- Replacement of all error codes that have been used quotation marks in the log entry
- Implementation of new CSS class hcmsImageFrame in explorer_objectlist and search_objectlist in order to assign width and height values to images on change of view
- Modifications in function showshorttext in UI API in order to remove the div tag from the result if linebreak input parameter has been set
- Modifications in template engine in order to block the editing of page links if they include a question mark
- Modifications in explorer_objectlist and search_objectlist in order to apply function cleandomain on image sources
- Modifications in explorer_objectlist and search_objectlist in order to add new CSS classes and max-width style settings
- Modifications in function getmetadata_container in Get API in order to always query media dimensions in case no other media attribute has been requested
- Modifications in function createmedia in Media API in order to sue the original image dimensions of PSD files when creating the thumbnail image
- Modifications in function showcompexplorer in UI API in order to initialize the array temp_complocation
- Modifications in link_edit_explorer and text_link_explorer in order to initialize the array temp_pagelocation
- Modifications in explorer_objetclist in order to initialize and verify variables of type array
- Modifications in the task_list of the task management module in order to initialize and verify variables of type array
- Modifications in various functions in the Main API in order to initialize and verify variables of type array
- Modifications in various functions in the Get API in order to initialize and verify variables of type array
- Modifications in various functions in the UI API in order to initialize and verify variables of type array
- Modifications in various functions in the Security API in order to initialize and verify variables of type array
- Modifications in function getwallpaper in order to global variable is_mobile for the control of the wallpaper service
- Modifications in home, resetpassword, userlogin, and userregister in order to remove the condition for the getwallpaper function call
- Design modifications in popup_upload_html
- Design modifications in JS rich calendar due to issues with field width of hours and minutes in Chrome browser
- Modifications in function unpublishobject in Main PAI in order to create new error log events
- Modifications in function synccloudobjects in Cloud API in order to keep thumbnail files in the local repository
- Modifications in JS function hcms_sharelinkFacebook in main.js due to new GET parameter names of Facebook share API
- Modifications in user_edit in order to verify all queried values from the user XML nodes
- Implementation of a signature LDAP for the LDAP/AD Connector module in order to automatically create an e-mail signature for the users
- Implementation of the new main configuration setting $mgmt_config['ldap_user_signature']
- Modifications in function correctpath in Main API in order to not verify the path using function valid_locationname
- Modifications in function rdbms_searchcontent in DB Connect in order to include media table if the width or height attribute has been requested
- Modifications in function rdbms_getobject_info in DB Connect in order to add width and height attributes of the media table
- Implementation of the new function resolvepermission in the Security API in order to resolve permissions
- Modifications in various functions in the Security API in order to use the function resolvepermission
- Modifications in user_edit in order to query the standard theme for a new user
- Modifications in image_minipaint in order to force the reload of the image
- Modifications in popup_upload_html in order to check the option "keep existing file as old version" by default
- Design modifications in function showtopbar and showtopmenubar in UI API 
- Updates in all language files
- Bug fix: The template engine did not use the text checkbox editor for the article textc tag
- Bug fix: The test plugin used a wrong reference (file extension) to an icon and the filename for groupmenu.png has been corrected
- Bug fix: Function getxmlcontent used a wrong function call
- Bug fix: Popup windows for FTP and DropBox have been blocked by the browser in frameset_content
- Bug fix: Function sendresetpassword in Main API used unassigned publication for edituser function call
- Bug fix: Implementation of a search form post delay due to issues with the update of the search result in the mainframe
- Bug fix: The $multiobject_array[0] in popup_status has been overwritten if the variable page has been supplied (should not be possible if folder has been provided)
- Bug fix: control_message_menu, control_queu_menu, site_edit_inheritance, user_sendlink did not initialize some variables as an array
- Bug fix: version_template_compare did not verify the content before replacing characters
- Bug fix: Changes Null values to arrays for the initialization of several variables in the Import/Export API
- Bug fix: Function getlinkedobject in Link API did not initialize some variables as arrays
- Bug fix: Function getmetadata and getmetadata_container did not verify the text content before replacing characters
- Bug fix: Function createmediacat in Main API did not verify and initialize the array mediacat_array_work
- Bug fix: Function renamefolder and manipulateobject in Main API did not verify and initialize the array site_array
- Bug fix: Function publishobject in Main API did not initialize the array component_file_array
- Bug fix: Function transformlink in template engine did not initialize the array link_array
- Bug fix: Function showworkflowstatus in UI API did not initialize the array member_array
- Bug fix: Function workflowaccept and workflowreject in Workflow API did not initialize some variables as array
- Bug fix: Function importxmlfiles in Import/Export API did not initialize all arrays
- Bug fix: control_message_mneu tried to access undefined variable for the publication for the help link permissions
- Bug fix: Verification of the table row definition was missing in explorer_objectlist
- Bug fix: site_edit_inheritance used wrong html form element name
- Bug fix: message_objectlist could not extract user name if a dot was used in the user name
- Bug fix: Image height has not been adjusted by setting the width and height of CSS class hcmsObjectGalleryMarker
- Bug fix: Function unpublishobject in Main API did not save the event log entries
- Bug fix: The installation routine did not define the path to the temporary directory
- Bug fix: The eventsystem array has not been initialized
- Bug fix: DB Connect function rdbms_query did use a Capital letter for input parameter errCode instead of errcode
- Bug fix: The user XML file in the installation directory did not use the latest XML schema that inlcudes validdatefrom and validdateto nodes
- Bug fix: Function accessgeneral in Security API did not correct the file system path for Windows OS (correctpath function call has been missing)
- Bug fix: Function createmediacat, renamemediacat, deletemediacat, and uploadtomediacat in Main API did not verify the separator in the media categories index
- Bug fix: Function edituser in Main API used glue parameter for an implode function call as 2nd parameter
- Bug fix: Function renamemediacat in Main API did not verify if the same category name exists already

Version 9.1.0
Release 02/2021
- Update of all user guides
- Various modifications for the support of PHP version 8.0 (migration of functions that used required parameter followed by optional parameter)
- Dropped support of MS IE if face detection or recognition will be used
- Modifications in PHPMailer class.pop3.php and class.smtp.php in order to migrate while each to foreach
- Design modifications in explorer_objectlist, log_objectlist, message_objectlist, queue_objectlist, search_objectlist, and user_objectlist
- Implementation of face recognition based on tensorflow.js
- Implementation of service-users that do not exist like standard user accounts. These service users are only used for services (non-blocking face recognition service) and can be identified by their unique user name "sys:service-name:16-digit-servicehash" that is registered in the session.
- Implementation of the new JS function hcms_remoteFileExists in main.js
- Implementation of resizable (manual) face markers besides the markers provided by the face detection 
- Implementation of the new main configuration parameter $mgmt_config['facerecognition'] for the new face recognition feature
- Implementation of the new main configuration parameter $mgmt_config['facerecognition_service_url'] for the new face recognition service
- Implementation of the new main configuration parameter $mgmt_config['facerecognition_service_users'] for the new face recognition service
- Implementation of the new main configuration parameter $mgmt_config['facerecognition_service_exclude'] for the new face recognition service
- Implementation of the new function is_facerecognitionservice in Main API
- Modifications in service savecontent in order to create face images form the provided face markers and save them in the faces collection in the repository
- Modifications in template engine in order to provide the temporary preview image used for the face definitions
- Modifications in function showmedia in Media API in order to provide the used preview image for the face definitions and that should be used as a reference for the face recognition
- Modifications in function showmedia in Media API in order to accept thumbnail images only if the requested size is not higher than 150% of the thumbnail size (the thumbnail file will not be accepted as a reference for the face recognition)
- Implementation of the new local JS function initializeSignature in the template engine
- Changed the thumbnail size frame to 280x220px in the main configuration
- Implementation of the new JS library for face recognition
- Modifications in frameset_main in order to load the face recognition JS API (not supported by Mobile Edition)
- Implementation of the new service getfacedefintions in order provide face labels, images and descriptions from the faces collection used for the face recognition
- Implementation of the new service setfacedefintion in order to save face descriptors created from the source face images
- Implementation of the new JS function hcms_syncajaxService in main.js for the support of synchronous AJAX request
- Implementation of the new JS functions createFaceMarkerOnImage and createFaceMarkerOnVideo in the template engine
- Modifications in various JS functions in the template engine in order to support face recognition
- Modifications in JS functions hcms_ajaxService and hcms_syncajaxService in main.js in order to support the override of the mime-type
- Modifications in createtables.sql in DB Connect in order to add the new column analyzed to the media table
- Modifications in function rdbms_setmedia in DB Connect in order to support the new analyzed parameter used for face recognition
- Implementation of the new function rdbms_resetanalyzed in DB Connect in order to reset the analyzed attribute if a new face label has been defined
- Implementation of the new function update_database_v910 in DB Connect in order to add the new analyzed attribute to table media 
- Implementation of the new service recognizefaces
- Modifications in function buildview in template engine in order to support the new input parameter and service recognizefaces
- Modifications in function showmedia in order to support the new input parameter and service recognizefaces
- Modifications in frameset_main in order to support the service recognizefaces
- Design modifications in frameset_main in order to apply CSS class hcmsWorkplaceObjectlist to the body element
- Implementation of face recognition for videos
- Modifications in JS function detectFaceOnVideo in the template engine in order to support face recognition for videos
- Modifications in JS function createFaceMarkerOnVideo in the template engine in order to support face recognition for videos
- Modifications in JS function captureImageFromVideo in the template engine in order to support face recognition for videos
- Implementation of the new JS function recognizeFacesOnVideoService in order to recognize faces on videos (used as a service)
- Modifications in function createfilename in Main API in order to exclude multimedia file names from the correction 
- Modifications in function hcms_encrypt and hcms_decrypt in Security API in order to use OpenSSL AES 128bit encryption as the Standard method with fallback to Mcrypt
- Modifications in function createobject in Main API in order to unlock contentcount.dat after the time limit of function loadlockfile
- Modifications in function getbrowserinfo in Get API in order to set "msedge" as browser name for MS Edge
- Modifications in home box server_load, frameset_main, function showmedia in UI API and function buildview in the template engine in order to disable face recognition if MS IE is used as browser
- Modifications in annotate.js in order to verify the JS face detection and recognition functions since they will not be available for MS IE
- Modifications in annotate.js and function buildview in template engine in order to resize the face markers if the zoom of the annotation image has been changed
- Implementation of the new JS function resizeFaces in template engine in order to resize face and object markers according to the zoom level
- Implementation of the new JS function hcms_arrayRemoveValue in main.js
- Modifications in template engine in order to save face positions as float values instead of integer values due to rerquired precission for the scaling of face markers 
- Modifications in function rdbms_setpublicationtaxonomy in order to verify publication names for the query
- Implementation of the new function showhelpbutton in UI API
- Modifications in all controls (toolbars with help button) in order to implement the new function showhelpbutton
- Design modifications in all design themes in order to provide styles for a custom scrollbar
- Modifications in function buildview in template engine and function showinlineeditor in UI API in order to use day design theme (dark icon) for the signature delete button
- Modifications in function deletemediafiles in Main API in order to delete the target media file of a symbolic link
- Implementation of the new face recognition management plugin in order to manage the labelled faces used for face recognition
- Implementation of the new function registerservice in Security API in order to register a service for a user
- Implementation of the new function registerserviceuser in Security API in order to register a system service user in a new service session
- Modifications in function registerinstance in Security API in order to return the result of function setsession
- Modifications in function buildview in template engine in order to provide information for service savecontent required by the face recognition service
- Modifications in function userlogin in security API in order to replace parts of the code for hidden folders by function splitstring
- Modifications in userlogout in order to remove the users session file
- Modifications in function killsession in Security API in order to remove session files of the user
- Modifications in service savecontent and function showmedia in UI API in order to set the localpermission for the facerecognition service users
- Modifications in include/session.inc.php in order to add the new services session parameter
- Modifications in service savecontent in order to exclude content if the face recognition service provided the content
- Design modifications in Plugins
- Added support for MOV video conversion to the main configuration file in the install directory
- Modifications in function showmedia in UI API in order to reduce the video player height for portrait videos with a height greater than 720 pixels
- Implementation of the new function createCORSheader in Main API in order to support CORS for cross-domain services
- Modifications in function setlocalpermission in Security API in order to set required permissions for the recognizefaces service user
- Modifications in function showaudioplayer, showvideoplayer, showaudioplayer_head, and showvideoplayer_head in UI API in order to support the cleandomain input parameter for removing the domain names in video sources and poster
- Modifications in explorer_objectview, explorer_preview, media_playerconfig, version_contentcompare, text_edit_format, text_media_select, and videoplayer
- Modifications in function buildview in the template engine in order to allow a position tolerance of 6 pixels (+/-3px) for the comparison of existing faces in images and videos
- Removed old face detection feature from all system components 
- Modifications in function createtaxonomy in Meta API in order to allow any brackets in the keyword and to escape commas that will otherwise be considered as separator for keywords by the keyword text editor
- Modifications in function showtaxonomytree in UI API in order to escape commas that will otherwise be considered as separator for keywords by the keyword text editor
- Modifications in service getkeywords in order to escape commas that will otherwise be considered as separator for keywords by the keyword text editor
- Modifications in service savecontent in order to read the main input parameters before characterset conversion
- Modifications in function createsession in Security API in order to support the session name input parameter
- Modifications in home boxes, controls, and list views in order to apply new popup window height of 220px instead of 180px and set attributes due to Chrome and MS Edge display issues
- Modifications in contextmenu.js in order to apply new popup window height of 220px instead of 180px and set attributes due to Chrome and MS Edge display issues
- Modifications in JS function hcms_translateText in main.js in order to return text if it the same as the source text
- Design modifications in site_edit_form
- Design modifications in function showmessage in UI API
- Modifications in function getrequest in Get API in order to set default value for "array" to array and not an empty string
- Modifications in explorer_preview in order to hide base64 encoded images
- Modifications in function showmetadata in UI API in order to display base64 encoded signature images
- Bug fix: message_objectlist used wrong column index that lead to a misbehavior when changing the columns width
- Bug fix: Service savecontent changed the character set of multimedia objects based on the publication setting of the character set
- Bug fix: JS function detectFaceOnImage in template engine did use not use the style height of the image for calculating the ratio
- Bug fix: Function userlogin in Security API did not use $mgmt_config['passwordexpires'] for the password expiration
- Bug fix: Function userlogin in Security API did not use the function password_verify for the verification of the new password with the old passwords 
- Bug fix: Media form elements have not been displayed in the template engine
- Bug fix: Renamed tag id from annotation to facemarker in function showmedia in UI API in order to solve issues with the face marker positioning if annotations are disabled
- Bug fix: Removed click event on non existing element in control_content_menu
- Bug fix: Function createmedia in Media API did not save the new media information of a modified original media file (image or video) since the setmediainfo input parameter has been set to false
- Bug fix: Modifications in media_rendering in order to fix issues with the display of the save layer
- Bug fix: Service savecontent did not verify the media file attribute of the object before the character set definition for the XML container
- Bug fix: Chrome and MS Edge loses the session ID of the facerecognition service. Fixed by providing the session ID using the PHPSESSID parameter for all service calls
- Bug fix: Function getlistelements in Get API did not set the provided language code of a taxonomy path
- Bug fix: media_taxonomy did not verify the selectedlang_temp variable as array
- Bug fix: control_objectlist_menu did not allow the ZIP compression of folders only
- Bug fix: Function setfilter in UI API did not remove filters if no filter has been selected/defined
- Bug fix: The YouTube connector did not verify the object if the YouTube token acquire was active

Version 9.1.1
Release 03/2021
- Implementation of the new function is_annotation in Main API in order to verify the annotation feature
- Modifications in all system components that use the annotation feature
- Design modifications in the face management plugin
- Renamed function is_facerecognitionservice to is_facerecognition in Main API
- Replaced "Linus Torvald" by "Albert Einstein" face definition
- Modifications in function checkusersession in Security API in order to remove the error event number 10119
- Modifications in JS function collectFaces in template engine in order to trim face/label names
- Implementation of the new JS function resizefacename in the template engine
- Modifications in the template engine in order to reposition face names with the resizes face frame
- Modifications in JS function loadLabeledImages in face-init.js in order to verify the array length
- Code optimizations in the plugin management and implementation of a security token
- Modifications in frameset_recognizefaces in order to reduce delay from 10 to 3 seconds for loading the face definitions
- Added CSS class hcmsWorkplaceWorkflow to explorer_objectview
- Design modifications in all design themes (removed CSS class hcmsButtonBlank)
- Replaced CSS class hcmsButtonBlank by hcmsButtonTiny in various system components
- Replaced CSS class hcmsButtonBlank by hcmsButton in annotation.js
- Modifications in function rdbms_searchcontent in DB Connect in order to escape synonym expression after the transformation of wildcard characters
- Implementation of the user name picker for licensenotification_form
- Implementation of the user name picker for control_log_menu
- Implementation of the user name picker for control_user_menu
- Added cleandomain function call to the framesets of the Import/Export Connector module
- Design modifications in user_objectlist
- Modifications in template engine in order to exclude permissions for template view
- Modifications in template engine in order to verify that the media file tag is not empty before searching for the tag in the template
- Design modifications in the Report Management module
- Design modifications in function showcompexplorer in UI API
- Design modifications in group_access_explorer
- Design modifications in folder_explorer
- Design modifications in link_edit_explorer
- Design modifications in text_link_explorer
- Design modifications in media_edit_explorer
- Design modifications in media_delete
- Design modifications in function showmessage and showinfobox in UI API
- Design modifications in all controls
- Design modifications in Project Management module
- Modifications in function deletemediacat in Main API in order to remove HTML table code from the messages
- Modifications in function showsharelinks in UI API in order to set a default width
- Modifications in the Plugin Management in order to update the plugin configuration file name
- Renamed plugin configuration file name form "plugin.conf.php" to "plugin.global.php" in all system components which use the plugin configurationf
- Modifications in function createpublication in the Main API in order to allow the publication name "plugin"
- Implementation of the function update_plugin_v911 in the Update API
- Modifications in the German language file
- Implementation of the main configuration setting $mgmt_config['storage_synctime'] for the time frame in hours for synchronization with the cloud storage
- Implementation of the new function is_preview in the Main API
- Implementation of the main configuration setting $mgmt_config['keep_previews'] in order to keep or delete preview images
- Modifications in daily job in order to support the new main configuration setting $mgmt_config['keep_previews']
- Implementation of the status of analyzed images and videos in the face management plugin
- Implementation of a refresh button in the face management plugin
- Modifications in function downloadfile in Main API in order to exclude service users from the statistics
- Implementation of the new main configuration setting $mgmt_config['ldap_keep_groups'] in order to allow a mix of manually assigned group memberships and the sync with LDAP/AD
- Modifications in the LDAP/AD Connector in order to support the new main configuration setting $mgmt_config['ldap_keep_groups'] and merge the group memberships of a user
- Implementation of the publication specific group mapping in the LDAP/AD Connector
- Modifications in function edituser in Main API in order to save user data only if it has been changed (compare saved with new user data)
- Modifications in function rdbms_setpublicationtaxonomy in DB Connect in order to verify that the publication name is not empty after escaping it
- Modifications in function indexcontent in Media API in order to exclude the system and system service user as owner
- Modifications in function createobject and manipulateobject in Main API in order to exclude the system user and system service user as owner
- Modifications in face-init in order to define the new variable maxDescriptorDistance with a value of 0.51
- Modifications in template engine in order to log the distance in the console for recognized faces
- Modifications in explorer in order to require the Desktop permission in order to access any Plugin
- Modifications in face recognition, search statistics, and nativy plugins in order to require Desktop permission for the usage
- Modifications in group_edit_form in order to add Plugins title to the Desktop management permissions
- Modifications in the YouTube Connector (new YouTube API)
- Implementation of multiple YouTube account support per publication
- Modifications in the function get_youtube_client in the YouTube API
- Renamed YouTube token file name in YouTube Connector
- Renamed parameter youtube_private to youtube_visibility in the YouTube Connector
- Modifications in function showmedia in the UI API in order to remove path parameter from YouTube upload link
- Implementation of a delete function for YouTube targets
- Updates in all language files
- Update of the Administrators Guide regarding the Plugin permissions
- Update of the Connector Guide in order to add a new chapter for the configuration of OpenLDAP and Apache for the usage of LDAP/AD Connector
- Update of the Users Guide regarding the YouTube Connector
- Bug fix: Function is_facerecognitionservice in Main API did not verify the Mobile Edition (is_mobile)
- Bug fix: The face management plugin did not align the faces if face images have been provided manually and by the system
- Bug fix: Service savecontent did not trim the face names
- Bug fix: Service getfacedefinitions did not verify if a face label directory actually includes face definitions
- Bug fix: JS function collectfaces in template engine did not verify variable zoommemory
- Bug fix: Plugin management did not reload a modified plugin configuration
- Bug fix: CSS class hcmsWorkplaceObjectlist has been defined twice in some design themes
- Bug fix: frameset_instance did not use the full path to main.min.js
- Bug fix: frameset_mobile did not provide the correct height for the navigator frame
- Bug fix: page_info used the old name of the YouTube API
- Bug fix: The user filter in the LDAP/AD Connector has not been correct
- Bug fix: The array element key for the publication mapping has not been correct in the LDAP/AD Connector

Version 9.1.2
Release 04/2021
- Modifications in function editpublication in Main API in order to save Google Cloud API JSON kay file only if it is not empty
- Modifications in face management plugin in order to display face names/labels only if at least one face definition exists for the label
- Modifications in face management plugin in order to verify the delete permissions of the user for face definitions
- Modifications in the Plugin API
- Modifications in service support in order to support groups
- Minor modifications in function editgroup
- Minor modifications in group_edit_script
- Modifications in group_edit_form in order to display the full path without the publication name
- Modifications in function savelog in Main API in order to exclude system service users
- Modifications in function savelog in Main API in order to archive log file if it has reached a size of more than 100 MB
- Modifications in function accesspermission in Security API
- Implementation of the new service accessstats in order to render the access statistics for a provided location
- Modifications in the up_and_download home box in order to use the new service accessstats and avoid delays when loading the home screen
- Implementation of the new service serverload in order to render the server load statistics
- Modifications in the server_load home box in order to use the new service serverload and avoid delays when loading the home screen
- Modifications in the server_load home box in order to remove the browser verification and enable reloads for all browsers
- Modifications in explorer_objectlist and search _objectlist in order to remove specific width and height CSS classes and thumbnail ratio calculations for the thumbnail dimensions
- Implementation of new CSS classes for the thumbnail sizes in the gallery view in explorer_objectlist and search_objectlist
- Modifications in main configuration in order to set default thumbnail frame size to 380 x 220 pixels instead of 260 x 220 pixels
- Modifications in explorer_objectlist and search_objectlist in order to set the large thumbnail size to 180 pixels instead of 160 pixels
- Implementation of the new function contentcount in Main API in order to get and set the contentcount (container ID) for new objects and restore the contentcount using the database if necessary
_ Modifications in function createobject and manipulateobject in Main API in order to replace the old code with the new function contentcount
- Modifications in function loadlockfile in Main API in order to support logging
- Design modifications in the folder images of all design themes
- Updates in all language files
- Bug fix: The plugin_management did not provide the token for action "reparse"
- Bug fix: Modifications in function showthumbnail in UI API in order to set max-width and max-height if the media dimensions are not available and fix display issues of the thumbnail

Version 9.1.3
Release 05/2021
- Modifications in the main configuration comments
- Preparation of all system modules for the support of PHP8
- Modifications in import_form in the Import/Export module in order to verify if an import directory has been defined
- Modifications in import_form in the Import/Export module in order to set the form target to the parent frame
- Modifications in export_form in the Import/Export module in order to remove permissions for the export directory field
- Modifications in export_form in the Import/Export module in order to verify if an export directory has been defined
- Modifications in function createmediaobject in Main API in order to support the new input parameter deletefile (keep or delete the source file)
- Modifications in function importmediafiles and importxmlfiles in Import/Export API in order to use the new input parameter deletefile of function createmediaobject
- Modifications in the Import/Export API in order to include the import directory and start date/time
- Modifications in the Import/Export API in order to save the report using function savefile instead of savelog
- Modifications in the free_storage home box in order to refer to the external repository instead of the systems root path
- Implementation of the new function convert_unicode2utf8 in Main API in order to convert unicode characters to UTF8
- Modifications in function createmediaobjects in Main API in order to apply function convert_unicode2utf8
- Modifications in function savecontainer in Main API regarding the order of priority of saving the container (non-existing container will only be saved last)
- Implementation of the new function valid_jpeg in Media API in order to verify JPEG images
- Modifications in function createthumbnail_indesign in Media API in order to verify the create thumbnail
- Modifications in various API function of the Main, Meta and Security API in order to verify the eventsystem settings
- Modifications in explorer_objectlist, index, site_edit_inheritance in order to verify the eventsystem settings
- Modifications in uploadvideo of the YouTube Connector in order to verify the eventsystem settings
- Modifications in service savecontent in order to verify the eventsystem settings
- Modifications in various function of the WebDAV module in order to verify that the array element or variables exists 
- Modifications in function downloadfile in Main API in order to log error if media file can't be loaded with option "noheader"
- Modifications in media_taxonomy in order to verify the language code of the selected languages
- Modifications in .htaccess of the Workplace Integration module in order to add -Indexes directive
- Modifications in function getcategory in Get API in order to verify the management variables
- Modifications in function createmedia and rotateimage in Media API in order to verify the GD library functions exist 
- Modifications in function createmedia in Media API in order to include jpeg as file extension if the GD library is used
- Modifications in control_content_menu and control_objectlist_menu in order to initialize the media file extension array element
- Modifications in control_content_menu in order to display disabled lock button if the conditions are not fulfilled
- Modifications in control_content_menu in order to verify the extracted application name from the content container
- Modifications in various functions in Main API, Media API, and Meta API which use fread in order to verify the file size (zero file size for empty file)
- Modifications in function component_edit_page_multi and component_edit_page_single in order to verify variables
- Modifications in frameset_edit_component in order to support the mediatype filter attribute
- Modifications in function showcompexplorer in UI API in order to initialize the variable temp_complocation
- Modifications in function showcompexplorer in UI API in order to support the mediatype "component" as asset filter
- Modifications in function buildview of the template engine in order to pass the mediatype attribute to frameset_edit_component
- Modifications in function buildview of the template engine in order to rename JS function hcms_changeitem to hcms_selectComponents
- Modifications in function buildview of the template engine in order to remove exit before the return
- Modifications in JS function hcms_selectComponents in the template engine in order to support the mediatype parameter
- Modifications in system template "brandguidlines" and "brandguidepage" in order to use the mediatype attribute for the component tag
- Modifications in function followlink in the template engine in order to verify the path variables
- Modifications in function rgb2cmyk in Media API in order to verify that the color array elements exist
- Modifications in service savecontent in order to verify the usedby variable
- Modifications in page_view in order to verify result of function buildview and to fallback to default character set if none has been provided in the result
- Modifications in function showmedia in order to verify the mediafiles element of the video configuration file
- Modifications in function setarticle, setmedia, settext, setcomplink in Set API in order to initialize input parameters of type array
- Modifications in function getpublication in Get API in order to verify the 1st position result
- Modifications in template_edit in order to display link buttons only for non-DAM publications
- Modifications in link_edit_page in order to remove DAM permission verification to avoid killsession for DAM publications using a page link in a template
- Modifications in function showmessage in UI API in order to set min-height for the inner table and hide the scrollbar due to issues with overflow:hidden style with Chrome browser
- Modifications in function setproject of the Project Management module due to changes in the input parameter verification
- Modifications in function rdbms_settask in DB Connect in order to verify integer input values and support *Leave* as input value to leave a value unchanged
- Modifications in function settask in Task Management API in order to support *Leave* as input value
- Modifications in function rdbms_setproject in DB Connect due to changes in the input parameter verification
- Modifications in function rdbms_setproject in DB Connect in order to support *Leave* as input value to leave a value unchanged
- Modifications in function editproject in the Project Management API in order to support *Leave* as input value to leave a value unchanged
- Modifications in function rdbms_deleteproject in DB Connect due to changes in the verification of the input values 
- Modifications in function importmetadata in Meta API in order to define a default enclose character if none has been provided
- Modifications in function rdbms_getnotification in DB Connect in order to initialize the result array
- Modifications in popup_message in order to verify the message variable
- Modifications in function readnavigation in UI API in order to verify XML node results provided by function selectcontent
- Modifications in function showaudioplayer and showvideoplayer in UI API in order to convert with and height to integer values
- Modifications in function convertchars in Main API in order to verify the character sets are supported
- Adding function descriptions as comments to all functions in DB Connect 
- Modifications in article_edit, report_form, and template_edit in order to use regular expressions for the JS function replace search parameter
- Modifications in JS function hcms_stripHTML in main.js and main.min.js in order to use regular expressions for the JS function replace search parameter
- Renamed global JS variables is_gallery and lastSort to hcms_is_gallery and hcms_lastSort in main.js and main.min.js
- Modifications in media_view in order to verify the object_info variable
- Modifications in JS function translatelanguage in meida_taxonomy in order to provide an error message if the translation service is not available
- Modifications in the standard design theme
- Modifications in the CSS class download_icon of the brandguide.css
- Implementation of the new client CPU cores verification for the face recognition service (min 4 CPU cores are required in order to use the service)
- Modifications in explorer_objectlist, queue_objectlist, message_objectlist, search_objectlist, and user_objectlist in order to set a new min and max size of the context menu
- Modifications in function getmetadata_multiobjects in Get API in order to unescape objectpath and remove .folder
- Modifications in function getmetadata_multiobjects in Get API in order to support the substructure by including the content of subfolders as new input parameter
- Modifications in function getmetadata_multiobjects in Get API in order to always include media attributes since folder, page, and assets objects can be mixed in the input parameter
- Modifications in function getmetadata_multiobjects in Get API in order to remove exclude parameter definition and define each single parameter for the query
- Modifications in function rdbms_externalquery in DB Connect in order to support objectpath in different name variants
- Modifications in config.inc.php in install directory in order to comment the HDD array support
- Modifications in function getmedialocation in Get API in order to verify that the HDD array index exists
- Modifications in the home box free_storage_per_publication in order to calculate and provide the average file size
- Modifications in service sendmail in order to verify the user’s permissions for mailfile or non-mailfile 
- Design modifications in the home box free_storage_per_publication 
- Modifications in all language files
- Updates in the Template Designers Guide
- Bug fix: The import always tried to remove the source files due to function createmediaobject in Main API always moved the source file
- Bug fix: Function createmediaobjects was not able to convert unicode encoded characters in directory and file names (encoded by UNZIP)
- Bug fix: JS function openPopup has not been called correctly by service accessstats
- Bug fix: The template engine defined a wrong variable name for the signature tag verification
- Bug fix: The template engine did not verify the result of function tpl_tagbegin
- Bug fix: Function createtask of the Task Management module did return wrong result if the sendmail parameter was set to false
- Bug fix: The Task Management module did not save the project_id that a task has been assigned to and caused the saved tasks to be unassigned
- Bug fix: Function rgb2hex and rgb2cmyk in Media API did access the reassigned red variable of type integer (used to be array)
- Bug fix: The system template brandguidedownload opened img tag twice
- Bug fix: Function getmetadata_multiobjects in Get API did not provide all textnodes for all result elements
- Bug fix: Service sendmail verified the location and the user’s permissions for mailfiles. Since this verification will fail if the permissions are not valid anymore the user will be automatically logged out.

Version 9.1.4
Release 06/2021
- Implementation of the support of commands in the systems queue for the asynchronous processing of multimedia files
- Implementation of the new function exec_in_background in Media API in order to support the asynchronous execution of command in the background
- Modifications in function createmedia in Media API in order to support the new input parameter and the asynchronous execution of the rendering process
- Modifications in function createmediaobject in Main API in order to support the new input parameter for the execution of function createmedia in the background using a queue entry
- Modifications in function uploadfile in Main API in order to support the new input parameter for the execution of function createmedia in the background using a queue entry
- Modifications in the createtables.sql in order to add the new attribute cmd to table queue
- Modifications in minutely job in order to process commands from the queue
- Implementation of the new function update_database_v914 in Update API
- Added function call update_database_v914 to function updates_all
- Modifications in function createqueueentry in Main API in order to support commands as string values
- Modifications in function rdbms_createqueueentry in DB Connect in order to support the new input parameter for the command
- Modifications in function rdbms_getqueueentries in DB Connect in order to support the new result parameter for the command
- Implementation of the new function rdbms_setqueueentry in DB Connect in order to set the execution date for a queue entry (to prevent multiple execution)
- Modifications in minutely job in order to set the new execution date before execution the queue entry (to prevent multiple execution by next job call)
- Modifications in the Workplace Integration module in order to support the new input parameter for the execution of function createmedia in the background using a queue entry (in order to avoid timeouts with WebDAV clients due to the processing time of large multimedia files)
- Modifications in function processobjects in Main API in order to support the new action "execute"
- Design modifications in queue_objectlist
- Modifications in function getimageinfo in Get API in order to initialize the color values for red, green and blue
- Modifications in public function writeSessionDataToFile of the Workplace Integration module in order to exclude the user language setting since English is loaded as the default language 
- Modifications in link_edit_explorer in order to verify the lang variable
- Modifications in the Report API in order to verify the lang variable in all functions
- Modifications in the Workflow API in order to verify the lang variable in all functions
- Modifications in service mediadownload and mediawrapper in order to verify the lang variable
- Modifications in control_content_menu and control_objectlist_menu in order to change the height of the popup windows
- Modifications in contextmenu.js in order to change the height of the popup windows
- Modifications in page_multiedit in order to hide signature fields and display saving screen before data collection and hide saving screen if data has not been submitted
- Modifications in page_multiedit in order to force a reload of the new thumbnails
- Modifications in function sendresetpassword in Main API in order to rename the mail title
- Design modifications in page_multiedit for the display of the thumbnails
- Design modifications in pop_action
- Design modifications in popup_status
- Modifications in JS function toggleview in explorer_objectlist and search_objeclist in order to set and access the explorer view setting
- Modifications in explorer_objectlist and search_objeclist in order to call JS function toggleview after each sort
- Implementation of the new main configuration setting $mgmt_config['sso'] in order to enable and disable SSO
- Implementation of the new main configuration setting $mgmt_config['sso_ip_validation'] in order to enable and disable SSO IP validation for WebDAV
- Modifications in function userlogin in Security API in order to support the new main config parameter $mgmt_config['sso']
- Modifications in function userlogin in Security API in order to support IP logging for SSO
- Modifications in userlogin in order to support the new main config parameter $mgmt_config['sso']
- Modifications in userlogin in order to verify password values used for SSO
- Modifications in function sendresetpassword in Main API in order to save the time of the last password reset of a user for the multifactor authentication
- Implementation of the new function sendResetPassword in the Workplace Integration module in order to support multifactor authentication
- Implementation of the new function getUserIP in the Workplace Integration module in order to support IP validation
- Modifications in the LDAP/AD Connector module in order to use the provided username and password as first bind option
- Modifications in OpenSearch Connector module in order to verify the basic HTTP authentication parameters
- Design modifications in page_multiedit, image_rendering and page_rendering in order to set a new width and overflow for the labels
- Modifications in page_multiedit in order to verify if audio and video rendering is supported by the main configuration and provide a warning message in the options layer
- Modifications in control_content_menu and control_objectlist_menu in order to call function gefileninfo for the media file before the media settings verifications
- Modifications in service renderimage in order to verify mandatory parameters and exclude error message for JSON response
- Modifications in home box statistic_of_favorites in order to use the service accessstats
- Modifications in service accessstats in order to exlude the click event for the statistics of single objects
- Modifications in OpenSeach Connector module in order to verify the basic HTTP authentication parameters
- Design modifications in service accessstats and home box statistic_of_favorites
- Design modifications in page_info_stats
- Implementation of page/month navigation in the service accessstats
- Modifications in function notifyusers in Main API in order to add the e-mail address of the sender to the message
- Minor modifications in Import/Export module
- Modifications in Workflow API regarding the result element
- Modifications in various function in Main API in order to implement the new success variable and return it as a result element
- Renamed Programmers Guide to Developers Guide
- Updates in the Connector, Installation, Developer, and Users Guide
- Updates in the language files
- Bug fix: Function update_plugin_v911 in Update API used wrong version number for the log entry
- Bug fix: Function checkpassword in Security API did initialize the error array twice
- Bug fix: page_multiedit did not use the correct path to the text editor JS library
- Bug fix: Function hcms_sortTable used in explorer_objectlist and search_objectlist did not apply the explorer view setting if it has changed without a reload of the view.
- Bug fix: Function HTTP_Proxy in Main API did not provide the error message in the response for invalid inputs
- Bug fix: page_multiedit used wrong div end tag for the video options
- Bug fix: page_multiedit enabled image rendering if no image edition option has been used
- Bug fix: Function rdbms_getmediastat in DB Connect did not group by date if the file size has been requested for a location. This caused the result to include the total amount instead of the amount per day
- Bug fix: Function edituser in Main API did not set the success value for all successful cases

Version 9.1.5
Release 07/2021
- Implementation of the automatic software update service
- Implementation of the new function update_software in Update API in order to download and install the new software package
- Implementation of the new main configuration setting $mgmt_config['update_info'] in order to display update information on the home screen
- Implementation of the new main configuration setting $mgmt_config['update_url'] in order to support automatic software updates
- Implementation of the new update job in order to support automatic software updates
- Implementation of the new update information home box in the home screen
- Modifications in various function in Get, Main, Media, Meta API in order to return error code of the unzip result and use it as error indicator instead of errors from the output
- Modifications in various function in Main and Media API in order to include the error code in the log result for zip and unzip errors 
- Modifications in function clonefolder in Media API in order to write download statistics for each object (required for the download of multiple multimedia objects)
- Modifications in function createmultidownloadlink in Main API in order to provide activity to function zipfiles (required for the download of multiple multimedia objects)
- Modifications in control_content_menu and control_objectlist_menu in order to set wrapper-links for function createmultidownloadlink for iOS devices (download is not supported by iOS)
- Design modifications in function buildbarchart in template engine in order to define and apply a new style for the x-axis values
- Modifications in function buildbarchart in template engine in order to define a min. y-axis value of 10 instead of 100
- Modifications in function buildbarchart in template engine in order to support the new optional input parameter for the min. y-axis value
- Design modifications in service accessstats and serverload
- Modifications in chat.js in order to set the time interval to 2300 ms for checkChat and 2400 ms for checkChat instead of 1500 ms
- Modifications in chat in order to set the time interval for the check of new message to 2600 ms instead of 1000 ms
- Minor modification in all design themes in order to set the background colors of some CSS classes to important
- Modifications in the installation routine in order to display information regarding the automatic updates
- Implementation of the new function HTTP_getheader and HTTP_getbody in Main API
- Modifications in function HTTP_Post and HTTP_Get in Main API in order to support the new input parameter for the response type and use function HTTP_getheader and HTTP_getbody to extract the header and body from the response
- Modifications in function remoteclient in Main API in order to support the new parameter of function HTTP_Post
- Modifications in Import/Export module in order to support the new parameter of function HTTP_Post
- Modifications in service serverload in order to implement the navigation in the server load and memory chart
- Implementation of a loading screen in service accessstats
- Implementation of a loading screen in service serverload
- Implementation of the new main configuration setting $mgmt_config['notify_exclude_users'] in order to support the suppression of notifications for certain users
- Modifications in function notifyuser in Main API in order to support the suppression of notifications for certain users defined in $mgmt_config['notify_exclude_users']
- Modifications in function createuser in Main API in order to verify the user name regardless of upper or lower case
- Modifications in control_user_menu in order to verify the user name regardless of upper or lower case
- Modifications in function notifyusers and sendmessage in Main API in order to unify the sender in the message
- Modifications in home screen in order to use night theme for the close icon of the popup layer and the move button of the home box select layer
- Modifications in function uploadfile in Main API in order to overwrite existing multimedia files using a new input parameter
- Modifications in service uploadfile in order to support the new input parameter of function uploadfile
- Modifications in function importxmlfiles in Import/Export API in order to support the new input parameter of function uploadfile
- Modifications in function createobject in Main API in order to return a new element (object_exists) in the result array if an object exists and could therefore not be created
- Modifications in function createobject in Main API in order to read the multimedia file name from an existing object and return it in case the object exists already
- Modifications in popup_upload_html in order to support the overwrite existing files checkbox
- Modifications in function createmediaobjects in Main API in order to replace function createmediafile by uploadfile and support versioning instead of deleting existing files
- Modifications in Workplace Integration in order to support the new input parameter of function uploadfile
- Modifications in service sendmail in order to create a new password for the automatically created users
- Modifications in service sendmail in order to create a new user account for each provided e-mail address
- Modification in service sendmail in order to use the provided e-mail address for the new users instead of the user name syntax User + date and time
- Implementation of the new main configuration setting $mgmt_config['contentversions_max'] in order to define the max. number of versions to be saved
- Implementation of the new main configuration GUI settings $mgmt_config['overwrite_files'] and $mgmt_config['version_owner']
- Modifications in function createversion in Main API in order to support the new main configuration $mgmt_config['contentversions_max'] and remove older versions
- Modifications in function deleteversion in Main API in order to log the deleted version
- Modifications in version_content in order to display the owner name in a new column
- Modifications in function getuserboxes in Get API in order to return an empty result array instead of false in case of an error
- Modifications in version_template in order to log deletes versions of a template
- Modifications in version_template in order to display the owner name in a new column
- Modifications in template_source in order to verify the extracted template data
- Implementation of Ctrl+S keys support to save data in main.js
- Modifications in template_edit, pers_form, project_list, report_form, task_list, workflow_manager, workflow_script_form in order to implement the hcms_saveEvent JS function that will be trigger by Ctrl+S keys (same as save button)
- Modifications in article_edit, component_edit_single, component_edit_multi, group_access_form, group_edit_form, image_rendering, page_multiedit, licensenotification_form, link_edit_page, media_edit_page, medie_hierarchy, media_mapping, media_taxonomy, portal_edit, site_edit_form, site_edit_inheritance, all text editors, user_edit, workflow_folder_form, instance_create, instance_edit in order to implement the hcms_saveEvent JS function that will be trigger by Ctrl+S keys (same as OK button)
- Modifications in function buildview in the template engine in order to implement the hcms_saveEvent JS function that will be trigger by Ctrl+S keys
- Modifications in media_rendering in order to unify Window load and DOM ready 
- Implementation of the save layer in workflow_manager
- Implementation of the new JS function hcms_selectAll in contextmenu.js in order to select all objects of a list
- Implementation of Ctrl+A keys in order to support the select of all objects in list and gallery views in contextmenu.js
- Implementation of Ctrl+X keys in order to support the cut of the selected objects in list and gallery views in contextmenu.js
- Implementation of Ctrl+C keys in order to support the copy of the selected objects in list and gallery views in contextmenu.js
- Implementation of Ctrl+Y keys in order to support the linked copy of the selected objects in list and gallery views in contextmenu.js
- Implementation of Ctrl+V keys in order to support the paste of objects in list and gallery views in contextmenu.js
- Modifications in JS function hcms_selectObject in contextmenu.js in order to define the multiobject for a single select (required for the support of the new key controls)
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js in order to verify if an object has been selected before starting the delete dialog
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js in order to implement permissions that can be set using JavaScript
- Modifications in pop_action and popup_status in order to adjust the permission check
- Modifications in pop_action and popup_status in order to process multiobjects with a single object
- Modifications in explorer in order to deactivate keyboard shortcuts
- Design modifications in control_media_menu
- Modifications in API loader in order to enable the verification of the user permissions in the API functions
- Modifications in all API functions in order to exclude the system user from the verification of the permissions (since the system user can't login in the system)
- Fixed possible security issue if a user manipulates the multiobject string in order to move, copy or delete objects without owning the proper permissions
- Modifications in control_objectlist_menu in order to exclude the wrong root permissions from killsession (due to the permission check in the API functions)
- Modifications in page_multiedit in order to verify control elements in various local JS functions
- Modifications in all language files
- Updates in the Installation and Users Guide
- Bug fix: The home screen used unsupported input parameters for function showhomeboxes
- Bug fix: image_rendering included a wrong closing bracket for a condition
- Bug fix: Function edituser in Main API did not initialize all arrays
- Bug fix: Function rdbms_renameobject in DB Connect did rename objects in the recycle bin
- Bug fix: Function pasteobject in Main API did not grant access if the user did not own the rename permissions for folders and objects (verification of the paste location)
- Bug fix: explorer_objectlist did not assign the CSS class hcmsIconList to the deactivated "notify me" icon
- Bug fix: Function edituser verified all combinations of permissions which has resulted in a restriction when saving the user settings 
- Bug fix: The Project Management API did invert the permission check for its functions
- Bug fix: The Task Management API did invert the permission check for its functions
- Bug fix: user_edit did not remove special characters from the names used in the autocomplete JQuery feature
- Bug fix: JS function hcms_leftClick in contextmenu.js did not unselect all objects if there was more than 1 object selected (multiobject)

Version 10.0.0
Release 08/2021
- Major release with a new database design (table container and media has been merged with table object for performance improvements) and new group permissions for plugins
- Reports using attributes of table container or media need to be changed (table object includes all attributes of former table container and media)
- Modifications in function hcms_loadSidebar in contextmenu.js in set change the delay from 400ms to 200ms
- Modifications in createtables.sql in order to merge the attributes of table container and media with table object
- Modifications in createtables.sql in order to set the character set of table keywords, project, task, and textnodes to utf8mb4 (4 bytes) instead of utf8 (3 bytes)
- Modifications in createtables.sql in order to set the max. characters of attribute objectpath to 16,000 of table object
- Modifications in createtables.sql in order to set the max. characters of attribute to_user to 500 of table recipient
- Modification in user_sendlink in order to restricte the max. length of the input field for recipients to 500 digits
- Changed all case-sensitive SQL queries from utf8_bin collation to binary comparison
- Implementation of the new function update_database_v1000 in the Update API in order to merge the attributes and contents of table container and media with table object
- Modifications in function rdbms_getmedia in DB Connect in order to remove the extended input parameter
- Modifications in various functions in DB Connect in order to remove table container and media from all queries
- Modifications in all system components that use function rdbms_getmedia
- Modifications in function exportxmlfiles in Import/Export API in order to remove table container and media from all queries
- Modifications in function getmetadata_multiobjects, getmetadata_container in Get API in order to remove table container and media from all queries
- Modifications in function contentcount in Main API in order to remove table container and media from all queries
- Modifications in function zipfiles in Media API in order to remove table container and media from all queries
- Modifications in function setmetadata in Meta API in order to remove table container and media from all queries
- Modifications in the face management plugin in order to remove table container and media from all queries
- Modifications in the recognizefaces service in order to remove table container and media from all queries
- Modifications in the savecontent service in order to remove table container and media from all queries
- Modifications in the Report Management module in order to remove table container and media from all queries
- Modifications in function rdbms_createobject in DB Connect in order to support the copy of media data for connected copies and the new input parameter for the copy of the media data
- Modifications in function manipulateobject in Main API in order to support the new input parameter of function rdbms_createobject for the connected copy
- Modifications in function rdbms_getobject_id in DB Connect in order to accept the *page* and *comp* path variables besides %page% and %comp%
- Modifications in setting $mgmt_config['report_tables'] in the main configuration in order to exclude table container and media from the Report Management module
- Modifications in the Report Management module in order to display the different foreign keys of the tables in different colors
- Modifications in the simplestats plugin in order to remove table container and media from all queries
- Design modification in user_sendlink
- Implementation of the toolbar customization in control_objectlist_menu
- Implementation of the new main configuration GUI settings $mgmt_config['toolbar_functions']
- Implementation of the new session variable hcms_toolbarfunctions in include/session in order to support the toolbar customization
- Modifications in function deleteuser in Main API in order to remove the toolbar customization file of the user
- Implementation of the new function settoolbarfunctions in Get API in order to save the toolbar customization file
- Modifications in function userlogin in Security API in order to load and return the toolbar settings of the user
- Modifications in function registeruser in Security API in order to register the toolbar settings of the user
- Modifications in user_edit in order to also change the design theme for Mobile Edition
- Removed the activation of the permission verification in the API loader in order to avoid double check by the GUI and the API
- Modifications in popup_action adn popup_status in order to activate the permission verification for all API functions (whenever multiobject is used)
- Modifications in the local JS function translatelanguage in media_taxonomy in order to collect all expressions of a page and send it to the translation engine (reduces process time significantly)
- Implementation of the new exe file icon in all design themes
- Modifications in function getfileinfo in Get API in order to support exe files
- Modifications in function getserverload in Main API in order to verify the interval input parameter
- Modifications in news home box in order to verify the old main configuration setting for the welcome screen
- Design modifications in the search home box
- Implementation of the new XML node plugins in user groups (xmlschema/usergroup.scheam.xml.php and xmlsubschema/usergroup.scheam.xml.php)
- Modifications in group_edit_form and group_edit_script in order to support access permissions for plugins
- Modifications in function editgroup in Main API in order to support plugins and the new input parameter for plugins
- Modifications in function group_edit in the SOAP API in order to set the new input parameter for the plugins
- Design modifications in group_edit_form and implementation of labels for the checkboxes
- Modifications in function userlogin in Security API in order to support the new plugin access permissions
- Modifications in function registeruser in Security API in order to support the new plugin access permissions
- Implementation of the new session variable hcms_pluginaccess in include/session in order to support the new plugin access permissions
- Implementation of the new function checkpluginpermission in Security API
- Modifications in explorer in order to support the new plugin access permissions
- Modifications in all plugins in order to support the new plugin access permissions
- Modifications in various function of the Security API regarding the return of the false result
- Modifications in plugin_management
- Modifications in all language files
- Updates in the main configuration file regarding the viewport sizes of smartphones
- Design modifications in the Mobile Edition (mobile.css)
- Modifications in group_access_explorer in order to remove the publication name from the object path
- Modifications in function create_csv in Main API in order to suppress messages caused by ob_clean and ob_flush
- Modifications in function importmediafiles, importxmlfiles, and exportxmlfiles in Import/Export API in order to use new output buffering logic
- Modifications in function showdate in UI API and is_date in Main API in order to exclude zero date provided by the database
- Modifications in all object lists in order to verify dates with function is_date
- Design modifications in function showmedia in UI API
- Design modifications in page_info
- Modifications in JS function hcms_leftClick in contextmenu.js in order to minimize the navigation on touch of the objectlist
- Implementation of the new JS function hcms_addEvent in main.js for cross-browser-support for event listeners (in order support keyboard shortcuts for MS IE)
- Modifications of various functions in contextmenu.js in order to implement the global is_selectarea variable and check for the display style of the selectarea to be empty or 'none' in order to trigger the display of the selectarea
- Modifications in function loadtaxonomy and savetaxonomy in Meta API in order to trim the taxonomy expressions
- Modifications in function loadtaxonomy in Meta API in order to support a new input parameter and result item for the total number of rows of the taxonomy
- Modifications in function loadtaxonomy in Meta API in order to support the new input parameter for loading the default taxonomy
- Implementation of a page selector in the taxonomy editor (media_taxonomy)
- Implementation of a memory for the selected languages for the automatic translation in the taxonomy editor (media_taxonomy)
- Implementation of the new function deletetaxonomy in Meta API
- Implementation of the delete function in the taxonomy editor (media_taxonomy)
- Implementation of the restore default taxonomy function in the taxonomy editor (media_taxonomy)
- Implementation of the new function checksoftwareversion in Main API
- Modifications in various functions in the Update API in order to use to new function checksoftwareversion
- Modifications in the standard taxonomy
- Added Chinese traditional language to the standard taxonomy
- Modifications in function updates_all in Update API in order to suppress all updates if it is a new/clean installation
- Modifications in function cleancontent in Main API in order to convert special characters of no character set has been provided as input
- Modifications in function indexcontent in Media API in order to save cleaned text in the XML Container
- Modifications in function indexcontent in Media API in order to compare encoding for MS Office files and convert the content to UTF-8 if required
- Implementation of the new main configuration setting $mgmt_config['webdav_lifetime'] in order to define the WebDAV session lifetime
- Modifications in the Workplace Integration in order to support the new main configuration setting $mgmt_config['webdav_lifetime']
- Modifications in function rdbms_searchcontent in DB Connect in order to exclude search expressions that are longer than 800 digits and numbers and to replace | with space
- Modifications in function getsearchhistory in Get API in order to support the new clean input parameter for cleaning the search log
- Modifications in explorer in order to support the new input parameter of function getsearchhistory
- Modifications in function rdbms_getduplicate_file in DB Connect in order to query only the objectpath attribute
- Template code saved in the content node of a XML template and rich content saved in the textnode of a XML container will be always escaped
- Modifications in function setcontent, seticontent, and setcontent_fast in XML API in order to support the new input parameter to escape the content
- Modifications in function getcontent and geticontent in XML API in order to support the new input parameter to unescape the content
- Modifications in function indexcontent in Media API, importmetadata and setmetadata in Meta API in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in Main API in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in Set API in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in UI API in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in Import/Export API in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in template engine in order to apply the new input parameter of function getcontent and setcontent
- Modifications in various functions in event system in order to apply the new input parameter of function getcontent and setcontent
- Modifications in page_multiedit, text_edit_format, and text_edit_signature in order to apply the new input parameter of function getcontent and setcontent
- Modifications in search API and service savecontent in order to apply the new input parameter of function getcontent and setcontent
- Modifications in template_edit and template_source in order to apply the new input parameter of function getcontent and setcontent
- Implementation of the new function escape_xmltags in XML API in order to replace XML tag names used in the XML schema of containers and templates (this function is however not used since the contents are escaped)
- Implementation of the new local JS function initializeSearch in explorer in order to initialize the search form and the search parameters
- Modifications in explorer in order to uncheck all file types in the search form by default
- Modifications in local JS function startSearch in explorer in order to verify if at least one file-type is checked and to display a message if no file-type has been selected
- Modifications in explorer in order to implement labels for the color checkboxes
- Design modifications in the search field of the Mobile Edition (frameset_mobile)
- Modifications in template engine in order to apply function scriptcode_encode on text content
- Modifications in explorer_objectview in order to implement the arrow key events for the preview navigation
- Modifications in frameset_main and frameset_mobile in order to disable keyboard shortcuts and the control of the navigation frame on touch (only for the Mobile Edition) 
- Modifications in contextmenu.js in order to replace the standard JS events by the new function hcms_addEvent
- Modifications in local JS function generatePluginTree in explorer in order to hide navigation frame on click or touch
- Modifications in text_edit_format, text_editunformat, text_edit_list, and text_edit_signature in order to apply function scriptcode_clean on the content
- Modifications in JS function hcms_setObjectcontext, hcms_setColumncontext, hcms_setUsercontext, hcms_setQueuecontext, and hcms_setMessagecontext in contextmenu.js in order to stop the propagation of the event
- Modifications in explorer_objectlist in order to call JS function hcms_setObjectcontext on mouseover event of the list or gallery view layer
- Implementation of the support of the command key in main.js and contextmenu.js in order to support keyboard shortcuts for MacOS
- Implementation of the support of the MacOS Delete and Backspace key in contextmenu.js in order to support keyboard shortcuts for MacOS
- Moved JS function hcms_keyPressed from contextmenu.js to main.js
- Modifications in function rdbms_getmediastat in DB Connect in order to replace LEFT by INNER JOIN for the query excluding the filesize attribute
- Modifications in function createmedia in Media API in order to write and close the session before the media rendering and restart the session after the rendering for non-blocking media creation
- Modifications in various interfaces of the system in order to write and close the session for improved loading times by using non-blocking execution
- Modifications in function valid_locationname in Security API in order to verify and restrict the max. characters for the location path (due to the database attribute objectpath)
- Minor modifications in function correctfile and renamefolder in Main API
- Modifications in explorer_imageview in order to correct the size of the preview
- Modifications in function createfilename in Main API in order to return "noname" as file name if the encoded file name is empty
- Modifications in various functions in the Main API in order to call function createfilename before the verification of the object name
- Modifications in Import/Export API in order to provide error messages from the used functions from Main API
- Modifications in function update_software in Update API in order to provide additional log events
- Modifications in function getconnectedobjects in Link API in order to use database with fallback to the XML container
- Modifications in page_info_container in order to implement a new log event in case the connected object does not exist
- Modifications in function publishobject and unpublishobject in Main API in order to exclude objects that are in the recycle bin (verify location path instead in order to include folders in the recycle bin)
- Modifications in function createobject, createfolder, deletefolder, manipulateobject, renameobject, and renamefolder in Main API in order to replace the .recycle extension by _recycle since the .recycle extension is reserved for objects in the recycle bin
- Modifications in function createobject, createfolder, renameobject, and renamefolder in Main API in order to remove verification of the .recycle substring in the folder or object name (since it will be replaced)
- Modifications in function createmediaobject in Main API in order to exclude .recycle substring rename since it will be performed by function createobject
- Modifications in function clonefolder and zipfiles in Media API in order to verify the .recycle extension instead of the search for the .recycle substring in the object path
- Modifications in function createfilename in Main API in order to exclude objects in the recycle bin
- Modifications in function createobject, manipulateobject, and renameobject in Main API in order to replace the _hcm identifier in file/object names
- Modifications in function is_config, is_preview, and is_thumbnail in Main API in order to include underline for the _hcms identifier for media files
- Implementation of the crontab file in the install directory
- Changes in the text of most event log entries
- Design modifications in all control menus
- Redesign of the colorful design theme
- Minor design modifications in day design theme
- Redesign of the standard design theme
- Updates in all user manuals
- Bug fix: Implementation of the missing support of uppercase key for the save event Ctrl+S
- Bug fix: The plugin_management did not display the active state correctly after saving the data (the reload of the configuration file provided the old data)
- Bug fix: The local JS function setSaveType of the template engine did not verify if the local JS function collectFaces and initFaceOnVideo is available (MS IE does not support the face recognition service and still called function collectFaces)
- Bug fix: JS function createFaceOnImage in function showmedia in UI API has not been verified (MS IE does not support the face recognition service and still called function collectFaces)
- Bug fix: The implementation of the folder button in the Mobile Edition was in the list view instead of the gallery view of folders in search_objectlist
- Bug fix: The task management view selector of the toolbar did not use the proper inverse colors of the design theme
- Bug fix: control_objectlist_menu used wrong JS function for the verification of the new object name (checkForm_page_rename)
- Bug fix: control_objectlist_menu did not use the local JS function checkForm_zip for the verification of the ZIP file name if the return key has been used for the submit
- Bug fix: control_group_menu did not use the local JS function checkForm for the verification of the group name if the return key has been used for the submit
- Bug fix: control_media_menu did not use the local JS functions for the verification if the return key has been used for the submit
- Bug fix: control_pers_menu did not use the local JS function checkForm_item_create for the verification of the personalization name if the return key has been used for the submit
- Bug fix: control_portal_menu did not use the local JS function checkForm_tpl_create for the verification of the portal template name if the return key has been used for the submit
- Bug fix: control_site_menu did not use the local JS function checkForm for the verification of the publication name if the return key has been used for the submit
- Bug fix: control_template_menu did not use the local JS function checkForm_tpl_create for the verification of the template name if the return key has been used for the submit
- Bug fix: The local JS function checkForm_import in control_template_menu did not focus on the file input field on error
- Bug fix: control_user_menu did not use the local JS function checkForm for the verification of the user name if the return key has been used for the submit
- Bug fix: control_workflow_menu did not use the local JS function checkForm_item_create for the verification of the workflow name if the return key has been used for the submit
- Bug fix: instance_create did not use the local JS function createInstance for the verification of the instance form if the return key has been used for the submit
- Bug fix: control_report_menu did not use the local JS function checkForm_item_create for the verification of the report name if the return key has been used for the submit
- Bug fix: Recycled object references have not been removed from the XML content container. Modifications in function manipulateobject in Main API in order to remove the .recycle from the objectpath before replacing it in contentobjects node of the XML container for action "page_delete", "page_rename", and "page_paste"
- Bug fix: search_objectlist used deprecated layer and iframe for the objectview which caused issues with user_sendlink
- Bug fix: Function createmediaobject in Main API used to original file name for the queue instead of the one returned by function createobject
- Bug fix: Function getobjectinfo in Get API accessed wrong variable for the connected objects

Version 10.0.1
Release 09/2021
- Implementation of the group edit feature in user_edit in order to open and edit the selected group
- Implementation of the disable attribute for link tags in the template engine in order to disable the links in the edit mode
- Modifications in template_help in order to include the new disable link attribute
- Modifications in function setcontent, seticontent, getcontent, and geticontent in XML API in order to encode and decode < and > but not &
- Modifications in function setpagelink in Set API in order to exclude & from encoding of linkhref parameter
- Modifications in function setmedia in Set API in order to exclude & from encoding of mediafile parameter
- Modifications in template_source in order to exclude & from encoding
- Modifications in function edittemplate in Main API in order to encode < and > and exclude &
- Modifications in workflow_script_form in order to exclude & from encoding of the loaded workflow script content
- Implementation of a new error log event in service uploadfile in case the provided security token of a user is not valid
- Modifications in function checktoken in Security API in order to verify that the variable timetoken and token_user exists
- Minor design modifications in user_sendlink
- Modifications in user_sendlink in order to initialize the send mail date field and to automatically activate the send mail date checkbox if the datepicker is used
- Modifications in control_objectlist_menu in order to enable the customization feature of the toolbar for the search
- Modifications in function rdbms_searchcontent in DB Connect in order to support the *Null* value for the input parameter $expression_filename
- Modifications in search_objectlist in order to support the *Null* value for the file name search expression
- Modifications in search_objectlist in order to support the search category "text" for text-based search without including the location and object name in the search
- Modifications in search form of explorer in order to support the search category "text" for text-based search without including the location and object name in the search
- Minor modifications in the installation routine
- Minor modifications in popup_status
- Modifications in function link_db_insert in Link API in order to add new error events if the container exists already of the container could not be added to the link management database
- Modifications in function createobject in Main API in order to revert modifications in workflow, link management database and content containers if the new object could not be saved in the file system
- Modifications in various home boxes in order to verify that the user has been provided
- Modifications in function ocr_extractcontent in Media API in order to log the tesseract error code
- Removed the support of gunzip from the main configuration ($mgmt_uncompress['.gz']), installation routine, instance_create and function createinstance in Main API
- Modifications in various functions in the Main API in order to include the output of the executed shell command in the error log entry
- Modifications in various functions in the Media API in order to include the output of the executed shell command in the error log entry
- Modifications in various functions in the Meta API in order to include the output of the executed shell command in the error log entry
- Modifications in log_list in order to strip html tags from the description
- Design modifications in frameset_main in order to remove the CSS class from the upload window maximize, minimize, and close button
- Design modifications in popup_upload_html in order to avoid text-overflow with the window buttons in the top bar
- Modifications in the log viewer plugin in order to update the functionality to the systems standards
- Modifications in function ocr_extractcontent in Media API in order to use the option --psm instead of -psm
- Modifications in function createmedia in Media API in order to use the FFmpeg encoder aac instead of the deprecated libfdk_aac audio codec
- Modifications in function buildbarchart in template engine in order to allow up to 2 comma digits for the y-axis values
- Modifications in popup_ftp in order to remove the protocol from the server name
- Update of MiniPaint image editor to version 4.9.1 (dropped support of MS IE)
- Modifications in MiniPaint bundle.js in order to modify the graphical user interface and the save features
- Modifications in image_minipaint in order to support the new MiniPaint version 4.9.1
- Modifications in image_minipaint in order to support the JSON image data provided by MiniPaint
- Modifications in image_minipaint in order to support the TIFF image format
- Modifications in service savemedia in order to support the JSON image data provided by MiniPaint
- Modifications in service savecontent for savetype "imagerendering_so" in order to verify the browser version and force the use of the standard image editor instead of MiniPaint since the new version does not support MS IE
- Modifications in service savecontent in order to exclude the MiniPaint image editor for mobile devices due to performance issues
- Modifications in function deletemediafiles in Main API in order to include the JSON image editor file
- Modifications in function uploadfile in Main API in order to remove the JSON image editor file
- Added missing mime-type for BMP images to include/format_mime.inc.php
- Modifications in function deletemediafiles in Main API in order to support a new input parameter for the JSON image editor file
- Modifications in user_sendlink in order to suppress the autocomplete feature of browsers ignoring the autocomplete attribute
- Modifications in user_sendlink in order to suppress the X icon in search fields
- Design modifications in popup_ftp
- Modifications of comments in the main configuration file in the installation directory
- Modifications in the function createinstance in Main API in order to implement the settings for the executables
- Modifications in the instance_create in the Connector module in order to add new fields for the executables and to verify mandatory inputs
- Modifications in function showmessage in UI API in order to avoid overflow of the text
- Modifications in function gettemplates in Get API in order to verify the inheritance setting of a publication
- Modifications in explorer in order to verify that a location exists before calling scandir
- Minor design modifications in Report Management and Workflow Management module
- Implementation of the main configuration setting $mgmt_imagepreview['rawimage'] in order to support dcraw and ufraw for the support of RAW image formats
- Modifications in function createmedia in Media API in order to evaluate dcraw and support RAW images using the package dcraw instead of ImageMagicks convert and package ufraw (since Debian 11 does not provide the package ufraw-patch)
- Modifications in function indexcontent in Media API in order to support RAW images using the package dcraw instead of ImageMagicks convert and package ufraw (since Debian 11 does not provide the package ufraw-patch)
- Update of the rich text editior to CKEditor version 4.16.2
- Implementation of the new CKEditor plugin for the resizing of table columns
- Removed deprecated WebSpellChecker plugin of CKEditor
- Modifications in function getimagecolors in Get API in order to initialize the result array and return it
- Modifications in explorer and the search home box in order to set the type of the search field to search and disable autocomplete
- Modifications in the home boxes in order to set the width of the box for mobile devices to 320px and hide expressions in the home box title for mobile devices
- Modifications in the home boxes in order to enable scrolling in the content of the home boxes on iOS devices
- Modifications in the homebox template in order to set the width of a box for mobile devices to 320px
- Modifications in service accessstats in order to set a new height for the chart
- Modifications in all design themes (main.css) in order to add new styles for search input fields
- Design modifications in the Import and Export Connector module 
- Design modifications in the Report Management module
- Modifications in function createmultiaccesslink in Main API in order to improve the information in the log event if the access link could not be created
- Modifications in function showvideoplayer in UI API in order to display the thumbnail gallery only if the requested video width is at least 420px
- Modifications in function getlocation and getobject in Get API in order to trim provided object path
- Modifications in function manipulateallobjects in Main API in order to set maxitems to 40
- Modifications in function manipulateallobjects in Main API in order to add a report to the result array and avoid breaking the process in case of an error except for cut & paste
- Modifications in function getlocation and getobject in Get API in order to trim provided object path
- Modifications in popup_status in order to display errors provided by function manipulateallobjects
- Modifications in function copyfolders in Main API in order to support the new input parameter for not creating a copy of the folder if it exist already in the target location
- Modifications in function manipulateobject in Main API in order to avoid creating a copy of the folder file
- Modifications in frameset_objectlist in order to hide the scrollbars of the object view layer on mobile devices
- Modifications in function savelockfile in Main API in order to save the file if it is already unlocked
- Updates in the Installation, Template Designers, and Users Guide
- Updates in all language files
- Bug fix: template_edit encoded & which could lead to an issue with &gt; and &lt;
- Bug fix: Function checktoken in Security API did not extract the full security token if @ has been used in the user name
- Bug fix: Local function generateTaxonomyTree in explorer did not verify if the taxonomy keyword exists
- Bug fix: page_info_container did not correct the file name provided by function getconnectedobject
- Bug fix: Set style to overflow:auto for NavContainer in order to fix display issue with mobile Safari
- Bug fix: Modifications in function uploadfile in Main API in order to use deletemediafiles to delete all media derivates of the media object (has not been done if the versioning was disabled)
- Bug fix: Function rdbms_searchuser in DB Connect did not query the user if the publication name has not been provided as input
- Bug fix: user_sendlink did not verify that the input field with id 'email_ondate' exists when initializing the fields
- Bug fix: Function createinstance in Main API used valid_publicationname instead of valid_objectname to verify the instance name
- Bug fix: The API loader used valid_publicationname instead of valid_objectname to verify the instance name
- Bug fix: instance_edit in the Connector module used publication specific character set instead of funtion getcodepage
- Bug fix: The search home box did not close the form tag
- Bug fix: Job minutely extracted wrong location if the queue object was a folder
- Bug fix: Function deletefolder in Main API renamed .recycle extension if used in the folder name
- Bug fix: Function manipulateobject in Main API did not correctly remove the recycle extension from the search in the content container node "contentobjects"

Version 10.0.2
Release 12/2021
- Modifications in function contentcount and loadlockfile in Main API in order to avoid access to contentcount.dat by the same user using different processes
- Implementation of the new function createlockname in Main API in order to provide a valid name for fil locking
- Modifications in various function in the Main and Get API in order to use function createlockname for the file lock name
- Modifications in function createuser in Main API in order to verify that .@ is not part of the user name since it is used for file locking
- Modifications in function getcontentlocation in Get API in order to create the container directory if it is missing
- Modifications in function getcontentlocation in Get API in order to replace the for loop by the calculated block number of the container
- Modifications in function createobject in Main API in order to add a new log event if the container directory could not be created
- Modifications in function loadfile in Main API in order to remove deprecated verification of "off" file extension since function correctfile takes care of it
- Modifications in function savelockfile in Main API in order to create the unlocked file name for any lock name used
- Modifications in function savelockfile in Main API in order to return result immediately after saving and unlocking the file
- Modifications in function savelockfile in Main API in order to unlock the file in case of a file read error
- Modifications in function contentcount in Main API in order to add 100 to the recreated container ID by database query
- Modifications in function loadfile_header, loadfile_fast, and loadfile in Main API in order to return result immediately after reading
- Modifications in popup_upload_html in order to show the warning for the unload of the upload window only if the upload is for multiple files
- Modifications in CSS class hcmsWorkplaceExplorer in main.css of all design themes
- Design modifications in frameset_main and frameset_objectlist
- Design modifications in page_info_stats
- Modifications in function manipulateallobjects in Main API in order to remove failed objects from the collection
- Modifications in version_template in order to reload the template editor if a rollback to another version has been successfully executed
- Modifications in several functions of the Import/Export API in order to echo title before the free spaces of the output buffering logic
- Modifications in several functions of the Import/Export API in order to reduce the free spaces to 1000 for the output buffering logic
- Modifications in the installation routine
- Modifications the LDAP connector in order to support multiple publications separated by , or ; in the mapping configuration in the main configuration file
- Modifications the LDAP connector in order to support multiple groups separated by , or ; in the mapping configuration in the main configuration file
- Modifications in the main configuration file in order to add new comments regarding the mapping definitions
- Modifications in function sendresetpassword in the Main API in order to use the "passwordreset" for the input type with support of "resetpassword" as type
- Renamed the main configuration setting $mgmt_config['resetpassword'] to $mgmt_config['passwordreset']
- Modifications in site_edit_form in order to support the AD/LDAP setting "ldap_keep_groups"
- Modifications in function editpublication in the Main API in order to support the AD/LDAP setting "ldap_keep_groups"
- Modifications in the Import Export API and import/export scripts in the Connector Module in order to display the load bar during the execution of the import or export
- Implementation of the new full text search (merged textcontent from table textnodes) for improved full text search performance (about 50% reduction of the execution time of the SQL query)
- Modifications in createtables.sql in order to include the new column textcontent and the new index for table object
- Modifications in createtables.sql in order to set the type to mediumtext for the textcontent in table object and textnodes
- Implementation of the function update_database_v1002 in the Update API in order to support the new full text search in table object
- Modifications in function rdbms_setcontent in DB Connect in order to support the new full text search in table object
- Modifications in function searchcontent in DB Connect in order to support the new full text search in table object
- Modifications in search_objectlist in order to exclude text IDs from the search query and result
- Design modifications of the display of error messages in the installation routine
- Modifications in the installation routine in order to define the SMTP port number as integer value with a default value of 25
- Modifications in createtables.sql in order to rename and modify/optimize the index of various tables
- Added new version to version history log in the installation directory
- Modifications in function manipulateallobjects in Main API in order to set maxitems to 20 in order to reduce delays when writing data to large databases
- Modifications in function buildbarchart in template engine in order to round values without comma digits and set the minimum y-value to 8
- Modifications in function deletepublication in Main API in order to remove the Google Cloud key files
- Modifications in function deletepublication in Main API in order to remove the license notification configuration files
- Removed deprecated jquery.hotkeys.js from explorer
- Modifications in search box in order to remove unused JS code
- Modifications in rdbms_getmediastat in DB Connect in order to support a new input parameter and the caching of the results for better performance with large datasets
- Modifications in service accessstats in order to provide the new timeout value for the activation of the cache
- Modifications in the upload template in the install directory in order to verify if the SESSION constant exists (due to issue with preview in the system)
- Modifications in the PhotoSwipe template in the install directory in order to apply hypercms_href for the link to the full size image (due to issue with preview in the system)
- Modifications in the GalleriaSearch template in the install directory in order to define the form action for the preview in the system (due to issue with the form submit in the preview of the system)
- Modifications in the template editors "API Function Reference" in order to display a fixed chapter navigation
- Modifications in the template editor in order to change the width of the help popup window
- Modifications in various system components in order to verify the DAM publication setting
- Modifications in the event system in order to verify the DAM publication setting
- Modifications in container_source in order to unescape the tags used in the content of the XML container
- Modifications in function escape_xmltags in XML API in order to simplify the tag name definitions and add tag name of new XML schemas for user and usergroup
- Modifications in the Workflow API in order to escape nud unescpae the content stored in the XML workflow files
- Modifications in function settext in Set API in order to not escape the textcontent node in the XML container
- Modifications in function settext in Set API in order to apply function escape_xmltags on the text content
- Modifications in function edittemplate in Main API in order to not escape the < and > characters and apply function escape_xmltags on the templates content
- Modifications in function getcontent and geticontent in XML API in order to unescape <, > and & characters only if no tags have been found in the text content
- Modifications in text_edit_format, text_edit_unformat, page_multiedit in order to reduce the file size of the scripts
- Modifications in Import/Export API in order to reduce the file size of the scripts
- Modifications in function showeditor and showinlineeditor in UI API in order to escape &lt; and &gt; in order to avoid CKEditor to convert the escaped characters into < >
- Integration of the publish dialog in the same window instead of popup windows except for the Mobile Edition
- Modifications in control_content_menu in order to open the publish dialog in new layer instead of a popup window
- Modifications in control_objectlist_menu in order to open the publish dialog in a new popup layer instead of a popup window
- Modifications in control_objectlist_menu in order to open the delete, cut, copy, connected copy, paste, unzip action in a new popup layer instead of a popup window
- Modifications in frameset_main in order to open the publish dialog in new layer instead of a popup window
- Renamed local JS functions openUpload, minUpload, maxUpload, and closeUpload to openPopup, minPopup, maxPopup, and closePopup in frameset_main
- Implementation of popups in the Mobile Edition with a limitation of max. 1 popup
- Implementation of local JS function openPopup, minPopup, maxPopup, and closePopup in frameset_mobile
- Removed main configuration setting $mgmt_config['upload_newwindow'] from the main configuration. New upload browser windows are no longer supported.
- Modifications in local JS function openPopup in frameset_main and frameset_mobile in order to return a boolean result
- Modifications in popup_action and popup_status in order to close the popup frame instead of the popup window using the local Js function closepopup
- Modifications in popup_status in order to set the new target frames for the reload
- Implementation of a top bar displaying the action in its title in popup_action and popup_status
- Implementation of the new JS function hcms_submitToPopup in contextmenu.js in order to post the contextmenu data to a new popup in the top window
- Implementation of the new JS function hcms_openPopup in contextmenu.js in order to open an URL in a new popup in the top window
- Modifications in contextmenu.js in order to migrate from JS function hcms_createContextmenuItem to JS function hcms_submitToPopup
- Modifications in various JS functions in contextmenu.js in order to optimize the JS code
- Modifications in various function in Main API in order to migrate from JS window opener object to parent frames 
- Implementation of the new JS function hcms_uniqid in main.js in order to create a random alphanumerical string with a lenth of 13 digits
- Renamed JS function hcms_submitWindow to hcms_submitToWindow in contextmenu.js
- Removed the form action "popup_action.php" for single objects in contextmenu.js
- Modifications in JS function hcms_submitToWindow in main.js in order to replace the random number by function hcms_uniqid
- Modifications in popup_upload_html in order to set the new target frames for the reload
- Modifications in the JS function minPopup and maxPopup in frameset_main and frameset_mobile in order to enable and disable the scrollbars of the popups iframe
- Modifications in popup_action in order to optimize the code
- Modifications in control_objectlist_menu in order to relocate the edit button to the 2nd position in the tool bar
- Design modifications in popup_action and popup_status in order to display the status in the top bar
- Modifications in the Instance Management Connector module (control_instance_menu) in order to replace function valid_publicationname by valid_objectname
- Modifications in function deletetinstance in Main API in order to replace function valid_publicationname by valid_objectname
- Modifications in text_edit_format, text_edit_signature, and text_edit_unformat in order to initialize the contentbot variable in case no content is available
- Modifications in text_edit_checkbox, text_edit_date, and text_edit_list in order to optimize the code
- Modifications in function downloadfile in Main API in order to convert the 2nd input parameter for function fseek to an integer
- Modifications in function exportxmlfiles, importxmlfiles, and importmediafiles in Import/Export API of the Connector module in order to support the new input parameter for PHP ini settings and HTTP headers used for output buffering
- Modifications in function exportxmlfiles, importxmlfiles, and importmediafiles in Import/Export API of the Connector module in order to verify the ooutput buffer before calling the function ob_flush
- Modifications in the import and export scripts of the Connector module in order to set the PHP ini settings and HTTP headers before any output
- Implementation of the new function showactionicon in UI API
- Modifications in popup_notify in order to remove the deprecated close action for the popup window
- Design modifications in popup_notify
- Modifications in the templates CarouselZoom, 360view, Galleria, and PhotoSwipe in the install directory in order to verify that the collectMedia function exists
- Modifications in chat.js in order to create new JS Audio object for the chat sound file
- Modifications in the local JS function openChat in chat.js in order to open the chat sidebar
- Set default chat update interval to 1.6 seconds
- Implementation of the new main configuration setting $mgmt_config['chat_update_interval'] for the definition of the chat update interval
- Modifications in frameset_mobile in order to replace the local JS function openChat by the JS function hcms_openChat in main.js
- Modifications in JS function hcms_showContextmenu in contextmenu.js in order to disable "send to chat" if multiple objects have been selected
- Modifications in JS function hcms_createContextmenuItem in contextmenu.js in order to disable "send to chat" if multiple objects have been selected
- Implementation of the new function getbuildnumber in Get API
- Modifications in all system components in order to apply function getbuildnumber for loading and chaching the brandguide.css, main.css, mobile.css, desktop.css, main.min.js, and contextemnu.min.js files based on the installed software version
- Implementation of the new MD5 hash JS function hcms_md5 in main.js
- Implementation of the support for dropping files in explorer_objectlist by automatically opening the upload popup
- Modifications in JS function hcms_allowDrop in contextmenu.js in order to support the dropping of files
- Modifications in explorer_objectlist in order to support the dropping of files by automatically opening the upload popup (if a mime-type can be provided due to an issue with the kind property with Chrome and MS Edge)
- Implementation of the new edit keywords icon for all design themes
- Implementation of the new keywords editor text_edit_keywords in order to support the editing of keywords for pages and components besides assets
- Modifications in the template engine in order to support the keywords tag for articles
- Modifications in the template engine in order to apply readonly on the the edit buttons of the tags in "cmsview"
- Modifications in function showinlineeditor in UI API in order to set the CSS class of the element containing the content for each template tag name
- Modifications in text_edit_list in order to remove the contentbot input parameter and include the file parameter
- Modifications in text_edit_list in order to support the file input parameter for the text options
- Modifications in service savecontent in order to support the new savetype "editork_so"
- Modifications in function showtaxonomytree in UI API in order to support individual character sets
- Modifications in function showtaxonomytree in UI API in order to migrate from getElementsByName to querySelectorAll due to issues with new browsers
- Modifications in template engine, text_edit_keywords, and page_multiedit in order to support the new charset input parameter for function showtaxonomytree
- Modifications in function showmedia in UI API in order to add the original video file if supported and in case there is none or one video source
- Modifications in function showmedia in UI API in order to verify that all media files (sources) for the audio/videoplayer exist
- Modifications in videoplayer in order to add the original video file if supported and in case there is none or one video source
- Modifications in videoplayer in order to verify that all media files (sources) for the audio/videoplayer exist
- Modifications in page_info_stats in order to set the input parameters for the cache timeout
- Updates in the Administrators Guide
- Updates in the German language file
- Updates in the Developers Guide (Removed the full API Reference in the manual since it is available online and in the system)
- Bug fix: AND was missing in the SQL statement for the condition that is used to query files in function rdbms_getfilesize in DB Connect 
- Bug fix: Function savelockfile did not create the unlocked file name if the file has been locked by another user or process
- Bug fix: Function savelockfile did not unlock the file in case of a read error of the file
- Bug fix: The scrolling of the workplace frame in frameset_main was disabled and caused issues on smaller screens
- Bug fix: Function deletepublication in Main API used wrong path for the media map files
- Bug fix: Function createpublication in Main API saved the result (boolean) of function createmapping in the mapping file in data/media
- Bug fix: The full text search field of the explorer did not support free space due to a conflict with the spacebar key and the input of type search and the JQuery hotkeys (jquery.hotkeys.js)
- Bug fix: The Workflow Builder did not escape the task name
- Bug fix: CKEditor is unescaping &gt; and &lt; and transforming information into tags
- Bug fix: popup_publish outputted the title of the top bar
- Bug fix: control_instance_menu did apply publicationname on an instance configuration file name and therefore did not accept the provided instance name (publicationname requires the publication to exist)
- Bug fix: Function deletetinstance in Main API applied function valid_publicationname on the instance name and therefore did not accept the provided instance name (publicationname requires the publication to exist)
- Bug fix: frameset_imexport and frameset_imexport_folder of the Import/Export Connector module used an invalid key-value pair separator in the meta element
- Bug fix: Function unpublishobject in Main API did not assign the value to the viewstore variable in case of an error
- Bug fix: The chat sidebar has not been opened automatically if a new message has been loaded
- Bug fix: queue_objectlist used wrong JS variable name for the permissions used in contextmenu.js
- Bug fix: Function showinlineeditor in UI API did not extract the options provided by the file attribute of the template tag
- Bug fix: Function showinlineeditor in UI API did not support the keyword template tag
- Bug fix: The file input parameter has been missing in text_edit_list and has not been supported
- Bug fix: The readonly template tag attribute did not disable the edit buttons in the "cmsview" and "inlineview"
- Bug fix: Function showtaxonomytree in UI API did not select all entries and did not perform a search due to a deprecated query using getElementsByName
- Bug fix: Function showtaxonomytree in UI API did not remove the CSS class from the results of a new search expression and left the previously found entries highlighted
- Bug fix: Function edituser in Main API did not return password errors
- Bug fix: Function rdbms_getmediastat in DB Connect set the cache timeout to 12 hours if a cache timeout has not been provided as input

Version 10.0.3
Release 02/2022
- Modifications in various functions in the Security API in order to verify variable values using the PHP function empty
- Renamed JS function hcms_leftClick and hcms_rightClick in contextmenu.js to hcms_leftClickContext and hcms_rightClickContext
- Implementation of the new JS function hcms_isLeftClick and hcms_isRightClick in main.js
- Modifications in JS function hcms_addEvent for the click event in order to verify that the JS function hcms_leftClickContext is not included
- Modifications in the Workflow Management module in order to open the workflow context menu only on right mouse click
- Modifications in JS function hcms_dragLayers in main.js ni order to enable dragging of elements on left mouse click only
- Implementation of the new function update_database_v1003 in Update API
- Added function call update_database_v1003 to function updates_all in Update API
- Added new version to version history log in the installation directory
- Modifications in popup_status in order to remove the reload of the navigation tree on cut & paste
- Modifications in function deleteuser in Main API in order to delete the home screen configuration file of a user
- Implementation of the new function rdbms_optimizedatabase in DB Connect in order to remove dead datasets and optimize the database
- Implementation of the new main configuration setting $mgmt_config['rdbms_optimize'] in the main configuration file
- Implementation of the new job for the automatic optimization of the database on 1st of January of each year
- Modifications in user_objectlist in order to format all numbers of the user count in the footer
- Modifications in function showvideoplayer in UI API in order to verify that the variable media exists
- Modifications in the installation routine in order to disable the requirement for the LDAP PHP extension if the Connector module is not used
- Modifications in the installation routine in order to verify the file contentcount.dat
- Implementation of the new local JS function popupclose in popup_publish in order to close the popup after publishing
- Modifications in function showmedia in order to create the thumbnail files of a video in case no valid preview video file is available. This requires the activation of the main configuration setting $mgmt_config['recreate_preview'].
- Design modifications in the search engine in the install directory used for the search of the content of managed websites
- Modifications in function getwallpaper in Get API in order to verify the wallpaper name before requesting a wallpaper from the wallpaper service
- Modifications in the CSS class selectedFiles jquery-fileupload.css in all design themes
- Design modifications in popup_upload_html
- Modifications in popup_upload_html in order to activate the date field when the delete object checkbox is activated and vice versa
- Implementation of the new function reimportmediafiles in Import/Export API in order to support the reimport of exported multimedia files (and remove the symbolic links)
- Modifications in the import script in order to support the new reimport of previously exported media files
- Modifications in the import script in order to remove the verification of the input parameters since the corresponding functions are taking care of the validations
- Modifications in the import form in order to support the reimport of media files as a new import type
- Modifications in the import form in order to support the publication name for the symlink import type and in the parameters of a saved job
- Modifications in the local JS function switchimport in the import form in order to support the symlink import type
- Modifications in function importobjects in Import/Export API in order to support the publication name
- Modifications in function createmedia in Media API in order to support the background, gravity, and extend options for the image manipulation
- Modifications in the main configuration file in the install directory in order to add the new options for the image manipulation as comments
- Modifications in popup_status in order to exclude the location if the recycle bin is used and show the expression "recycle bin" instead
- Modifications in popup_status in order to extract the location from the provided multiobject in any case
- Updates in the Connector Guide
- Bug fix: The home screen configuration file of a user has not been deleted with the user account
- Bug fix: user_objectlist did not display the proper number of users per page
- Bug fix: popup_publish used window.close for closing the popup
- Bug fix: Function showmedia in UI API did not remove the type from the file string before the verification of the media files (sources) for the audio/videoplayer
- Bug fix: videoplayer did not remove the type from the file string before the verification of the media files (sources) for the audio/videoplayer
- Bug fix: Function showmedia in UI API was not able to extract the thumbnail from the media record since the media record has been reduced
- Bug fix: videoplayer was not able to extract the thumbnail from the media record since the media record has been reduced
- Bug fix: The upload status bar has been outside the viewport in the Mobile Edition
- Bug fix: Function showinlineeditor in UI API provided the tag title twice for the textareas title attribute
- Bug fix: Function showinlineeditor in UI API closed the form tag
- Bug fix: Function showinlineeditor in UI API did not decode the special characters for the usage in the rich text editors popup text for formatted text fields
- Bug fix: The template engine did not apply the local JS function submitText for the unformatted text field in formedit, formmeta, and formlock view which resulted into empty unformatted text content
- Bug fix: userlogin did not support the new and old main configuration for the password reset feature $mgmt_config['passwordreset'] and $mgmt_config['resetpassword']

Version 10.0.4
Release 03/2022
- Modifications in function createuser in Main API in order to verify that no result has been returned from selectcontent if the user exists already
- Modifications in function createuser in Main API in order to return the user name in the message if the user exists already
- Modifications in the user XML schema in order to add the new "nologon" node
- Modifications in the user XML subschema in order to add the new "nologon" node
- Modifications in the user XML file in the install directory in order to add the new "nologon" node
- Modifications in function createuser in Main API in order to support the new input parameter nologon that prevents the logon users that have been created for access links
- Modifications in service sendmail in order to create new users with enabled nologon
- Modifications in function userlogin in security API in order to verify the nologon value of a user
- Modifications in user_edit in order to hide the hash code from the users personal settings
- Modifications in user_edit in order to support the display and editing of the nologon value of a user for user administrators
- Modifications in function sendresetpassword in Main API in order to disable e-mail notifications to users with enabled nologon
- Modifications in function edituser in Main API in order to support the editing of the nologon value of a user
- Modifications in function edituser in Main API in order to convert the superadmin value to an integer
- Implementation of the new function update_users_v1004 in Update API in order to add the new nologon node to the user information and set the nologon value based on the user name
- Modifications in function getuserinformation in Get API in order to support the nologon value
- Modifications in control_user_menu, userregister, resetpassword in order to add the new logon parameter to function createuser and edituser
- Modifications in the SOAP API of the Connector module in order to add the new logon parameter to function createuser and edituser
- Modifications in the LDAP/AD Connector of the Connector module in order to add the new logon parameter to function createuser and edituser
- Modifications in service sendmail in order to add the new logon parameter to function createuser and edituser
- Modifications in function createinstance in Main API in order to add the new logon parameter to function createuser and edituser
- Modifications in function sendresetpassword in Main API in order to add the new logon parameter to function createuser and edituser
- Modifications in the installation routine in order to add the new logon parameter to function edituser
- Modifications in the search statistics plugin since the search expression does not necessarily lead to a search result with objects
- Modifications in the main configuration file in the installation directory in order to add comments for $mgmt_config['search_query_match']
- Modifications in function rdbms_searchcontent in DB Connect in order to combine MATCH AGAINST and LIKE in order to solve the issue with stop words restrictions with MariaDB and MySQL that lead to empty search results
- Design modifications for the context menus in explorer_objectlist
- Design modifications for the context menu in explorer, search_objectlist, message_objectlist, queue_objectlist, and user_objectlist
- Design modifications for the context menu in the Worflow Management module
- Implementation of the new connected copy column in explorer_objectlist and search_objectlist in order to open and display the usage of the same content container
- Modifications in page_info_container in order to display the container ID instead of the container name
- Modifications in page_info_container in order to remove the column for the publication name since the publication is included in the location
- Modifications in page_info_container in order to delete the selected objects which are using the same content container
- Modifications in page_info_container in order to mark the selected objects as deleted which are using the same content container (if the recycle bin is used)
- Modifications in page_info_container in order to disable the opening of the same object
- Modifications in page_info_container in order to disable the delete checkbox for folders
- Modifications in page_info_container in order to display the same object row in a different color
- Modifications in page_info in order to apply a replace the language key for the MD5 hash
- Modifications in function rdbms_getobjects in DB Connect in order to sort the result by the objectpath
- Modifications in explorer_preview in order to display a new link for the connected copies of an object
- Design modifications in explorer_preview in order to apply the CSS class hcmsTableNarrow instead of hcmsTableStandard for some information classes
- Modifications in page_info_inclusions in order to remove the column for the publication name since the publication is included in the location
- Modifications in page_info_inclusions in order to display the same object row in a different color
- Modifications in the OpenSearch module of the Connector in order to rename function authenticate to OpenSearch_authenticate and function sendUnauthorized to OpenSearch_unauthorized
- Modifications in the OpenSearch module of the Connector in order to correct getmetadata function call
- Modifications in the OpenSearch module of the Connector in order to replace the separated year, month, and day entries for the modified date filter by the international date format
- Modifications in function getmetadata in Get API in order to correct the spelling of an input variable name
- Modifications in function getmetadata in Get API in order to initialize the return value based on the requested separator
- Modifications in the local JS function initialize in explorer_objectview in order to focus on the window
- Modifications in various functions in DB Connect in order to include the slash for the replacement of the page and asset/component root variable
- Modifications in function rdbms_searchcontent in DB Connect in order to support the new global configuration parameter $mgmt_config['search_folderpath_level'] for the search for objects in the provided folder path level
- Modifications in function rdbms_searchcontent in DB Connect in order to support the thumbnail, download, and wrapper URL in the result
- Modifications in function rdbms_searchcontent in DB Connect in order to support the object type in the result array
- Modifications in function authenticate in the REST OpenAPI in order to support the user name and password as input parameters besides the user hash
- Modifications in function executeREST in the REST OpenAPI in order to support the user name and password as input parameters besides the user hash
- Modifications in function readSession in the REST OpenAPI in order to use the users language setting and use English as fallback
- Modifications in function authenticate and the WSDL template in the SOAP OpenAPI in order to support the user name and password as input parameters besides the user hash
- Modifications in function getobjectlist in Get API in order to use the new configuration parameter $mgmt_config['search_folderpath_level'] for the search of objects on the same location level
- Modifications in function getobjectlist in Get API in order to add a new permission key to the result array with all local permissions of the authenticated user
- Modifications in function getobjectlist in Get API in order to set default values for the input parameter $objectlistcols
- Modifications in function getobjectlist in Get API in order to support the page- and compaccess of the user as result
- Modifications in function getobjectlist in Get API in order to support search queries using a new input parameter
- Modifications in function getobjectlist in Get API in order to support default values for the returned result keys/columns
- Modifications in function getobjectlist in Get API in order to verify that the objects exist provided by the search result
- Implementation of the new getobjectlist test case for the RESTful API of the Connector
- Modifications in function showvideoplayer in UI API in order to verify thet variable $media_dir and $container_id exist
- Modifications in function userlogin in Security API in order to log different authorization values (access-link, user-login, valid-dates, check.dat, and nologon)
- Modifications in user_edit in order to add delete buttons for the valid dates of the user account
- Removed click.min.js from group_edit_script
- Code sanitization and improvements in several system components, e.g. adding double quotes to some CSS class names that have been missing
- Modifications in all language files
- Modifications in desktop.css and mobile.css of all design themes in order to add the table style definition
- Updates in the Connector and Users Guide
- Bug fix: The context menu for the column headers did not display the border and shadow correctly
- Bug fix: page_info_container used the object name without the file extension for comparison regarding the edit- or preview
- Bug fix: page_info_container did not correct the location for folders
- Bug fix: explorer_preview displayed the table for links even if no link is available
- Bug fix: The OpenSearch module of the Connector used the same function name authenticate as used by the REST API
- Bug fix: Function getmetadata in Get API did return an Array if no template (with label definitions) has been specified
- Bug fix: Function getmetadata in Get API did add an additional separator at the end of each metadata record
- Bug fix: Function showinlineeditor used a single quote twice at the beginning of a text string
- Bug fix: group_edit_script did not include main.min.js which is required by most UI functions
- Bug fix: group_edit_script did not verify the parent main frame that can cause an error if the parent frame is not present due to a call of group_edit_script from user_edit without a parent frame
- Bug fix: The CSS font style for tables was missing in alle design themes (browser used default font size)

Version 10.0.5
Release 06/2022
- Minor code improvements in the Task Management API
- Minor modifications in error_codes.txt
- Modifications in function userlogin in Security API in order to initialize the variable checkresult and validdate
- Design modifications in server_load, tasks, recent_uploads, recent_downloadlinks, recent_objects, recent_downloads, news, free_storage, free_storage_per_publication, and all_reports home box
- Modifications in explorer_preview in order to remove click.min.js and enable the standard context menu of the browser
- Modifications in the home screen in order to remove click.min.js and enable the standard context menu of the browser
- Modifications in function manipulateobject in Main API in order to rename objects in the database after the object has been copied to the target location for action cut and paste
- Modifications in function manipulateobject in Main API in order to separate the error messages for copy and delete for action cut and paste (action cut & paste uses copy & delete file operation)
- Modifications in task management home box in order to always display the home box even if there are no tasks available for the user
- Modifications in format_ext in order to include the eml, mbox, adn msg mail file extensions as text format
- Modifications in function getfileinfo in order to support standard e-mail file formats and provide the file icon and format name
- Modifications in function showgallery in UI API in order to hide objects without access permissions for the user
- Modifications in function getobjectlist in Get API in order to add text IDs to the default result set
- Modifications in function rdbms_searchcontent in DB Connect in order to support a new input parameter for the search based on file extensions
- Modifications in link_edit_explorer, search_objectlist, and text_link_explorer in order to support the new input parameter of function rdbms_searchcontent
- Modifications in function getobjectlist in Get API in order to support the new input parameter of function rdbms_searchcontent
- Modifications in function rewrite_targetURI in Main API in order to support the new input parameter of function rdbms_searchcontent
- Modifications in function showcompexplorer in UI API in order to support the new input parameter of function rdbms_searchcontent
- Modifications in OpenSearch of the Connector module in order to support the new input parameter of function rdbms_searchcontent
- Modifications in REST API of the Connector module in order to support the new input parameter of function rdbms_searchcontent
- Modifications in template ServiceSearchMedia in the installation directory in order to support the new input parameter of function rdbms_searchcontent
- Modifications in function showmedia in UI API in order to optimize the video preview size by replacing the size calculations by function mediasize2frame
- Modifications in function showmedia in UI API in order to remove the background from portrait videos and display the original screen ratio
- Modifications in function showmedia in UI API in order to set the max height for portrait videos to 1080px instead of 720px
- Modifications in function getfileinfo in Get API in order to add the file extension for vector images defined in format_ext
- Modifications in function getfileinfo in Get API in order to add support for Adobe After Effects, Adobe Premiere, and Adobe Audition file extensions
- Modifications in function getfileinfo in Get API in order to add support for Computer Aided Design file extensions
- Modifications in format_ext in order to add support for HEIC, HEIF, and JFIF image file extensions
- Modifications in the main configuration file in the install directory in order to add the JFIF file extension to the image conversion
- Modifications in page_info_ip in order to replace the embedded Google Maps solution by the Google Maps API V3 
- Replaced Adobe Flash file icon by new version in all design themes
- Replaced image and video file icons by new versions in all design themes
- Replaced video player background image by new version in all design themes
- Implementation of the new file format for Computer Aided Design (CAD) files in format_ext
- Modifications in function createmedia in Media API in order to define a default video thumbnail size for the preview images
- Modifications in function getmediasize in Get API in order to set a default width and height of zero
- Modifications in function userlogin in Security API in order to verify the nologon result before using it in the log entry
- Modifications in function showworkflowstatus in UI API in order to verify that the workflow file of the objects exists and is a file
- Implementation of new function getworkflowstatus in the Workflow API in order to read the current status of an objects workflow and return the results of the last stage of the workflow
- Modifications in function checkworkflow in Main API in order to verify that the workflow module exists and return the proper result if it doesn't
- Modifications in function showworkflowstatus in UI API in order to verify that the workflow module exists and return the proper result if it doesn't
- Modifications in explorer_objectlist and search_objectlist in order to apply the new function getworkflowstatus and display the workflow accept icon for objects which are using a workflow and have been approved in the last stage of the workflow
- Modifications in createtables.sql in order to add workflowdate, workflowstatus and workflowuser to table object
- Implementation of the new function update_database_v1005 in Update API in order to update the database and add workflowdate, workflowstatus and workflowuser to table object
- Modifications in function updates_all in Update API in order to add function update_database_v1005
- Modifications in function acceptobject and rejectobject in Workflow API in order to remove the global variable contentfile and force the extraction of the container and template name from the object
- Implementation of the new function rdbms_setworkflow in DB Connect in order to save the workflow status for a container
- Implementation of the new function rdbms_getworkflow in DB Connect in order to read the workflow status for a container
- Modifications in function rdbms_searchcontent in DB Connect in order to support the new return value for the workflow status
- Moved function getworkflowitem from Get API to Workflow API
- Modifications in function checkworkflow in Main API in order to verify that function getworkflowitem exists
- Modifications in explorer_preview in order to display workflow information for an object
- Modifications in the template engine in order to display workflow information for an object
- Modifications in function showworkflowstatus in UI API in order to display the name of the applied workflow for an object
- Modifications in explorer_objectlist and search_objectlist in order to focus on the frame
- Modifications in function getfileinfo in Get API in order to define a default result in case no file extension is available
- Modifications in function getobjeclist in Get API in order to create the result based on the folder access of a user
- Changed the session lifetime of the RESTful and SOAP API of the Connector module from 10 minutes to 8 hours
- Modifications in function executeREST in order to verify the result of function getobjectlist
- Modifications in function getobjectlist in Get API in order to exclude locations with missing access permission of the user (required for REST function getobjectlist)
- Modifications in function getobjectlist in Get API in order to support the new search parameter "samelocation" for the search in the same location without including objects from subfolders
- Modifications in function getobjectlist in Get API in order to exclude locations due to access restrictions of the user
- Modifications in function getobjectlist in Get API in order to recheck the access permissions of the user for the result
- Modifications in function rdbms_searchcontent in DB Connect in order to include all folders on the same location in the result if the main configuration setting $mgmt_config['search_folderpath_level'] is enabled
- Implementation of the new "transparent" design theme that supports transparency in all windows and uses a single background image
- Modification in frameset_main, frameset_mobile, and frameset_content in order to assign new CSS class hcmsMainWindow to the body tag
- Modifications in home in order to disable the dynamic and default wallpaper if the design theme "transparent" is used
- Modifications in portal_edit in order to support the new transparent design theme for portal designs
- Modifications in portal_edit in order to reload the background images (jpg and png)
- Modifications in function editportal in order to copy the design theme before the upload o files
- Modifications in frameset_template_edit, frameset_site_edit, and frameset_objectlist in order to remove the CSS class from the body tag
- Modifications in frameset_mobile in order to add the CSS class hcmsWorkplaceObjectlist to the body tag
- Modifications in JS function hcms_openChat in main.js in order to always enable the transition effect
- Implementation of the new CSS class hcmsTransBackground and the background animation in the transparent design theme
- Modifications in all workplace frames in all modules in order to add the new CSS class hcmsTransBackground to the body tag
- Added the E-mail, Computer Aided Design (CAD), Adobe After Effects, Adobe Premiere, and Adobe Audition file icons to all design themes
- Redesigned standard file icon in all design themes
- Added the new workflow accept and inprogress icon to all design themes
- Design modifications in the colorful design theme
- Update of the CKEditor rich text editor to version 4.18.0 without the deprecated Flash-plugin
- Modifications in template_info in order to display the file size of the template in KB
- Modifications in frameset_template_edit in order to add empty as the frame source for the version tab
- Modifications in frameset_template_edit and frameset_site_edit in order to remove a gap of 1px between the tabs and tab layers
- Modifications in function authconnect of the LDAP Connector in order to add @ after the user name if the domain is not empty
- Modifications in user_sendlink and service sendmail in order to provide an empty mailfile value and prevent loading of the mailfile if the mail form data is saved as a new message
- Modifications in control_message_menu in order to hide the message on the successful removal of messages
- Modifications in control_user_menu in order not to use the global REQUEST variable for the multiobject
- Modifications in function editpublicationsetting in Main API in order to empty the file cache and reload the publication configuration after changes
- Modifications in control_log_menu in order to set a lower z-index for the notification layer due to a display issue with the tagit select box
- Modifications in control_user_menu in order to set a lower z-index for the registration layer due to a display issue with the tagit select box
- Modifications in plugin_management in order to empty the file cache before loading the plugin configuration
- Modifications in function plugin_saveconfig in Plugin API in order to empty the file cache after the plugin configuration file has been saved
- Modifications in function authconnect of the LDAP Connector in order to define a user filter if no MS AD and domain is used
- Modifications in function authconnect of the LDAP Connector in order to abort if TLS fails an no SSL connection is used
- Implementation of the new main configuration parameter $mgmt_config['ldap_username_dn'] for the LDAP user DN that is required by some LDAP servers (will only be used if AD is not used and the user domain is empty)
- Modifications in site_edit in order to add the new configuration parameter for the LDAP user DN
- Modifications in function editpublication in Main API in order to support the new configuration parameter for the LDAP user DN
- Modifications in template_edit in order to rename a language key
- Implementation of the new analog watch home box in order to display an analog watch and the date
- Modifications in the home screen in order to add the local CSS styles for the analog watch home box
- Added new image backgrd_clock.png for the analog watch home box to all design themes
- Modifications in function getobjectlist in Get API in order to support multiple folder hashes as input array
- Modifications in function loadfile and loadlockfile in Main API in order to add a new log entry if the file can't be loaded after 3 seconds of waiting
- Modifications in function loadfile_header and loadfile_fast in Main API in order to add a new log entry if the file can't be loaded
- Modifications in createtable.sql in order to modify the default values of some table attributes
- Modifications in function upload in the REST API of the Connector module in order to support the new input parameters objecthash, checkduplicates, overwrite, and versioning
- Modifications in function upload in the REST API of the Connector module in order to verify the new input parameters
- Modifications in function upload in the REST API of the Connector module in order to convert the object hash to a path
- Modifications in function upload in the REST API of the Connector module in order to verify if mediacontent is base64 encoded and only decode the content in this case
- Modifications in function upload in the REST API of the Connector module in order to support the media rendering in the background
- Modifications in function executeREST in the REST API of the Connector module in order to assign the objectpath to objecthash for REST function upload 
- Modifications in function upload in the SOAP API of the Connector module in order to support the new input parameters objecthash, checkduplicates, overwrite, and versioning
- Modifications in function upload in the SOAP API of the Connector module in order to verify the new input parameters
- Modifications in function upload in the SOAP API of the Connector module in order to convert the object hash to a path
- Modifications in function upload in the SOAP API of the Connector module in order to support the media rendering in the background
- Modifications in the WSDL template for the SOAP services of the Connector module
- Modifications in function save_content in the SOAP API of the Connector module in order to convert the object hash to a path
- Modifications in function object_exists in Main API in order to encode the object path only if the identifier characters is not already included in the path
- Modifications in function showmedia in UI API in order to verify and assign the input dimension if no configuration values are present
- Added the amv video file extension to format_ext
- Added the amv video file extension to $mgmt_mediapreview in the main configuration file in the install directory
- Removed the Flash plugin from the configuration files of the rich text editor
- Modifications in explorer_objectview in order to enable the fullscreen video in function showvideoplayer_head
- Modifications in chat in order to implement the new local JS function initialize
- Modifications in frameset_main and frameset_mobile in order to include the lang attribute in the html tag
- Modifications of the viewport in frameset_main
- Upgrade all system components using JQuery from version 3.5.1 to 3.6.0
- Upgrade all system components using JQuery Migrate from version 3.3.0 to 3.4.0
- Upgrade all system components using JQuery UI from version 1.2.1 to 1.3.1
- Modifications in all system components using JQuery and JQuery UI in order to refer to the file without the version in the file name
- Modifications in function upload in the REST API of the Connector Module in order to merge the media content if it is an array
- Modifications in popup_upload_html in order to log an exceeded storage limit
- Modifications in function manipulateallobjects in Main API in order to correct the error number for the delete event
- Modifications in function manipulateallobjects in Main API in order to remove the global variable for the objects category
- Modifications in function manipulateallobjects in Main API in order to provide the converted location path for the various function calls
- Modifications in function manipulateallobject in Main API in order to remove the global variable for the objects category
- Modifications in function copyfolders in Main API in order to remove the global variable for the objects category
- Modifications in function deletefolder in Main API in order to remove the global variable for the objects category
- Modifications in function renamefolder in Main API in order to remove the global variable for the objects category
- Modifications in function cutobject in Main API in order to remove the global variable for the objects category
- Modifications in function copyobject in Main API in order to remove the global variable for the objects category
- Modifications in function copyconnectedobject in Main API in order to remove the global variable for the objects category
- Modifications in function lockobject in Main API in order to remove the global variable for the objects category
- Modifications in function unlockobject in Main API in order to remove the global variable for the objects category
- Modifications in function unlockobject in Main API in order to remove the global variable for the objects category
- Modifications in function publishobject in Main API in order to remove the global variable for the objects category
- Modifications in function publishlinkedobject in Main API in order to remove the global variable for the objects category
- Modifications in function deleteuser in Main API in order to completely remove a user if there are no more publication memberships assigned
- Modifications in function manipulateobject in Main API in order to remove duplicate call to function correctpath
- Modifications in function manipulateallobjects in Main API in order to set the number of processed objects per request/step to 10 due to freezing of the GUI for larger databases
- Modifications in function collectobjects in Main API in order to reverse the collection array and serve the last objects first (root folder should be removed at last)
- Modifications in popup_status in order to apply function ceil for the processed percentage of objects in the status bar
- Modifications in search_objectlist in order to set all input parameters for call of function rdbms_getdeletedobjects
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to support the subitems in the recycle bin for a specific user
- Modifications in function getcharset in Get API in order to read HTML 5 tag with highest priority
- Update of the update log in the installation directory
- Added new text to all language files for the new transparent setting in the portal designer
- Updates in the Administrators Guide, Installation Guide, Template Designers Guide, Connector Guide and Workflow Management Guide
- Updates of all language files due to the change of a language key
- Updates in the readme files regarding the support of htaccess and web.config file support of the web server
- Bug fix: The template engine did not include the local JS functions in case of formlock view which might cause JS errors if the template uses one of the local JS functions
- Bug fix: Function showworkflowstatus in UI API did not use the “passed” information for the definition of the status background color
- Bug fix: Function authenticate in REST API of the Connector module did not verify the message return value of function userlogin
- Bug fix: The font file extension .ttf has been used twice in format_ext
- Bug fix: Function getfileinfo in Get API did not verify an empty file extension correctly
- Bug fix: Function getobjeclist in Get API was not able to access the global variables for the page- and compaccess
- Bug fix: control_objectlist_menu did not disable the download icon for the recycle bin
- Bug fix: user_sendlink used the data of the saved message that has been loaded instead of saving the new message data provided by the form
- Bug fix: Service sendmail starts with an array key of 0 for the user arrays and user_sendlink failed to include the array element 0 due to the verification of the array key
- Bug fix: control_queue_menu did verify the queue_id for action "delete" which was not provided when using the key shortcut for deleting objects in the queue
- Bug fix: Function showmedia in UI API did not apply the provided width and height if the video configuration didn't provide the video dimension
- Bug fix: frameset_main used a wrong width for the viewport
- Bug fix: Function showmedia did not initialize the mediaratio variable
- Bug fix: Function manipulateallobjects in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function manipulateallobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function copyfolders in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function deletefolder in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function renamefolder in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function cutobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function copyobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function copyconnectedobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function lockobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function unlockobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function unlockobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function publishobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: Function publishlinkedobject in Main API used the provided global category if one has been supplied and did not extract the category from the provided location of the objects
- Bug fix: The daily job used a wrong variable name for the extracted location from the objectpath for the recycle bin

Version 10.0.6
Release 08/2022
- Performance improvements for various select and update queries by implementation of the MD5 representation of the objectpath in table object and a new index on attribute objectpath of table object (index object_objectpath has not been used by queries)
- Modifications in function valid_locationname in Security API in order to set the max location path length to 4096 characters
- Modifications in function userlogin and checkdiskkey in Security API in order to verify that the global $_SERVER['SERVER_ADDR'] exists
- Modifications in createtables.sql in order to set the max length for objectpath in table object to 4096 characters and define it as BINARY
- Modifications in createtables.sql in order to add the attribute md5_objectpath to table object
- Modifications in createtables.sql in order to add a new index for attribute md5_objectpath
- Modifications in createtables.sql in order to replace the fulltext index object_objectpath for attribute by a standard index
- Modifications in createtables.sql in order to set the user and hash attributes of all tables to BINARY
- Implementation of the new function update_database_v1006 in Update API in order to update table object and create a new index for the attributes objectpath and md5_objectpath
- Modifications in function update_all in Update API in order to add the new function update_database_v1006
- Modifications in function rdbms_settemplate, rdbms_deleteobject, rdbms_getobject_id, rdbms_getobject_hash, rdbms_getobject_info, rdbms_setdeletedobjects, rdbms_createrecipient, rdbms_getrecipients, rdbms_getnotification, rdbms_getmediastat in DB Connect in order to migrate from objectpath to md5_objectpath for the condition
- Modifications in function rdbms_createobject, rdbms_renameobject, rdbms_setdeletedobjects in DB Connect in order to set the md5_objectpath value
- Modifications in function rdbms_renameobject in DB Connect in order to apply LIKE for the query only in case the objectpath is a reference to a folder
- Modifications in function renamefolder in Main API in order to provide the .folder file for function rdbms_renameobject
- Modifications in function update_database_v1000 in Update API in order to change the index name from "object" to "object_multiple"
- Modifications in function rdbms_getobject_id in DB Connect in order to apply BINARY only to the condition value and not the attribute
- Modifications in function link_db_load and link_db_read in Link API in order to apply function trim to the loaded link data
- Modifications in function exportxmlfiles in Import/Export API of the Connector module in order to apply BINARY to the objectpath value of the SQL condition
- Modifications in function getmetadata_multiobjects in Get API in order to apply BINARY to the objectpath value of the SQL condition
- Modifications in function zipfiles in Media API in order to apply BINARY to the objectpath value of the SQL condition
- Added .lst file extension to the clear text file format in format_ext
- Modifications in function downloadfile in Main API in order to change the HTML error code from 500 to 404 in case the media file can't be loaded
- Modifications in function downloadfile in Main API in order to add a log event in case the media file does not exist
- Modifications in service mediadownload in order to change the HTTP error from 500 and 400 to 404
- Modifications in function createuser in Main API in order to verify the user name case-insensitively (replaced selectcontent by selecticontent function call)
- Modifications in function creategroup in Main API in order to verify the user name case-insensitively (replaced selectcontent by selecticontent function call)
- Implementation of the new function file_iexists in Main API in order to support a case-insensitive alternative to PHP function file_exists
- Implementation of the new function is_ifile in Main API in order to support a case-insensitive alternative to PHP function is_file
- Implementation of the new function is_idir in Main API in order to support a case-insensitive alternative to PHP function is_dir
- Modifications in function createinstance in Main API in order to verify the instance name case-insensitively (replaced is_file by is_ifile function call)
- Modifications in function createpublication in Main API in order to verify the instance name case-insensitively
- Modifications in function createpersonalization in Main API in order to verify the personalization name case-insensitively (replaced is_file by is_ifile function call)
- Modifications in function createtemplate in Main API in order to verify the template name case-insensitively (replaced is_file by is_ifile function call)
- Modifications in function createportal in Main API in order to verify the portal template name case-insensitively (replaced is_file by is_ifile function call)
- Modifications in daily job in order to delete the object besides removing the recycle bin entries from the database (in case they could not be deleted by function processobjects)
- Modifications in function createfolders in Main API in order to remove the global variable for the objects category
- Renamed function importmetadata to importCSVtextcontent in Meta API
- Modifications in function importCSVtextcontent in Meta API in order to support the new input parameters for creating missing folders, the creation of new objects based on a template, and the update of objects
- Modifications in function importCSVtextcontent in Meta API in order to support creating missing folders, the creation of new objects based on a template, and the update of objects
- Modifications in function importCSVtextcontent in Meta API in order to support the new input parameters for the report and output puffering headers
- Modifications in function importCSVtextcontent in Meta API in order to support creation of the report and output puffering headers
- Modifications in function importCSVtextcontent in Meta API in order to apply function correctfile on the object name for content updates
- Modifications in control_objectlist_menu in order to support the new function importCSVtextcontent for the CSV import
- Modifications in the Import/Export Connector module in order to support the import of text content from CSV files
- Modifications in import_form in order to add new GUI elements and controls for the CSV import
- Modifications in import_form in order to support the new import parameters in the import file format (load and save)
- Modifications in the import script in order to support the import of text content from CSV files
- Modifications in imexport_explorer in order to support the navigation of assets and pages as root elements
- Modifications in control_imexport_menu in order to remove the export of assets and pages und provide a single export action for both
- Modifications in function importobjects in the Import/Export API in order to support the new import parameters in the import file format
- Modifications in function rdbms_getfilesize in DB Connect in order to support a new input parameter and the space used by assets in the recycle bin
- Modifications in daily job in order to include the space used by assets in the recycle bin
- Modifications in popup_upload_html in order to include the space used by assets in the recycle bin
- Modifications in Home box free_storage_per_publication in order to verify the file size value before saving it to the file
- Modifications in function importCSVtextcontent in Meta API in order to create log entry if the converted CSV file could not be saved
- Modifications in daily job in order to call function rdbms_deleteobject only if function deleteobject failed to delete the object
- Modifications in function executeREST of the REST API in the Connector module in order to support the multipart/form-data binary file upload
- Modifications in function executeREST of the REST API in the Connector module in order to set the HTTP header for the 401 error code in case function readSession returns an error
- Modifications in function rdbms_searchcontent in DB Connect in order to remove DISTINCT and apply GROUP BY for the object hash in the SQL query
- Modifications in function getobjectlist in Get API in order to provide the total number of objects
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to add GROUP BY object hash to the SQL statements
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to include the objectpath besides the md5_objecthash in the SQL query
- Modifications in function manipulateallobjects in Main API in order to allow superadmins to empty the recylce bin completely including all objects of all users
- Modifications in function createuser in Main API in order to verify the number of users
- Modifications in function createobjectaccesslink, createdownloadlink, and createwrapperlink in Main API in order to support a new optional input parameter for the recreation of the object and its hash in case it can't be found
- Modifications in page_info and popup_save_dropbox in order to apply the new input parameter for function createobjectaccesslink, createdownloadlink, and createwrapperlink
- Modifications in function download in the REST and SOAP API of the Connector module in order to apply the new input parameter for function createdownloadlink and createwrapperlink
- Modifications in the template engine in order to apply the new input parameter for function createdownloadlink and createwrapperlink
- Modifications in service getlink in order to apply the new input parameter for function createdownloadlink
- Modifications in function function getFileContents in the Workplace Integration in order to apply the new input parameter for function createobjectaccesslink and createdownloadlink
- Removed .emf file extension from image formats in format_ext
- Design modifications in popup_status
- Modifications in createtables.sql in order to change the character set and collation of table object to utf8mb4 and utf8mb4_unicode_ci
- Modifications in createtables.sql in order to remove the character set and collation of column hash and objectpath
- Implementation of the new function update_database_v10065 in the Update API in order to change the character set and collation of table object
- Modifications in function updates_all in the Update API in order to add the new function update_database_v10065
- Modifications in service uploadfile in order to support a new input parameter for the HTTP header or the text message in the response
- Modifications in various functions in Main API in order to change the HTTP error codes
- Modifications in function rdbms_setmedia in DB Connect in order to execute the SQL statement only if it is available
- Modifications in function getlistelements in Get API in order to use the System API instead of the service getkeywords (since it might be blocked)
- Modifications in control_content_menu and control_objectlist_menu in order to display the full location on mouse over
- Modifications in function rdbms_searchcontent in DB Connect in order to remove the combination of MATCH AGAINST and LIKE for textcontent since the fulltext index will not be used by the query if combined with LIKE
- Modifications in function rdbms_searchcontent in DB Connect in order to move from LIKE to MATCH AGAINST for the search in objectpath
- Modifications in function rdbms_searchcontent in DB Connect in order to replace the template condition for the search_type by objectpath
- Modifications in function rdbms_searchcontent in DB Connect in order to remove the template condition for the search of the meta.tpl file extension since the format is already covered by the filetype condition 
- Modifications in function rdbms_searchcontent in DB Connect in order to remove the SQL DATE function and set the time for the start and end date for the use of the index
- Modifications in function rdbms_replacecontent in DB Connect in order to remove the SQL DATE function and set the time for the start and end date for the use of the index
- Modifications in function rdbms_searchrecipient in DB Connect in order to remove the SQL DATE function and set the time for the start and end date for the use of the index
- Modifications in the search Home Screen box in order to implement and support the search for text or in the location and object name 
- Modifications in explorer in order to enable the search in textcontent or the location but not both at the same time since the full-text index will not be used
- Modifications in frameset_objectlist in order to support the parameter search_cat required for the text or location/name based search
- Implementation of the new function update_database_v10066 in the Update API in order to create a new full-text index for objectpath
- Modifications in function updates_all in the Update API in order to add the new function update_database_v10066
- Modifications in createtables.sql in order to remove object_multiple index and add the new index for id, date, media, and the new fulltext index for objectpath
- Modifications in explorer_objectlist and search_objectlist in order to remove the JS function call hcms_updateControlObjectListMenu from each folder and object click event
- Modifications in message_objectlist in order to remove the JS function call hcms_updateControlMessageMenu from each folder and object click event
- Modifications in queue_objectlist in order to remove the JS function call hcms_updateControlQueueMenu from each folder and object click event
- Modifications in user_objectlist in order to remove the JS function call hcms_updateControlUserMenu from each folder and object click event
- Modifications in control_objectlist_menu in order to enable the navigation to the parent folder if a single object has been selected and a form of search result is used
- Modifications in contextmenu.js in order to avoid the call of JS function hcms_unselectAll twice by JS function hcms_selectObject
- Modifications in JS function hcms_selectAll and hcms_unselectAll in contextmenu.js in order to support a new input parameter and the update of the control frame based on that parameter
- Modifications in JS function hcms_selectObject in contextmenu.js in order to call JS function hcms_updateControlObjectListMenu, hcms_updateControlUserMenu, hcms_updateControlQueueMenu, and hcms_updateControlMessageMenu after the objects have been selected
- Modification in the search Home box and the explorer in order to display the new search help
- Modifications in function rdbms_getfilesize in DB Connect in order to set the default value for the input parameter $recyclebin to false
- Modifications in function rdbms_getfilesize in DB Connect in order to apply the input parameter $recyclebin for the object count
- Modifications in function rdbms_getfilesize in DB Connect in order to subtract the root folder object file from the file count
- Modifications in function rdbms_getfilesize in DB Connect in order to include the count and file size in the same SQL statement
- Modifications in function zipfiles in Media API in order to change the SQL statement to use the deleteuser instead of the objectpath for excluding the objects in the recycle bin
- Modifications in function zipfiles in Media API in order to change the default ZIP file size limit to 120,000 MB
- Modifications in various API functions that use function rdbms_getfilesize in order to set the recyclebin parameter
- Modifications in JS function hcms_loadSidebar in contextmenu.js in order to disable the sidebar view if more than one object has been selected
- Modifications in frameset_mobile in order to implement and support the search for text or in the location and object name 
- Modifications in Home Screen in order to center the Home boxes
- Modifications in main.css of all design themes for the CSS class hcmsHomeBox
- Modifications in all Home boxes in order to remove the float CSS style
- Modifications in page_info_stats in order to implement a loading screen, caching for folder statistics and non-blocking execution
- Implementation of the new function getgroupinformation in Get API in order to provide the set of permissions of a user group
- Modifications in function getuserinformation in Get API in order to support the new input parameter to include the set of permissions for all group memberships of the user
- Implementation of the new REST function getuserinformation in the RESTful API
- Modifications in function userlogin in Security API in order to verify the usergroup node array element
- Modifications in function getobjectlist in Get API in order to support the search for object ID or hash
- Modifications in function rdbms_getobject_info in DB Connect in order to include the links to media objects in the result
- Modifications in function rdbms_getobject_info in DB Connect in order to include the location and object name in the result
- Modifications in function rdbms_searchuser in DB Connect in order to include the links to media objects in the result
- Modifications in function rdbms_searchuser in DB Connect in order to include the location and object name in the result
- Modifications in function rdbms_getobjects in DB Connect in order to include the links to media objects in the result
- Modifications in function rdbms_getobjects in DB Connect in order to include the location and object name in the result
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to include the links to media objects in the result
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to include the location and object name in the result
- Modifications in function rdbms_searchrecipient in DB Connect in order to include the links to media objects in the result
- Modifications in function rdbms_searchrecipient in DB Connect in order to include the location and object name in the result
- Modifications in function createobject in Main API in order to return the object hash in the result
- Modifications in function uploadfile in Main API in order to return the object hash, objectpath, location, and object in the result
- Modifications in the RESTful API in order to translate the Systems API results
- Modifications in the RESTful API test file in order to provide additional comments and move the test parameters to the top section of the source code
- Removed average file size from Home box free_storage_per_publication due to required database access and delay with large databases
- Modifications in function createthumbnail_indesign in Media API in order to log an error if the result is not a valid JPEG file
- Modifications in function getimagecolors in Get API in order to remove a wrong thumbnail file that fails the JPEG verification
- Modifications in function savecontent in Main API in order to return a result array instead of a boolean value
- Modifications in various function in Main API in order to initialize the result array at the beginning and not the end of the function code
- Modifications in various function in Main API in order to return a error message for invalid input parameters
- Modifications in the RESTful API in order to replace the newlines by periods and remove the HTML tags from the result message
- Implementation of streaming links for audio and video files in explorer_preview and page_info
- Design modifications in explorer_preview and page_info in order to apply the word-break style for all direct, stream, wrapper, and download links
- Modifications in function getobjectlist in Get API in order to support the users page and component access permissions in case the location is missing
- Modifications in function createobject in Main API in order to verify the location before the error log entry
- Implementation of the new function getobjectpathlevel in Get API in order to get the level of an objectpath
- Implementation of the new function update_database_v10069 in Update API in order to update table object and create a new attribute for the objectpath levels and set the value
- Modifications in function update_all in Update API in order to add the new function update_database_v10069
- Modifications in various function in DB Connect in order to support the new attribute level in table object
- Modifications in function rdbms_getobject_info in DB Connect in order to verify that the objectpath array element exists
- Modifications in daily job in order to delete the temporary files after the invalid users
- Modifications in function getobjectlist in Get API in order to set the value for an empty "filename" search to *Null* in order to disable the search in textcontent and objectpath at the same time 
- Modifications in function getfiletype in Get API in order to support the folder type
- Implementation of the new function update_database_v100610 in Update API in order to update table object and set filetype to "folder" for each folder objects
- Modifications in function rdbms_searchcontent and rdbms_replacecontent in DB Connect in order to support the filetype "folder"
- Modifications in explorer in order to support the search for the "folder" file type
- Modifications in function rbms_searchcontent and rbms_replacecontent in DB Connect in order to support readable locations (convert special characters)
- Modifications in function rbms_searchcontent in DB Connect in order to add the template to the result array
- Modifications in function rdbms_getobject_info in DB Connect in order to add the object type to the result array
- Modifications version_content_compare in order to verify that the variable content_array exists
- Modifications in function showmedia in UI API in order to initialize the media attributes in case they can't be extracted from the media file
- Implementation of the new function getlabel in Get API in order to extract the label for a specific language code
- Modifications in the template engine in order to use function getlabel and support labels and help values with language code prefixes
- Modifications in all article, component, text, link and media editors in order to use function getlabel and support labels with language code prefixes
- Modifications in function showinlineeditor in UI API in order to use function getlabel and support labels with language code prefixes
- Modifications in function getmetadata in Get API in order to use function getlabel and support labels with language code prefixes
- Modifications in explorer_objectlist and search_objectlist in order to use function getlabel and support labels with language code prefixes
- Modifications in popup_upload_html in order to set the max items in the upload queue to 500
- Modifications in function rbms_searchcontent in DB Connect in order to support the sort by the relevance of the search result in case a full-text search using MATCH AGAINST is performed
- Design modifications in explorer in order to migrate the select to radio checkboxes for the AND/OR decision of the advanced search form
- Update of the update log in the installation directory
- Updates in the Administrators Guide, Import/Export Guide, Template Designers Guide, and Users Guide
- Implementation of new texts for the search help in all language files
- Bug fix: Function manipulateobject in Main API did not extract the objects category properly since it used a reduced object path
- Bug fix: Function manipulateobject in Main API did not extract the objects category before the accessgeneral function call
- Bug fix: Function deletefolder in Main API did not extract the objects category before the accessgeneral function call
- Bug fix: Function rdbms_searchcontent in DB Connect did not apply GROUP BY for the object hash which resulted in an error of the provided result number using LIMIT
- Bug fix: explorer_preview caused the creation of new object after the have been moved to the recycle bin and could not be found on reload of explorer_preview
- Bug fix: Function rdbms_setdeletedobject in DB Connect did not exclude the folder object from the SELECT query
- Bug fix: The explorer of the Import/Export Connector module did not convert the directory path and caused a fallback to the root directory
- Bug fix: Function createthumbnail_indesign in Media API did not verify the created JPEG file format which lead to an issue with the create thumbnail file the analysis of its colors by function getimagecolors in Get API
- Bug fix: The RESTful function executeREST did not accept a publication value *Null* in the request
- Bug fix: Function editpublication did set the value for the RESTful API based on the SOAP API

Version 10.0.7
Release 10/2022
- Migrate from case sensitive to case insensitive object and folder names in compliance with MS Windows file and directory names
- Modifications in function createfolder, createobject, renameobject, renamefolder, and manipulateobject in the Main API in order to use function is_ifile and is_idir for case-insensitive object and folder name support
- Implementation of the new function update_database_v1007 in Update API in order to update table object and create a new attribute for the objectpath levels and set the value
- Modifications in function update_all in Update API in order to add the new function update_database_v1007
- Modifications in createtables.sql in order to change the attribute objectpath of table object to a case insensitive collation
- Modifications in various functions in DB Connect in order to remove BINARY from the objectpath comparison
- Modifications in service recognizefaces in order to remove BINARY from the objectpath comparison
- Modifications in function zipfiles in Media API in order to remove BINARY from the objectpath comparison
- Modifications in function getmetadata_multiobjects in Get API in order to remove BINARY from the objectpath comparison
- Modifications in function exportxmlfiles in the Import/Export API in order to remove BINARY from the objectpath comparison
- Removed md5_objectpath from all function in DB Connect
- Removed md5_objectpath from createtables.sql
- Implementation of the new function update_database_v10071 in the Update API in order to drop the index object_md5_objectpath and remove column md5_objectpath from table object
- Modifications in function update_all in Update API in order to add the new function update_database_v10071
- Modifications in the main configuration file in the install directory in order to add new comments to the Relational Database Connectivity section
- Modifications in page_info_stats in order to remove the duplicate call of function rdbms_getmediastat for the chart and the table view
- Modifications in function rdbms_getmediastat in DB connect in order to support a permanent cache for the results
- Modifications in function rdbms_getmediastat in DB connect in order to support an automatic cache timeout based on the end date
- Modifications in service getaccessstats in order to set the cache timeout to "auto"
- Modifications in page_info_stats in order to set the cache timeout to "auto"
- Modifications in Home boxes recent_downloads, recent_uploadlinks, and recent_uploads in order to set a cache timeout of 0
- Modifications in page_info_recipients in order to set a cache timeout of 0
- Modifications in function createuser in order to remove user if checkdiskkey failed
- Modifications in Taxonomy editor media_taxonomy in order to select the 2nd target language as default language
- Modifications in popup_status in order to set a default value for the variable headline
- Dropped support for Apache 2.2 htaccess directives in the install directory (still available as comments)
- Modifications in function ftp_filelist in Connect API in order to support Windows FTP servers besides UNIX FTP servers
- Modifications in popup_ftp in order to support the new date element of the result of function ftp_filelist
- Modifications in function deletepublication in order to remove the new taxonomy import profile of a publication
- Modifications in the LDAP Connector of the Connector module in order to escape | in the log entries
- Modifications in DB Connect in order to escape | in the log entries
- Modifications in template engine in order to escape | in the list entries of the template tags
- Modifications in function createnavigation in UI API in order to escape | in the navigation entries
- Modifications in the minutely job in order to escape | in the server load log entries
- Modifications in the chat service in order to escape | in the chat log entries
- Implementation of the new function createlogentry in Main API in order to create a valid log entry
- Modifications in search_objectlist in order to use the new function createlogentry when saving the search parameters
- Modifications in explorer in order to support a new view input parameter to select the navigation tree or search form
- Implementation of the new JS function hcms_isHiddenLayer in main.js
- Modifications in local JS function switchNav and switchSearch in frameset_main in order to use the new JS function hcms_isHiddenLayer for the search form layer
- Modifications in frameset_main in order to remove the search window state since its state will be verified by JS function hcms_isHiddenLayer
- Modifications in explorer in order to modify always show the save search option
- Modifications in explorer in order to display the information if the saved search expression is text or location based
- Modifications in the Import/Export Connector module in order to change the order of the import and export icon in the toolbar
- Modifications in the Import/Export Connector module in order to support the new date element of the result of function ftp_filelist
- Modifications in the Import/Export Connector module in order to support the publication name in the export profile
- Modifications in the Import/Export Connector module in order to only display saved import and export profiles that match the users publication access permissions
- Modifications in the Import/Export Connector module in order to apply the new function createlogentry
- Implementation of the new media_taxonomy_import with support of daily import jobs and the automatic import of a remote CSV file
- Removed CSV import logic from control_template_menu since it has been moved to media_taxonomy_import
- Implementation of the new function importtaxonomy in Meta API in order to support the automated import of a taxonomy
- Modifications in the daily job in order to support the automated import of a taxonomy
- Modifications in the daily job in order to support the recreation of the full taxonomy relations for all objects in case a new taxonomy has been imported
- Modifications in function rdbms_searchcontent in DB Connect in order to improve the performance by seperating the taxonomy query from the main query (the JOIN of table object and taxonomy was slow with large taxonomies)
- Modifications in function rdbms_getkeywords in DB Connect in order to include deleteuser in the SQL query
- Implementation of the new function update_database_v10073 in the Update API in order to update the taxonomy index
- Modifications in function update_all in Update API in order to add the new function update_database_v10073
- Modifications in createtables.sql in DB connect in order to add the attribute text_id to the index taxonomy_multiple
- Modifications in function rdbms_query in DB Connect in order to add the error codes for identifiaction of the executed SQL query to the SQL log
- Modifications in function rdbms_getemptykeywords in order to include deleteuser in the SQL query
- Modifications in explorer in order to append a time stamp to the URL for explorer_keywords in order to avoid caching
- Modifications in function settaxonomy in Set API in order to support text IDs as input for the analysis of the content
- Modifications in rdbms_getcontent in DB Connect in order to support multiple text IDs as input array
- Modifications in taxonomy editor in order to support text IDs as input for the analysis of the content
- Modifications in function createtaxonomy in Meta API in order to write and close the session before the analysis of the content and restart the session afterwards for non-blocking download
- Implementaton of process logging using the new directory process in the internal repository
- Implementation of the new data/process directory in the install directory
- Implementation of the new function suspendsession, revokesession, and is_suspendedsession in Security API
- Modifications in function createsession in order to support the session ID as new input parameter
- Modifications in all system components in order to replace the PHP functions session_write_close and session_start by the new functions suspendsession and revokesession
- Modifications in function rdbms_getdeletedobjects in DB Connect in order optimize SQL query
- Modifications in createtables.sql in DB Connect in order to create a new index object_deleteuser
- Implementation of the new function update_database_v10074 in Update API
- Modifications in function update_all in Update API in order to add the new function update_database_v10074
- Removed deprecated JS variable session_id that in all system components
- Modifications in search_objectlist in order to define different max. result limits for different search queries (standard max. 1000, large max. 2000 results)
- Modifications in function gettaxonomy_sublevel in Get API in order to support a new input parameter for sorting the result
- Modifications in explorer in order to disable the sort of the taxonomy expressions in the navigation tree
- Modifications in search_objectlist in order to display all deleted objects and folders without being greyed out
- Modifications in daily job in order to get the user of the objects in the recycle bin and provide them to function processobjects and deleteobject
- Implementation of the new function rdbms_setobjectpathlevel in DB Connect in order to set the level of all objects in the database
- Implementation of the new function getthumbnailsize in Get API in order to return the size for thumbnails defined in the main configuration for images
- Implementation of the new function krita_getdata and krita_create in the Meta API in order to support krita files
- Modifications in function setmetadata in the Meta API in order to support krita files
- Implementation of the new function is_kritaimage in Main API in order to support krita files
- Modifications in function getmapping in the Meta API in order to support the metadata mapping for krita files
- Modifications in function setmetadata in the Meta API in order to support the metadata mapping for krita files
- Modifications in function showmedia in UI API in order to support krita files
- Modifications in function getobjectlist in Get API in order to support the new input parameter return_all_levels (return also folder without access permissions of the user)
- Modifications in the RESTful API in order to set the new parameter return_all_levels for function getobjectlist
- Modifications in service getfacedefinitions in order to exit the service after the JSON result has been returned
- Modifications in function downloadfile in Main API in order to close and not recreate the session due
- Modifications in function createsession in Security API in order to verify if the headers have been sent before creating a session
- Modifications in page_multiedit in order to disable the keyword field if the variable disabled is not empty
- Implementation of the new function preparekeywords in Main API in order to prepare a list of comma separated keywords for the use in the system
- Modifications in page_multiedit in order to use function preparekeywords
- Modifications in text_edit_keywords in order to use function preparekeywords
- Modifications in template engine in order to use function preparekeywords
- Modifications in service savecontent in order to suspend the user session after the permission check (non-blocking service)
- Modifications in page_multiedit in order to log events in the browser console
- Modifications in local JS function checkImageForm in page_multiedit in order to return false if no image editing option has been activated
- Modifications in service renderimage, rendervideo, and savecontent in order to support the new savetype value "none" that stops further execution of the service and return a JSON response
- Modifications in page_multiedit in order to support parallel requests for text, image, and video content for faster saving of multiple objects
- Modifications in page_multiedit in order to implement the new local JS function textchanged to submit text content if it has been changed
- Modifications in REST API of the Connector module in order to remove the "add_onload" key from the result if it exists
- Modifications in various services in order to exit after the JSON response
- Modifications in function manipulateobject in Main API in order to remove deprecated code
- Modifications in function ocr_extractcontent, indexcontent, and createthumbnail_krita in Media API in order to verify if the temporary directory used for the extraction exists and delete it in any case
- Modifications in function krita_getdata in Meta API in order to verify if the temporary directory used for the extraction exists and delete it in any case
- Implementation of the new fullscreen function for the home screen in order to display the background image without any home boxes and design elements 
- Modifications in JS function hcms_showFormLayer and hcms_switchFormLayer main.js in order to 
- Modifications in page_multiedit in order due to issues with the display of the saving screen with Chromium browsers
- Modifications in rich_calendar.js in javascript library ni order to add the document type
- Added .kra file extenions as image to format_ext
- Added .7z file extenions as compressed to format_ext
- Updates in the default taxonomy
- Update of the update log in the installation directory
- Updates in the Connector, Installation, Template, and Users Guide
- Updates in the language files
- Bug fix: Function manipulateallobjects did not get the category for each array element
- Bug fix: format_ext used dot without a file extension in key 'cad'
- Bug fix: The folder explorer of the Import/Export Connector module did URL encode the input parameters for the local JS function sendOption
- Bug fix: The browsing using the taxonomy tree is slow with large taxonomies due to the SQL join of table object and taxonomy using index object_objectpath and taxonomy_multiple
- Bug fix: Function rdbms_getkeywords in DB Connect did not include deleteuser in the query
- Bug fix: search_objectlist did not count only 1 object in the search result
- Bug fix: explorer_objectlist did not count only 1 object if the paging was not used
- Bug fix: Function rdbms_getkeywords in DB connect did not apply DISTINCT before counting the container IDs
- Bug fix: Function rdbms_getemptykeywords in DB connect did not apply DISTINCT before counting the container IDs
- Bug fix: Function settaxonomy in Set API did not remove the taxonomy entries if no taxonomy result has been found for a specific text ID
- Bug fix: Function deletepublication did not remove the CSV file of a taxonomy
- Bug fix: Function rdbms_searchcontent did not include the textnodes table in the SQL query in case the variables for collecting the table joins has not been set
- Bug fix: Corrected language code cz to cs for Czech in the language file, stopword list, tesseract languages, search engine, and main configuration
- Bug fix: Function rdbms_setdeletedobjects in DB Connect did set the level for folders
- Bug fix: page_multiedit included a nested label tag for "save image as"
- Bug fix: The JSON string in PUT requests has not been correctly resolved by the REST API of the Connector module 
- Bug fix: The daily job used a wrong set of input parameters for the call of function rdbms_getdeletedobjects
- Bug fix: Function rdbms_settaxonomyin DB Connect did not escape the text ID before executing the SQL DELETE query
- Bug fix: Function createmediaobjects in Main API did not apply function createmediafile to the folder name before the verification if the folder exists already
- Bug fix: Function rdbms_getmediastat in DB Connect did not recognize a timeout value of 0 and treated it as "auto"
- Bug fix: The input style in main.css of the day design theme did not define the outline style
- Bug fix: Function ocr_extractcontent in Media API did not verify the temporary file name before deleting it
- Bug fix: Function iptc_writefile in Meta API did not verify that the file exists before call of function iptcembed
- Bug fix: Function rdbms_searchcontent in DB Connect did not sue the same conditions for the count result

Version 10.0.8
Release 01/2023
- Update of the JQuery file upload plugin to version 10.32.0
- Implementation of support for large file uploads using file chunks (split in 10 MB file chunks on the client/browser)
- Implementation of the new function fixintegeroverflow in Main API in order to fix for overflowing signed 32 bit integers
- Implementation of the new function is_uploadfilechunk in Main API in order to verify if a uploaded file is a part of a file (based on HTTP_CONTENT_RANGE)
- Implementation of the new function getuploadfilechunkinfo in Get API in order to return the byte range and file size of uploaded file chunks (based on HTTP_CONTENT_RANGE)
- Implementation of the new function uploadhandler in Main API in order to to support the file upload via different methods
- Modifications in various functions in Main API in order to replace the function move_uploaded_file by function uploadhandler
- Modifications in function uploadfile in Main API in order to save the file collection for the ZIP file in a unique temporary directory based on the MD5 hash of the location and session ID
- Modifications in the service uploadfile in order to support the upload and assembly of file chunks
- Modifications in popup_upload_html in order to support the split and upload of file chunks
- Modifications in function savefile and savelockfile in Main API in order to correct path and file name if a directory has been provided as input
- Modifications in various functions in Media API and Meta API in order to rename the prefix of the temporary directory
- Modifications in popup_action in order to execute the action in the HTML body
- Modifications in popup_action in order to display the load screen before the action has been executed 
- Design modifications in the jqiery-fikleupload.css of all design themes
- Implementation of the new service uploadresume in order to support file information on paused uploads that can be ressumed
- Modifications in popup_upload_html in order to support resumable file uploads
- Implementation of the new main configuration setting $mgmt_config['resume_uploads'] in order to enable resumable file uploads
- Modifications in function rdbms_getdeletedobjects in DB Connect in order to sort result
- Design modifications in homebox template in xmlschema
- Design modifications in all home boxes in order to align the text for mobile devices
- Modifications in function rdbms_getmediastat, rdbms_searchuser, rdbms_searchrecipient in DB Connect in order to exclude objects in the recycle bin
- Modifications in home box recent_objects in order to limit the result of rdbms_searchuser to 20 results
- Modifications in DB Connect in order to correct duplicate error codes
- Modifications in function rdbms_searchcontent in DB Connect in order to remove escaped spaces from the fulltext search in boolean mode
- Modifications in template engine in order to support the template variable %objectname% for the unencoded object name
- Modifications in template engine in order to support the template variable %locationname% for the unencoded location name
- Design modifications in transparent design theme
- Modifications in createtables.sql in DB Connect in order to implement a new attribute "objectpathname" and full-text index "object_objectpathname"
- Modifications in createtables.sql in DB Connect in order to remove the deprecated full-text index "object_fulltext_objectpath"
- Implementation of the new function getobjectpathname in Get API in order to convert the object path to the object path to readable names
- Implementation of the new function update_database_v1008 in Update API in order to update the database and migrate the data for the new "objectpathname" attribute in table "object"
- Modifications in function update_all in Update API in order to add the new function update_database_v1008
- Modifications in function rdbms_searchcontent in DB Connect in order to move from attribute "objectpath" to "objectpathname" for the full-text search
- Modifications in function rdbms_renameobject and rdbms_createobject in DB Connect in order to set the value for the new attribute "objectpathname"
- Modifications in function rdbms_searchcontent in DB Connect in order to evaluate the search for a location before used wildcards
- Modifications in function specialchr_decode in Main API in order to decode the string only if the special character identifier is part of the string
- Implementation of the new function rdbms_setobjectpathname in DB Connect in order to update empty "objectpathname" in table "object"
- Modifications in various functions in Update API in order to remove unused error array initializations and savelog function calls
- Modifications in various functions in DB Connect in order to remove unused error array initializations and savelog function calls
- Modifications in function executeREST in the REST API of the Connector module in order to remove multiple periods in the response message
- Modifications in popup_upload_html in order to implement a drop-down layer for the upload options
- Modifications in popup_upload_html in order to always display the upload option for the single file upload
- Modifications in popup_upload_html in order to set new timeouts for uploaded or cancelled items
- Design modifications in popup_upload_html
- Design modification in the standard design theme
- Implementation of the new function getboolean in Main API
- Modifications in various RESTful API function in order to apply the new function getboolean
- Modifications in function link_db_read in Link API in order to correct error log messages
- Implementation of the new JS function hcms_copyToClipboard in main.js in order to copy a text to the clipboard of the OS
- Modifications in explorer_preview and page_info in order to implement the copy of the link texts to the clipboard of the OS
- Modifications in home box recent_uploadlinks in order to implement the copy of the link texts to the clipboard of the OS
- Modifications in control_user_menu in order to reset the group and publication filter if a text based search will be executed
- Design modifications in control_objectlist_menu
- Removed CSS class hcmsWorkplaceControlWallpaper in all design themes
- Renamed CSS class hcmsWorkplaceControlWallpaper to hcmsWorkplaceControl in all controls
- Modifications in service serverload in order to initialize variables before the 
- Implementation of a new local JS function in user_sendlink that overrides the default autocomplete filter function to search only from the beginning of the string
- Modifications in function createuser in Main API in order to trim the user name before any verifications
- Modifications in service sendmail in order to replace underline for the automated extraction of the real name form the e-mail address of a new user account
- Modifications in service sendmail in order to trim the e-mail address of the new user account
- Modifications in frameset_template_edit in order to assign the CSS class hcmsWorkplaceControl to the body tag and fix the background color
- Design modifications in CSS class hcmsTabPassive of the colorful design theme
- Modifications in template engine in order to load the control if an error occurred in the rendering of a page or component
- Modifications in various update function in the Update API in order to create log entries in the update log
- Updates in the Administrator, Connector, Developers, Import/Export, Installation, Personalization, Plugin, Report, Template Designers, Users, and Workflow Guide
- Bug fix: explorer_objectlist, message_objectlist, queue_objectlist, search_obejctlist, and user_objectlist used continuing index numbers for each object/row which caused an error with the JS table sort on from the 2nd page (only if paging is used)
- Bug fix: log_list used continuing index numbers for each log entry which caused an error with the JS table sort on from the 2nd page (only if paging is used)
- Bug fix: control_queue_menu did not activate the delete button if multiple queue objects have been selected
- Bug fix: Plugin logviewer used continuing index numbers for each log entry which caused an error with the JS table sort on from the 2nd page (only if paging is used)
- Bug fix: user_sendlink did not display the e-mail addresses of recipients that have not user account if the message is in the queue and has not been sent 
- Bug fix: Function getobjectcontainer in Get API used wrong input parameter name for the verification of the location
- Bug fix: Function GCanalyzeimage in the Cloud Connector module mismatches the image size for the image option and the input parameter for function createmedia
- Bug fix: The REST function upload did set the value of parameter checkduplicates to true and therefor ignored the input value for parmeter checkduplicates
- Bug fix: user_sendlink did not accept new e-mail addresses if they have been a substring of an already existing e-mail address
- Bug fix: Function getobjectlist in Get API did not support the value "folder" for the format search
- Bug fix: Function getobjectlist in Get API did not verify the provided publication and location with the users folder access permission and always used the users folder access permission
- Bug fix: Function getobjectpathlevel in Get API did not return the correct level if the folder object in the location has been missing
- Bug fix: Function rdbms_searchcontent in DB Connect did not use the correct folder path level if objects of the same folder path level have been requested

Version 10.1.0 (former Development Version 10.0.9)
Release 03/2023
- Implementation and support of the new LinkRUI plugin for Adobe and MS Office (REST API)
- Modifications in function getobjectlist in Get API in order to clean the filter values for the format search
- Modifications in function getobjectlist in Get API in order to exclude the folders a user has access to if the search format does not request folders
- Modifications in function getobjectlist in Get API in order to remove duplicates in the users publications and sort the publications
- Modifications in function userlogin in Security API in order to remove duplicates in the users publications and sort the publications
- Modifications in function rdbms_searchcontent in DB Connect in order to count the total number of objects of the search results only if a result is available
- Modifications in home box recent_uploadlinks in order to set the day design theme for the copy icons
- Modifications in home box recent_uploadlinks in order to remove the CSS class hcmsHeadlineTiny from the links
- Modifications in task_list of the Task Management module in order to strip HTML tags from the task name and description
- Modifications in function rdbms_createtask and rdbms_settask in DB Connect in order to strip HTML tags from the string values
- Modifications in function rdbms_createproject and rdbms_setproject in DB Connect in order to strip HTML tags from the string values
- Modifications in function rdbms_gettask in DB Connect in order to strip HTML tags from the string values
- Modifications in function rdbms_getproject in DB Connect in order to strip HTML tags from the string values
- Modifications in function getbrowserinfo in Get API in order to verify that the result array element exists
- Modifications in popup_upload_html in order to shorten the location text on mobile devices (Mobile Edition)
- Update of the TCPDF library to version 6.6.2
- Modifications in function rdbms_searchcontent in DB Connect in order to return an empty array instead of false in case nothing was found (due to the HTTP 500 code that will be returned by the REST API in case nothing was found)
- Modifications in explorer in order to remove the backslash from the user options
- Modifications in function readhistory in Search API in order to remove the backslash from the search expression history
- Modifications in template engine in order to remove the backslash from the list options
- Modifications in page_multiedit in order to remove the backslash from the LDAP attributes
- Modifications in function editpublication in Main API in order to remove the backslash from the user options
- Modifications in explorer in order to use the media width and height provided by function getmetadata_container
- Modifications in function link_db_read in Link API in order to suppress an error log entry in case the link index file is still empty (ignore first record in link index)
- Design modifications in popup_upload_html
- Design modifications in control_objectlist_menu in the Mobile Edition in order to shorten long location names in the control bar and support scrolling by touch
- Design modifications in control_objectlist_menu in the Mobile Edition in order to display the location or the selected objects
- Design modifications in control_objectlist_menu in the Mobile Edition in order to shorten the location and object name if an older Safari browser (version 7 and older) is used due to display issues
- Modifications in the CSS class hcmsHomeBox in the transparent design theme in order to support the iPhone 7 and older versions (using Safari version 12 or and older) in the Mobile Edition due to issues with transparency used in the transparent design theme
- Modifications in frameset_mobile in order to support to support the iPhone 7 and older versions (using Safari version 12 or and older)
- Dropped full support for the iPhone 7 and older versions (using Safari version 12 or and older) due to issues with the detection of the touch event in some part of the user interface of the Mobile Edition
- Modifications in frameset_site_edit in order to assign the CSS class hcmsWorkplaceControl to the body tag and fix the background color
- Implementation of a new CSS class hcmsTableFlip and hcmsTableNoFlip in main.css of all design themes in order to transform tables based on the screen width
- Design modifications in site_edit_form in order to apply the new CSS class hcmsTableFlip for improved support of mobile devices
- Modifications in instance_create of the Connector module in order to apply the new CSS class hcmsTableFlip for improved support of mobile devices
- Modifications in explorer_objectlist, log_list, message_objectlist, queue_objectlist, search_objectlist, and user_objectlist in order to initialize and correct the objects counter (used > instead of >=)
- Modifications in the log viewer Plugin in order to initialize and correct the objects counter (used > instead of >=)
- Modifications in function manipulateobject in Main API in order to use the converted locations for the log entry of moved objects
- Implementation of automated user notifications when the same object/container is edited by different users at the same time
- Implementation of the new function setcontentupdate in Set API in order to save update information of a content container
- Modifications in function settext in Set API in order to verify if a text has been changed and save a temporary file for the update notification
- Modifications in function setmedia in Set API in order to verify if a text has been changed and save a temporary file for the update notification
- Modifications in function setpagelink in Set API in order to verify if a text has been changed and save a temporary file for the update notification
- Modifications in function setcomplink in Set API in order to verify if a text has been changed and save a temporary file for the update notification
- Implementation of the new local JS function checkUpdatedContent in the template engine in order to check for updated content
- Modifications in the template engine in order to implement the check for modified content (every 3 seconds) for the form and inline editing view
- Implementation of the new service checkupdatedcontent in order to provide information if the requested content has been modified by another user
- Modifications in text_edit_checkbox, test_edit_date, text_edit_list, text_edit_keywords, test_edit_unformat, and text_edit_format in order to implement the check for modified content (every 3 seconds)
- Modifications in link_edit_page, media_edit_page, component_edit_page_single and component_edit_page_multi in order to implement the check for modified content (every 3 seconds)
- Implementation of a new text for the notification regarding the modified content in all language files
- Implementation of the new function getcontentcontainerid in Get API in order to extract the container ID from the container name
- Modifications in function getmediacontainerid in Get API in order to verify that the container ID is an integer value greater than zero
- Modifications in various function in Main API in order to replace the existing code by the new function getcontentcontainerid
- Modifications in various function in Media API in order to replace the existing code by the new function getcontentcontainerid
- Modifications in various function in Get API in order to replace the existing code by the new function getcontentcontainerid
- Modifications in various function in Link API in order to replace the existing code by the new function getcontentcontainerid
- Modifications in the template engine in order to replace the existing code by the new function getcontentcontainerid
- Modifications in text_edit_checkbox and text_edit_date in order to remove the input parameter contentbot and read the content
- Modifications in link_edit_page in order to remove the input parameters linkhref, lintext, and linktarget and read the content
- Modifications in link_edit_page in order to remove deprecated and duplicate correction of the linkhref parameter
- Modifications in frameset_edit_link in order to remove the parameters linkhref, linktext, and linktarget and read the content
- Modifications in media_edit_page in order to remove the parameters mediafile, mediaobject, mediaalttext, mediaalign, mediawidth, mediaheight and read the content
- Modifications in frameset_edit_media in order to remove the parameters mediafile, mediaobject, mediaalttext, mediaalign, mediawidth, mediaheight and read the content
- Modifications in component_edit_page_single and component_edit_page_multi in order to remove the parameters mediafile, mediaobject, mediaalttext, mediaalign, mediawidth, mediaheight and read the content
- Modifications in frameset_edit_component in order to remove the parameters mediafile, mediaobject, mediaalttext, mediaalign, mediawidth, mediaheight and read the content
- Modifications in the template engine in order to remove the contentbot parameter from the edit link for the text-based checkbox and date
- Modifications in the template engine in order to remove the parameters linkhref, linktarget, and linktext parameters from the edit link of link
- Modifications in the template engine in order to remove the parameters mediafile, mediaobject, mediaalttext, mediaalign, mediawidth, mediaheight from the edit link of media
- Modifications in the template engine in order to remove the parameters component and condition from the edit link of components
- Modifications in frameset_edit_component and media_edit_page in order to remove the deprecated parameter mediadir
- Modifications in media_edit_page in order to load the display of the media file in the main layer of frameset_edit_media
- Modifications in daily job in order to optimize the code
- Modifications in function rdbms_searchcontent in DB Connect in order to trim where clause strings
- Added the mime-type for WebP image file and alternative mime-type for DWG files to format_mime.inc.php
- Modifications in template engine in order to escape special characters when content is read using db_connect or from the content container
- Modifications in page_multiedit in order to remove the $object% and %objectname% default values provided by the template (the object names would be different but the user should be able to edit them)
- Modifications in page_multiedit in order to enable the image rendering without any additional modifications except the image format
- Modifications in page_multiedit in order to move the multiobject input form field to the reload form
- Modifications in page_multiedit in order to verify if an objects exists in the selected collection that is not animage, audio or video file
- Modifications in service rendervideo in order to return the object path in the response
- Added WebP as supported target format for image editing in the main configuration file in the install directory
- Modifications in queue_objectlist in order to add the queue ID to the input parameters for user_sendlink when opening a message from the queue
- Modifications in control_queue_menu in order to add the queue ID to the input parameters for user_sendlink when opening a message from the queue
- Modifications in user_sendlink in order to support the queue ID
- Modifications in service sendmail in order to support the queue ID as input parameter and remove the queue entry if an existing mail message is saved (delete old queue entry and create new one)
- Modifications in service sendmail in order to reload the queue objectlist if a message has been created or saved
- Modifications in function createfolder, createobject, uploadfile in Main API in order to replace the tilde symbol by a dash since the tilde is used as marker for converted special characters
- Modifications in function uploadfile in Main API in order to enhance the log entry messages
- Modifications in main configuration file in the install directory in order to use "dcraw" as standard value for $mgmt_imagepreview['rawimage']
- Modifications in the installation routine in order to check the tables of the database and not the number of objects in table object due to issues with MariaDB on Debian 12
- Modifications in DB Connect constructor in order to set the sql_mode to TRADITIONAL due to issues with MariaDB on Debian 12
- Modifications in various functions in DB Connect in order to apply IGNORE to some INSERT and UPDATE SQL statements
- Modifications in service rendervideo in order to initialize the variable createmedia for the local function startConversion
- Modifications in createtables.sql in order to apply the CURRENT_TIMESTAMP to the date of table dailystat
- Modifications in control_objectlist_menu in order to use the full length of the MD% hash for the id of the upload window
- Modifications in popup_upload_html in order to maximize the upload window if metadata input is required by the publication settings
- Modifications in crontab in the installation directory in order to remove free space from command
- Modifications in function uploadhandler in Main API in order to set the value for variable append_file for the PUT request file upload
- Modifications in various function in the event system in order to verify the publication name before executing the event code
- Update of the update log in the installation directory
- Modifications in all jobs in order to verify that the main configuration file exists
- Implementation of the new function update_database_v1009 in Update API
- Modifications in function update_all in Update API in order to add the new function update_database_v1009
- Implementation of a loading screen for the edit window in popup_upload_html
- Modifications in createtables.sql in order to remove the character set and collation definition from column hash in table accesslink
- Modifications in various function in the Update API in order to create update log entry before the update process starts and avoid multiple update processes started by different users
- Modifications in the simple statistics Plugin in order to format the hits numbers
- Added the calendar file extensions (.ical, .ics, .ifb, .icalendar) as cleartxt format to format_ext.inc.php 
- Added the new calendar icon to all design themes
- Modifications in function getfilenfo in order to support calendar file formats
- Modifications in function getobjectlist in Get API in order to support the locked object (checked-out object) information in the result
- Modifications in function uploadfile in Main API in order to verify if an object is locked by another user for exclusive editing and provide an error in this case in the result
- Modifications in function uploadfile in Main API in order to strip HTML tags from all result messages
- Removed the alert popup in the temlpate engine if an object has been locked by another user (checked-out object)
- Modifications in popup_upload_html in order to separate the message from the command/objects in the provided AJAX response
- Modifications in JS function hcms_drag and hcms_allowDrop in contextmenu.js in order to identify objects dragged inside the browser and dragged from outside the browser into the browser window
- Modifications in function manipulateallobjects in Main API in order to verify the size of the clipboard_rootpathdelete array
- Modifications in function manipulateallobjects in Main API in order to implement a unique process ID
- Modifications in function manipulateallobjects in Main API in order to implement session keys based on the process ID
- Modifications in function manipulateallobjects in Main API in order to return the process ID in the result instead of the temporary file name
- Modifications in popup_status in order to change from temporary file name to process ID
- Modifications in the description of the installation routine
- Modifications in function manipulateallobjects in Main API in order to add the user name to some error log entries
- Modifications in function processobjects in Main API in order to decode the JSON response and verify the result for the return value
- Modifications in function processobjects in Main API in order to implement an error log in case there have been errors or the mail service did not send a response
- Modifications in minutely job in order to restart a failed process in 10 minutes
- Implementation of the new main configuration parameter $mgmt_config['localhost'] in the main configuration file in the installation directory that defines the protocol and host name be used for local requests
- Modifications in function processobjects in Main API in order to apply the new main configuration parameter $mgmt_config['localhost'] for the request to the local host
- Modifications in the template engine in order to apply the new main configuration parameter $mgmt_config['localhost'] for the request to the local host
- Modifications in function downloadobject in Main API in order to apply the new main configuration parameter $mgmt_config['localhost'] for the request to the local host
- Added Alphacam (.aed) file extension as CAD format to format_ext.inc.php 
- Added Adobe After Effects project file extension (.aep, .aepx) as image format to format_ext.inc.php 
- Modifications in function objectfilter in UI API in order to add rawimage, vectorimage, and CAD file extensions to the images search category
- Modifications in local JS function checkMediaType in the template engine in order to add vectorimage file extensions to images filter category
- Modifications in local JS function checkType in the text_media_select in order to add vectorimage file extensions to images filter category
- Modifications in local JS function checkType in the media_edit_page in order to add vectorimage file extensions to images filter category
- Modifications in media_edit_explorer in order to add rawimage, vectorimage, and CAD file extensions to the images search category
- Modifications in function getfiletype in Get API in order to add vectorimage and CAD file extensions to the image category
- Modifications in function getfiletype in Get API in order to add font file extensions to the document category
- Modifications in function createobjectaccesslink, createwrapperlink, and createdownloadlink in Main API in order to enhance error log entry information
- Modifications in Portal XML schema in order to support the new hover color parameter
- Modifications in function editportal in Main API in order to support the new hover color parameter and set the color in the portal template and main.css
- Modifications in function editportal in Main API in order to update the existing portal templates to the Portal XML Schema version 10.1.0
- Modifications in main.css of the day and night design themes in order to support the hover color setting of portal design themes
- Modifications in function userlogin and registeruser in Security API in order to support the new hover color parameter
- Modifications in session.inc.php in order to support the hover color setting of portal design themes
- Modifications in function invertcolorCSS in UI API in order to support the new hover color parameter
- Modifications in function showhelpbutton in UI API in order to support the new hover color parameter by a new optional input parameter for CSS class names
- Modifications in all controls in order to implement the new CSS classes to support the new hover color parameter
- Modifications in frameset_main and frameset_mobile in order to implement the new CSS classes to support the hover color parameter
- Modifications in function manipulateobject in Main API in order to create an error log entry in case the object does not exist
- Modifications in chat in order to implement the new CSS classes to support the new hover color parameter
- Modifications in explorer_objectview in order to implement the new CSS classes and the new hover color parameter
- Modifications in Task Management module in order to implement the new CSS classes the new hover color parameter
- Modifications in function createObject and editObject in the Workplace Integration in order to verify the general result and not the HTTP header provided by function uploadfile
- Modifications in various functions in the Workplace Integration in order to set the publicatio nname as global for function savelog (whenever a publication log is required)
- Modifications in function createObject in the Workplace Integration in order to replace function uploadfile by createmediaobject for improved performance
- Modifications in function editObject in the Workplace Integration in order to remove the temporary file and directory
- Modifications in protected function _removeTempFile in the Workplace Integration in order to verify that the temp directory exists before removing it
- Modifications in function uploadhandler in Main API in order to support the new input parameter webdav_support that forces to treat PUT request by WebDAV the same as POST and GET requests
- Modifications in function ocr_extractcontent in Media API in order to support the new input parameter for the user
- Modifications in function ocr_extractcontent in Media API in order to implement preparemediafile and verify the media file
- Modifications in function indexcontent in Media API in order to support the new input parameter of function ocr_extractcontent
- Modifications in function createmediaobject in Main API in order to create a queue entry for indexcontent if the createmedia_in_background parameter is enabled
- Modifications in function uploadfile in Main API in order to create a queue entry for indexcontent if the createmedia_in_background parameter is enabled
- Modifications in explorer, page_info_ip, and the template engine in order to implement a callback function in the URI for maps.googleapis.com
- Modifications in function createmedia in Media API in order to verify the sharpness value for videos provided by $mgmt_mediaoptions
- Modifications in page_info_ip in order to verify if a key for the Google Maps API has been provided in the main configuration
- Modifications in the Report Management API in order to verify if a key for the Google Maps API has been provided in the main configuration
- Modifications in the installation routine and the main configuration file in order to implement and support the Google Maps API key
- Modifications in function createmedia in Media API in order to enhance error log entries
- Modifications in service uploadfile in order to clear all headers provided by the UploadHandler after the file has been fully uploaded
- Modifications in popup_upload_html in order to support the response provided in the XMLHttpRequest object jqXHR
- Updates in the Connector Guide and Template Designers Guide
- Updates of the version in all Guides
- Bug fix: Home box recent_downloads, recent_uploadlinks, and recent_uploads reversed the result array and failed to display the most recent objects
- Bug fix: Function getsearchhistory in Get API did not clean the backslash in the search expression which can cause the escape of the character after the backslash
- Bug fix: The callback JS function returnMedia used by the asset browser used wrong variable names for the media width and height
- Bug fix: control_objectlist_menu caused the toolbar icons to be hidden outside the viewport if the location name did not fit in the viewport of the Mobile Edition
- Bug fix: explorer_objectlist displayed an object count of 1 for an empty folder
- Bug fix: explorer_objectlist, log_list, message_objectlist, queue_objectlist, search_objectlist, and user_objectlist displayed the wrong number of objects if the count was 1
- Bug fix: The log viewer Plugin displayed the wrong number of objects if the count was 1
- Bug fix: user_objectlist did not subtract hidden user accounts correctly if paging has been used
- Bug fix: component_edit_explorer used deprecated file name for the reference to the jQuery UI CSS file
- Bug fix: text_media_explorer used deprecated file name for the reference to the jQuery UI CSS file
- Bug fix: Function rdbms_searchcontent in DB Connect added the search in object names without verifying that the where clause was not empty for the combined search in content and object names
- Bug fix: The mime-type for WebP images has been missing in format_mime.inc.php and caused WebP images saved by the image editor to lose the file extension
- Bug fix: page_multiedit used wrong parameter for the objects and was not able to rename the objects after the media conversion
- Bug fix: page_multiedit did not provide the updated multiobject input field in the reload form
- Bug fix: Added users to crontab file in the installation directory
- Bug fix: The simple statistics Plugin did not convert the kB to MB and displayed the wrong file size
- Bug fix: contextmenu.js did treat dragged thumbnail images of existing objects and folders as new uploads
- Bug fix: The publication log entries have not been created if WebDAV has been used
- Bug fix: Upload errors of files larger than 10 MB (resumable uploads) have not been displayed in the upload bar in popup_upload_html
- Bug fix: Service uploadfile did not remove HTTP headers from the UploadHandler

Version 10.1.1
Release 05/2023
- Design modifications in all design themes in order to change the design of the hover state of a link 
- Design modifications in all design theme in order to apply styles to all link states except the hover state
- Design modifications in Black design themes in order to add a border radius to all buttons and input elements
- Modifications in popup_upload_html in order to implement the new local JS function getResponseAndBuildFileMessage
- Design modifications in all home boxes in order to display object links as a standard link
- Implementation of the support of long file names that need to be shortened (file names that consists of mainly special characters)
- Modifications in the Workplace Integration API in order to implement and support the global variable is_webdav that can be used to create special log entries by the function in the Main API
- Modifications in function createfilename, createobject, createmediaobject, renameobject, deleteobject, createfolder, renamefolder, deletefolder, uploadfile, uploadhandler, downloadfile, createdownloadlink, createobjectaccesslink, and manipulateallobjects in Main API in order to support the new global variable is_webdav
- Modifications in function renamegroupfolder, deletegroupfolder, renameworkflowfolder, and deleteworkflowfolder in Main API in order to implement error log entries
- Modifications in function manipulateobject in Main API in order to remove log entries associated to function renamegroupfolder and renameworkflowfolder since the log entries will be provided by these functions
- Modifications in the Workplace Integration API in order to implement the support of the provided original file name and use this name for 8 hours in case a file name has been truncated, due to issues with the WebDAV client and truncated file names
- Modifications in the Workplace Integration API in order to implement the support of the provided original folder name and use this name for 8 hours in case a folder name has been truncated, due to issues with the WebDAV client and truncated folder names
- Implementation of the new main configuration setting $mgmt_config['webdav_lock'] in order to enable and disable the file locking
- Modifications in the Workplace Integration module in order to support the new main configuration setting $mgmt_config['webdav_lock']
- Modifications in function createobject, createfolder, renamefolder, and manipulateobject in Main API in order to support the originla provided object or folder name for WebDAV support (in case the name will be truncated)
- Implementation of the recycle bin in the Workplace Integration API
- Modifications in public function deleteFolder and deleteObject in the Workplace Integration API in order to support the recycle bin
- Modifications in the public function getRealFolderName and getRealFileName in the Workplace Integration API in order to use function loadfile_fast instead of loadfile on the asset objects
- Modifications in explorer_objectlist and search_objectlist in order to use function loadfile_fast instead of loadfile
- Modifications in function savelog in Main API in order to replace function calls appendfile and savefile by file_put_contents using file locking
- Modifications in function createfilename in Main API in order to support a new input parameter for enabling and disabling the shortening of the file name
- Modifications in all functions that use function createfilename in the Main API in order to support the new input parameter
- Modifications in all functions that use function createfilename in the Meta API in order to support the new input parameter
- Modifications in function GCanalyzeimage in the Cloud Connector module in order to set $mgmt_imageoptions as global
- Modifications in the Event System file in order to add the missing searchsites parameter that enables the search index for specific websites
- Modifications in control_objectlist_menu in order to hide the search button if an access link has been used
- Modifications in frameset_main in order to hide the home button if an access link has been used
- Modifications in explorer in order to hide the home button in the Mobile Edition if an access link has been used
- Modifications in function createfilename in Main API in order to replace PHP function strlen by mb_strlen
- Modifications in userlogin in order to set the focus after the wallpaper
- Modifications in function rdbms_createqueueentry in DB Connect in order to find duplicate command son the same object and avoid new queue entries for the same command and object
- Modifications in function loadfile and loadlockfile in Main API in order to verify that the file is not a directory
- Modifications in function createobject in Main API in order to use a numeration suffix for object names if WebDAV is used and the file name exists already (due to shortened file names)
- Modifications in function manipulateobject in Main API in order to use a numeration suffix for object names if WebDAV is used and the file name exists already (due to shortened file names)
- Modifications in function killesssion in Security API in order to change an error code
- Modifications in function loadfile and loadlockfile in Main API in order to use the original file name in the error log entry
- Modifications in function correctfile in Main API in order to exclude e-mail addresses used in objectlistcols.json file names from beeing treated by function createfilename
- Modifications in function userlogin in Security API in order to replace function loadfile by loadfile_fast for loading the users objectlist columns definition file (objectlistcols.json)
- Implementation of the new function is_longfilename in Main API
- Modifications in function uploadfile in Main API in order to implement function is_longfilename for the verification of existing files with the same name
- Modifications in function createobject in Main API in order to implement function is_longfilename for the verification of existing files with the same name
- Modifications in function specialchr_encode in Main API in order to change the sequence of the special characters that need to be removed
- Modifications in function copyfolders in Main API in order to replace function is_dir by is_idir
- Modifications in function createobject in Main API in order to implement function avoidfilecollision due to issues with same shortened file names that are created at the same time without existing in the file system
- Modifications in function createdownloadlink, createaccesslink, createobjectaccesslink, createwrapperlink, downloadobject, deletefolder, renamefolder, unpublishobject, and notifyusers in order to remove the check for special characters before calling function createfilename
- Modifications in function rollbackversion in Main API in order to remove the check for a locked file name before calling function createfilename
- Modifications in various function in Main API in order to set the default value for the max file name length to 200 instead of 236 characters due to issues with the length of media version files
- Modifications in popup_upload_html in order to remove the unused max file name length setting since the system API will take care of longer file names
- Modifications in function valid_locationname in Security API in order to set the default value for the max file name length to 200 instead of 236 characters due to issues with the length of media version files
- Modifications in the main configuration setting $mgmt_config['max_digits_filename'] in the installation directory in order to set the default value for the max file name length to 200 instead of 236 characters
- Modifications in the Workplace Integration in order to support the original files names for the virtual access and download link files
- Modifications in the Workplace Integration in order to support longer path names by shortening the folder and file names
- Implementation of the new main configuration parameter $mgmt_config['max_digits_location'] in the installation directory
- Modifications in function valid_locationname in Security API in order to support the new main configuration parameter $mgmt_config['max_digits_location']
- Modifications in function valid_locationname in Security API in order to use multibyte string length function mb_strlen
- Modifications in function createobject and createfolder in order to report and log errors if the object path is too long
- Removed unused class in hyperCMS/SiteList from the Workplace Integration module
- Removed unused class in hyperCMS/ComponentList from the Workplace Integration module
- Modification in the in the Workplace Integration in order to improve the performance by reducing the call to function getRealFileName (reading the object file and extraction parameters from it)
- Modifications in function get, getContentType, getFileContents, getSize, getLastModified of class Sabre_hyperCMS_File in the Workplace Integration in order to support the new parameter for the media file path and replace the call to function getRealFileName
- Modifications in various functions of class Sabre_hyperCMS_Functions in the Workplace Integration in order to support the new parameter for the media file path of class Sabre_hyperCMS_File and to remove unused parameters
- Modifications in function getChildsForLocation of class Sabre_hyperCMS_Functions in the Workplace Integration in order to support the new parameter for the type (all, folder, or object)
- Modifications in function _addChildsFromDir of class Sabre_hyperCMS_Virtual_PublicationFolder in the Workplace Integration in order to support the new parameter of function getChildsForLocation
- Modifications in function _beforeGet of class Sabre_hyperCMS_Publication in the Workplace Integration in order to support the new parameter of function getChildsForLocation
- Modifications in function _beforeGet of class Sabre_hyperCMS_Folder in the Workplace Integration in order to support the new parameter of function getChildsForLocation
- Excluded/deactivated unused modules CalDAV, CardDAV, DAVACL, and VObject in the Workplace Integration
- Modifications in class Sabre_DAV_Server in the Workplace Integration in order to set DEPTH_INFINITY to 0
- Modifications in class Sabre_hyperCMS_Log in the Workplace Integration in order to support the activation of the indepenent logging of error and info events
- Implementation of the new main configuration parameters $mgmt_config['webdav_error_log'] and $mgmt_config['webdav_info_log'] in the main configuration file of the install directory
- Modifications in the index file in the Workplace Integration in order to support the new main configuration parameters $mgmt_config['webdav_error_log'] and $mgmt_config['webdav_info_log']
- Modifications in function setGlobalsForConfig of class Sabre_hyperCMS_Functions in the Workplace Integration in order to support the Event System
- Modifications in the system in order to make the Event System and its functions not mandatory (missing Event System file will not cause errors)
- Modifications in hypercms root index in order to verify that the Event System function exists
- Modifications in explorer_objectlist in order to verify that the Event System function exists
- Modifications in site_edit_inheritance in order to verify that the Event System function exists
- Modifications in uploadvideo of the Youtube Connector module in order to verify that the Event System function exists
- Modifications in various function in the Main API that include the Event System in order to verify that the Event System function exists 
- Modifications in function importCSVtextcontent in the Meta API in order to verify that the Event System function exists
- Modifications in function importCSVtextcontent in the Meta API in order to implement the onsaveobject_post event
- Modifications in various function in the Security API that include the Event System in order to verify that the Event System function exists 
- Modifications in the template engine that includes the Event System in order to verify that the Event System function exists
- Modifications in service savecontent that includes the Event System in order to verify that the Event System function exists
- Modifications in link_edit_page in order to set a maxlength of 255 characters for linktext
- Modifications in media_edit_page in order to set a maxlength or min/max number for mediaalttext, mediawidth, and mediaheight
- Modifications in the template engine in order to set a maxlength of 255 characters for linktext and mediaalttext, and min/max number for mediawidth and mediaheight
- Implementation of the new main configuration parameter for the media access statistic cache timeout $mgmt_config['mediastatcache_timeout'] in the main configuration file of the install directory
- Modifications in service accessstats in order to support the new main configuration parameter $mgmt_config['mediastatcache_timeout']
- Modifications in page_info_stats in order to support the new main configuration parameter $mgmt_config['mediastatcache_timeout']
- Modifications in template engine and Report API in order to remove async defer when loading the Google Maps API
- Modifications in control_objectlist_menu in order to enable "send to chat" for iOS in the Mobile Edition
- Modifications in control_objectlist_menu in order to enable "send to chat" for the desktop
- Modifications in control_objectlist_menu in order to implement button labels (not activated)
- Implementation of the new CSS classes hcmsButtonFrame, hcmsButtonLabel, hcmsButtonLabelSizewide in all design themes
- Modifications in function getescapedtext in Get API in order to allow HTML line breaks
- Modifications in function showshorttext in UI API in order to trim the text and support the replacement of white spaces by HTML line breaks and the number of lines (max 3)
- Modifications in explorer_objectlist and search_objectlist in order to support the updated function showshorttext
- Modifications in all design themes in order to change the font family order beginning with Arial
- Implementation of a new task management service in the Task Management module in order to provide a service for the task related to a certain object and user
- Implementation of the new task management service in the template engine in order to support the management of the tasks of a user related to his objects
- Modifications in function edittask the Task Management API in order to replace the function strlen by the multibyte version mb_strlen
- Modifications in function edittask the Task Management API in order to verify the *Leave* values when comparing the saved with the new task values
- Modifications in function rdbms_edittask in DB Connect in order to exclude the update of empty start and finish dates
- Modifications in function rdbms_gettask in DB Connect in order to set the default order to the task_id instead of startdate (avoid changes in the task order if the start date has been changed)
- Modifications in Task Management module in order to set the default order to the task_id instead of startdate (avoid changes in the task order if the start date has been changed)
- Implementation of the new JS function hcms_serializeFormData, hcms_showLayer (reduced version of hcms_showFormLayer), hcms_hideLayer (reduced version of hcms_hideFormLayer), and hcms_postFormData in main.js
- Modifications in function showmessage in UI API in order to use the provided ID for the message element with suffix "_text"
- Modifications in Project Management module in order to exclude the sys user from any task
- Implementation of the new function getCSS in Get API in order to collect the CSS class names and properties
- Modifications in function getthemelocation in Get API in order to support the new input parameter for the type of the returned theme location path
- Modifications in function getthemelocation in Get API in order to use the theme defined in the user session with highest priority
- Modifications in function showganttchart in Project Management API in order to support colors for the task bars in the Gantt chart
- Implementation of the new function adjust_brightness in Media API
- Design modifications in Project Management module in order to add a status bar to the status table cell
- Design modifications in Task Management module in order to add a status bar to the status table cell
- Modifications in Task Management module in order to always display finished tasks in the gallery view
- Implementation of the new session variable hcms_temp_taskview in include/session.inc.php in order to save the task view
- Implementation of the new function toggletaskview in UI API
- Modifications in control_objectlist_menu in order to rename the parameter for the service toggleview from view to explorerview
- Modifications in service toggleview in order to support the new taskview parameter
- Renamed function toggleview to toggleexplorerview in UI API
- Modifications in frameset_mobile in order to use the renamed function toggleexplorerview
- Modifications in JS function hcms_ajaxService and hcms_syncajaxService in order to remove the console logging of the response
- Removed jQuery from control_objectlist_menu since JS function hcms_ajaxService replaced the JQuery AJAX request
- Modifications in Task Management module in order to use the service toggleview and restore the selected view while the user session is active
- Modifications in Task Management module in order to open a folders location and display its content (frameset_objectlist) instead of opening the folder
- Modifications in Task Management module in order to open objects in the overlay window or in a new window based on the main configuration setting $mgmt_config['object_newwindow']
- Modifications in Task Management module in order to always display tasks ni the gallery view even if there is no object assigned to the task
- Design modifications in the CSS class hcmsPriorityMedium in the blue, colorful, and day design theme
- Modifications in Task Management module in order to create new tasks (without sending a mail)
- Modifications in Task Management module in order to support the export of all tasks of the selected tab
- Modifications in function update_software in the Update API in order to log additional information
- Modifications in function createdocument in Media API in order to add the filter --infilter=CSV:44,34,76,1 to the libreoffice command
- Modifications in function deletelog in Main API in order to use the log file name in the log entries
- Modifications in service accessstats in order to support the container ID as input parameter
- Modifications in Home Box statistic_of_favourites in order to use the path value for the input parameter of function getfavorites
- Modifications in function rdbms_getmediastat in DB Connect in order to use an identifier for the container ID or the objectpath for the cache file name (avoid the cache being invalid in case the object path has changed)
- Modifications in function rdbms_getmediastat in DB Connect in order separate the values by a delimiter for the cache file name (to ensure unique cache file name) 
- Modifications in function rdbms_getmediastat in DB Connect in order to use the permanent cache if the date range start with the 1st day of a month and ends before today
- Modifications in Project Management module in order to support dependencies of tasks
- Modifications in createtables.sql in order to add the new column dependency in table task
- Implementation of the new function update_database_v1011 in the Update API
- Modifications in function updates_all in the Update API in order to integrate function update_database_v1011
- Modifications in function rdbms_createtask, rdbms_settask, and rdbms_gettask in DB Connect in order to support task dependencies
- Modifications in function createtask, rdbms_settask, and rdbms_gettask in Task Management API in order to support task dependencies
- Modifications in function createtask in Task Management API in order to move the planned input parameter before the project ID parameter
- Modifications in Project Management module in order to to apply the changes for the input parameters of function createtask
- Modifications in Project Management module in order to open objects in the overlay window or in a new window based on the main configuration setting $mgmt_config['object_newwindow']
- Modifications in SOAP API of the Connector module in order to apply the changes for the input parameters of function createtask
- Modifications in SOAP API WSDL of the Connector module in order to support task dependencies for the operations "task_create" and "task_edit"
- Modifications in DB Connect in order to set the SQL mode manually for class hcms_db due to issues with zero dates (require sql_mode="")
- Modifications in Project Management API ni order to display the project, subproject and task IDs
- Implementation of the new functions insertuploadlog, updateuploadlog, and loaduploadlog in Main API in order to track the upload of files for a sepcific location/folder
- Modifications in function uploadfile in Main API in order to disable the process file for uploads and write a new temporary log file for the tracking of the current uploads of a user to a specific location/folder by using the function updateuploadlog
- Modifications in popup_upload_html and service uploadfile in order to implement the new parameter totalcount
- Modifications in uploadfile in order to use function insertuploadlog for the tracking of the current uploads of a user to a specific location/folder
- Modifications in page_info in order to display that an upload is in progress for the folder
- Modifications in function edituser in Main API in order to ignore the *Leave* value for the language session setting
- Modifications in function loadfile_header, loadfile_fast, loadfile, loadlockfile, savefile, savelockfile, appendfile, lockfile, and unlockfile in Main API in order to verify that the file name is not empty and the file exists after correcting the file name
- Modifications in function appendfile in Main API in order to support saving a file if it does not exist based on a new input parameter
- Modifications in function deletefile in Main API in order to remove 2 duplicate log events for the recursive function call
- Modifications in public function getChildsForLocation in class Sabre_hyperCMS_Functions of the Workplace Integration module in order to display duplicate folder names by renaming the folder since the WebDAV client does not support the same folder name on the same location (only if users folder access permissions are used)
- Modifications in function userlogin in Security API in order to verify an existing page access array using function isset instead of empty and verify that a page root path has been defined
- Modifications in function reimportmediafiles, importmediafiles, importxmlfiles, and exportxmlfiles in the Import/Export API of the Connector module in order to suspend and revoke the session for non-blocking procedure
- Modifications in export_forma nd import_form in the Import/Export API of the Connector module in order to open the status in a popup window
- Modifications in function reimportmediafiles, importmediafiles, importxmlfiles, and exportxmlfiles in the Import/Export API of the Connector module in order to use function showtobbar for the report title
- Modifications in the import and export index files in order to implement the CSS for the top bar
- Modifications in the import and export index files in order to implement the measurement of the import and export duration and display the time ate the end of the process
- Design modifications in the Import/Export Connector module
- Modifications in explorer in order to add Container ID to the search bar title of Object ID / Link ID
- Modifications in service sendmail in order to correct the service name in the error log entries
- Modifications in function rdbms_getobject_id and rdbms_getobject_hash in DB Connect in order to verify that the object name is .folder before trying to create the root folder object if it is missing
- Modifications in function rdbms_getobject_id and rdbms_getobject_hash in DB Connect in order to implement new log entries if the root folder object needs to be recreated
- Implementation of a display name for publications that can be modified and may include special characters
- Modifications in function editpublication in Main API in order to support the new display name besides the publication name
- Modifications in function editpublication in Main API in order to verify that the same publication or display name is not already in use by another publication
- Modifications in function deletepublication in Main API in order to support the new display name besides the publication name
- Modifications in function userlogin in Security API in order to support the new display name besides the unique publication name in the siteaccess parameter
- Modifications in all system components that use the siteaccess in order to support the new publication name as key and the display name as value of siteaccess array
- Modifications in the Workplace Integration module in order to support the new display name besides the publication name
- Modifications in Task Management module in order to keep tasks with references to non-existing objects
- Modifications in function getobjectlist in Get API in order to support the new input parameter for the return of a readable/decoded objectpath instead of the encoded objectpath
- Modifications in function getobjectlist in Get API in order to verify that the object hash returned by function rdbms_getobject_hash is valid
- Modifications in function rdbms_getobject_id and rdbms_getobject_hash in DB Connect in order to support a new input parameter to recreate missing root folder objects
- Modifications in function executeREST in the REST API of the Connector module in order to support the new input parameter for the return of a readable/decoded objectpath
- Modifications in function executeREST in the REST API of the Connector module in order to support request with a readable publication/display name in the objectpath, location, or publication
- Modifications in function getfileinfo in Get API in order to add the support of the new Excel (.xlx .xlam), Adobe Photoshop template (.psdt), Adobe Illustrator template (.ait), Adobe Indesign snippet (.idml) and Adobe InCopy (.icml) file extension
- Modifications in format_ext in order to add the the MS Excel (.xlx, .xlam), MS Powerpoint template (.thmx), Adobe Photoshop template (.psdt, .xmp), Adobe Illustrator template (.ait), Adobe Indesign snippet (.idml) and Adobe InCopy (.icml) file extensions
- Modifications in format_ext in order to add the file extensions .mhtml and .mht to the cleartxt category
- Modifications in format_ext in order to add the file extensions .xlsb, .xlsm, .thmx, .plist, .nib, and .prn to the bintxt category
- Modifications in format_ext in order to add the file extensions .icns and .xmp to the image category
- Modifications in format_ext in order to add the file extensions .prproj to the video category
- Implementation of the new function update_database_v1012 in the update API in order to update the unknown filetype
- Modifications in function updates_all in the Update API in order to integrate function update_database_v1012
- Modifications in function getobjectlist in Get API in order to separate the search expression for the content and the file name search in the objectpath due to performance issues since the search index will not be used if both search expressions are present in the same query
- Modifications in function rdbms_searchcontent in DB Connect in order to remove the search for an expression in the content and objectpath in the same query due to performance issues (fulltext search index will not be used)
- Modifications in the standard Event System file in the install directory in order to implement new configuration settings for the search API for websites
- Modifications in popup_status in order to disable/remove the reload of the object list after publishing or unpublishing objects
- Modifications in the search API for websites in the install directory in order to support new configuration settings for the result design and the max length of the extract
- Modifications in the search API for websites in the install directory in order to verify the configuration parameters and define default values as fallback
- Modifications in function manipulateobject in Main API in order to convert and deconvert the location before the basic input verification since the converted location is part of the result
- Modifications in function getobjectlist in Get API in order to verify that the REST API has been enabled for the publication when the publication root folders are requested
- Modifications in function createaccesslink, createobjectaccesslink, createwrapperlink, and createdownloadlink in Main API in order to apply function correctpath to the location input parameter
- Modifications in various functions in Main API in order to optimize the code
- Implementation of new text records for dependencies in all language files
- Design modifications in template_edit
- Updates in the Hebrew and Thai language file
- Update of the update log in the installation directory
- Updates in the Administrator, Connector, Installation and User Guide
- Bug fix: The Workplace Integration returned the truncated file name which caused issues since the WebDAV client expected the provided file name and was not able to save the content in the new file
- Bug fix: The Workplace Integration returned the truncated folder name which caused issues since the WebDAV client expected the provided folder name and was not able to set the new folder name
- Bug fix: The public function isLoggedInHyperdav in the Workplace Integration API used a wrong name for the main configuration
- Bug fix: Function renameobject in Main API applied changed on the provided file name. The file name modifications should only be performed by function manipulateobject in Main API.
- Bug fix: The accidental use of function savelog in function createfilename (for testing purposes) in the Main API can cause a killer loop since function savelog uses function appendfile and savefile which both again use function createfilename
- Bug fix: Existing file names that exceeded the max length have been corrected by function createfilename and therefore could not be accessed
- Bug fix: Function GCanalyzeimage in the Cloud Connector module did not set the provided image options settings as global, therefore function createmedia failed to create the requested image for the Cloud service
- Bug fix: The standard Event System file did not specify the MyHomepage publication in the searchsites parameter
- Bug fix: e-mail addresses used for the user names caused an error when loading the users objectlist columns definitions (objectlistcols.json)
- Bug fix: Long file names that need to be shortened by function createfilename due to special characters in the name caused issues since the same shorten file name can exist for different files when uploaded at the same time (WebDAV and HTML file upload)
- Bug fix: The upload of files with the same shortened name at the same time caused an issue due to the same file name since the function is_ifile could not read the new file snice it has not been created by function createobject while the check has been performed  
- Bug fix: Media version file names have been too long with a max length file name value of 236 characters
- Bug fix: Windows has a limitation of 260 characters for the path length (MAX_PATH). This causes objects/files to disappear in Windows Explorer if the path is longer than the limit. This misbehavior can't be fixed without causing issues due to shortened file names.
- Bug fix: link_edit_pageand frameset_edit_link did not set the linktarget and linktext in case the content was empty
- Bug fix: media_edit_page and frameset_edit_media did not set mediaalttext, mediaalign, mediawidth, and mediaheight in case the content was empty
- Bug fix: The template engine did not provide the *Null* values based on the template definitions to link_edit_page and media_edit_page
- Bug fix: The Arabic language file used a wrong character for the line ending of the last language entry
- Bug fix: Function edittask in the Task Management API did not verify the input parameters and their *Leave* value correctly
- Bug fix: Function rdbms_edittask in DB Connect did not verify the input parameters and their *Leave* value correctly
- Bug fix: Function deletelog in Main API did not log the name in case the event.log file has been deleted
- Bug fix: Function edittask in the Task Management API did not set the project ID in case only the project ID has been changed
- Bug fix: Function rdbms_externalquery in DB Connect used a duplicate error code 50101 and has been changed to 50999
- Bug fix: The Polish language file had a missing line ending
- Bug fix: The Romanian language file had a character (dash) at the end of the file
- Bug fix: The Russian language file used an unescaped double quote in a text string
- Bug fix: The Somali language file had a missing line ending
- Bug fix: The Ukrainian language file had a character (dot) at the end of the text variable
- Bug fix: The Urdu language file used wrong character for some line endings
- Bug fix: Public function extractFileFromFileName in class Sabre_hyperCMS_Functions of the Workplace Integration module provided an empty file name since the slash has not been trimmed from the path string
- Bug fix: Public function getChildsForLocation in class Sabre_hyperCMS_Functions of the Workplace Integration module did provide the same folder name in case the users folder access permissions are used and the folder names have been the same

Version 10.2.0 (former Development Version 10.1.2)
Release 09/2023
- Implementation of the new main configuration parameter $mgmt_config['tplengine_localexecute'] in order to support the local execution of template code without a HTTP request
- Implementation of the new function tpl_getobjectview in the template engine in order to execute the template code
- Modifications in the template engine in order to use the new function tpl_getobjectview for executing the template code and creating the view of an object
- Modifications in function getwallpaper in Get API in order to support locally stored wallpapers without the wallpaper service based on the day of the year
- Modifications in function checkdiskkey in Security API in order to support multiple server IP addresses
- Implementation of the new function HTTP_Get_contents in Main API in order to support Get requests without the certificate issuer verification (wrapper function for PHP file_get_contents)
- Modifications in template engine, Main API, Get API, Media API, Meta API, media_taxonomy_import, and page_info_ip in order to replace the PHP function file_get_contents by function HTTP_Get_contents
- Implementation of the new version of function HTTP_Post in Main API in order to support HTTP Post requests without the certificate issuer verification (wrapper function for PHP file_get_contents)
- Modifications in function HTTP_getheader in Main API in order to support headers from full responses that include the header and body as well as header arrays
- Modifications in function HTTP_getbody in Main API in order to support an input that includes only the response body
- Implementation of the new main configuration parameter $mgmt_config['https_verify_ca'] in order to enable and disable the SSL certificate issuer verification in function HTTP_Post and HTTP_Get_contents
- Added CSS class disabled to main.css in all design themes
- Modifications in group_edit_form in order to implement a new user interface with floating permission boxes and greyed-out sub permissions if the main permission is disabled
- Modifications in function manipulateobject in Main API in order to set value of variable to_email if no e-mail address will be extracted form the user directory
- Modifications in function loadfile_header in Main API in order to remove a duplicate condition
- Modifications in function getobjectlist in Get API in order to calculate the count of both search results provided by function rdbms_searchcontent
- Modifications in control_user_menu and user_objectlist in order to use the array key (user name) instead of the array value of the result provided by function getusersonline
- Modifications in function getusersonline in Get API in order to return the real user name or e-mail in the result
- Display of the username plus the real name or e-mail address of the users in the select box of the chat window
- Modifications in the chat service in order to use the users real name or e-mail address for the reference in the messages
- Modifications in function sendmessage, notifyusers, and sendlicensenotification in Main API in order to use the users real name instead of the user name for the message title
- Design modifications in the chat window
- Modifications in template engine in order to insert the form edit button after the body tag if a body tag exists in the document
- Modifications in function errorhandler in template engine in order to support all PHP error types
- Modifications in export_form in the Import/Export module in order to verify the export source location and provide an error message
- Modifications in the background images of the design themes in order to match the color schema of the design
- Changed the value of the main configuration setting $mgmt_config['template_clean_level'] from 3 to 2 in the install directory
- Modifications in function importobjects in the Import/Export API of the Connector module in order to read the import jobs of version 10.0.3 only if the separator count of a job record is at least 9
- Modifications in function importobjects and exportobjects in the Import/Export API of the Connector module in order to verify that the job record is not empty and valid
- Modifications in function tpl_tsinsertcomponent in template engine in order to set session parameters only if a session exists
- Modifications in function rootpermission in Security API in order to initialize the rootpermission variable as array in case it is not an array
- Modifications in function getobjectlist in Get API in order to initialize the search variable as array in case it is not an array
- Modifications in function getlabel in Get API in order to verify the label record
- Modifications in function createviewlink in Main API in order to support alternative media files in case the requested media file does not exist
- Modifications in service mediawrapper in order to support alternative media files in case the requested media file does not exist
- Modifications in explorer_objectlist and search_objectlist in order to implement the new version of function createviewlink and remove the verification of the media file (increases performance significantly if the storage access is slow since the file access will only be performed by service mediawrapper)
- Modifications in function showcompexplorer in UI API in order to implement the new version of function createviewlink and remove the verification of the media file (increases performance significantly if the storage access is slow since the file access will only be performed by service mediawrapper)
- Modifications in all design themes in order to change to the JPEG format of the backgrd_start image
- Modifications in home, resetpassword, userlogin, userregister, and the Get API in order to support the new JPEG format of backgrd_start
- Modifications in service mediadownload and mediawrapper in order to define the file name if missing before the streaming section
- Modifications in service mediawrapper in order to verify that the thumbnail image is a valid jpeg file (function valid_jpeg)
- Modifications in function getlocationname in Get API in order to initialize a missing siteaccess variable as array
- Modifications in is_hiddenfile in Main API in order to include objects in the recycle bin as hidden (.recycle)
- Modifications in explorer_objectlist, link_edit_explorer, and text_link_explorer in order filter objects by function is_hiddenfile
- Modifications in function showcompexplorer in UI API in order filter objects by function is_hiddenfile
- Modifications in function rdbms_setdeletedobjects in DB Connect in order to permanently remove objects that have been deleted but still exist in the file system
- Modifications in function showshorttext in UI API in order to optimize line breaks and text ending
- Modifications in popup_status in order to delete objects instead of using the recycle bin for the system user (even if the recycle bin is enabled)
- Modifications in function manipulateobject in Main API in order to verify that a value for variable contentfile_self exists
- Modifications in control_objectlist_menu in order to implement the recycle bin buttons for "empty recycle bin" and "restore" to the edit selector
- Modifications in function rollbackversion, deleteversion, deleteversions, deleteinstance, deletepublication, deletepersonalization, deletetemplate, edituser, deletefrommediacat, updateuploadlog, loaduploadlog, deletemediafiles, and deleteannotationimages in Main API in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist 
- Modifications in function indexcontent, createthumbnail_indesign, createthumbnail_video, createimages_video, createmedia, convertmedia, unzipfile, zipfiles_helper, and zipfiles in Media API in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist 
- Modifications in function copymetadata, extractmetadata, xml_getdata, krita_getdata, exif_getdata, iptc_getdata, and setmetadata in Meta API in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in function showmedia in UI API in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in function killsession in Security API in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in service deletemedia, savecontent, sendmail, and uploadresume in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in control_message_menu, control_objectlist_menu, history, page_view, popup_status, and version_template in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in function rdbms_deletequeueentry in DB Connect in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in function movetempfile in Encryption API of the Encryption module in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in daily job in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in function exportxmlfiles in Import/Export API of the Connector module in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in the Youtube Connector of the Connector module in order to verify that the media file version exists before calling function deletefile for improved performance due to the delay caused by function deletefile if a file does not exist
- Modifications in template_edit in order to display a warning before the editor will be closed
- Modifications in standard Event System in order to verify the searchpublications setting used to define publications/websites that use an independent search index 
- Modifications in the hyperCMS API in order to support folders and files that are not based on the naming convention of the system. This requires the special characters used in a path or file name not to be encoded.
- Modifications in function correctfile in Main API in order to support a new input parameter for the encoding of special characters by function createfilename 
- Modifications in function download, publish, and unpublish in the REST API of the Connector module in order to call function deconvertpath with encoding of special characters
- Modifications in function executeREST in the REST API of the Connector module in order to call function specialchr_encode for the encoding of special characters in object paths
- Modifications in function correctpath in Main API in order to support a new input parameter for the encoding of special characters by function specialchr_encode
- Modifications in function convertpath in Main API in order to support a new input parameter for the decoding of special characters by function specialchr_decode
- Modifications in function correctpath in Main API in order to set the default path separator in case it is empty
- Modifications in control_objectlist_menu in order to support folders that are not managed by the system (include special characters and have no .folder object)
- Modifications in control_objectlist_menu in order implement the local JS function openInMainFrame
- Modifications in frameset_main in order to support a location input parameter for the passthrough and open frameset_objectlist
- Modifications in user_edit in order to implement the new recylce bin view setting for the system user
- Modifications in session.inc in order to include the new session parameter for the recylce bin view setting
- Modifications in explorer_objectlist and popup_status in order to support the new recylce bin view setting for the system user
- Modifications in function deletefile in Main API in order to remove a condition to an unassigned variable for the error log entry 10111
- Modifications in function notifyusers in Main API in order to support , and ; as delimiter by using function splitstring for the main configuration setting $mgmt_config['notify_exclude_users']
- Modifications in function savelog in Main API in order to exclude the events of the system user in case "sys" in included in the main configuration setting $mgmt_config['notify_exclude_users']
- Modifications in function checkpassword in Security API in order to use function splitstring for the main configuration setting $mgmt_config['passwordblacklist']
- Modifications in function checkpassword in Security API in order to define the min. length of 4 characters for a password
- Modifications in service recognizefaces in order to use function splitstring for the main configuration setting $mgmt_config['facerecognition_service_exclude']
- Modifications in function is_facerecognition in Main API in order to use function splitstring for the main configuration setting $mgmt_config['facerecognition_service_users']
- Modifications in the main configuration file in the install directory in order to define only "," as separator for multiple values of a coniguration setting
- Modifications in framset_content in order to add the CSS class hcmsWorkplaceObjectlist to the body
- Modifications in function showgallery in UI API in order to implement the new version of function createviewlink and remove the verification of the media file
- Modifications in various functions of the hyperCMS API in order to not suppress errors regarding the error log array
- Modifications in ldap_connect of the Connector module in order to create error log entries with additional information after the LDAP bind and when removing a bad user- Modifications in 
- Modifications in public function writeSessionDataToFile of the Workplace Integration in order to set the global is_webdav variable
- Modifications in function userlogin in Security API in order to access the global is_webdav variable and create the log entries with the additional WebDAV information
- Modifications in function userlogin in Security API in order to save the users IP address in the log if the IP address does not exist in the log data
- Modifications in function authconnect of the Connector module in order to access the global is_webdav variable and create the log entries with the additional WebDAV information 
- Implementation of the new main configuration setting $mgmt_config['webdav_sendlogin'] in order to support the automatic login request e-mail notification if the LDAP/AD Connector is used and the password is outdated (user verification failed)
- Implementation of the new function sendloginrequest in Main API in order to send a login request e-mail to the user (used if the LDAP/AD Connector is used and the password is outdated)
- Modifications in function sendresetpassword in Main API in order to create an error log entry if the e-mail for the password reset could not be sent to the user
- Modifications in public function authenticate in the Workplace Integration module in order to accept IP address entries if the user log file if they are not older than 100 days (only if SSO is used)
- Modifications in function loadfile, loadlockfile, and appendfile in Main API in order to always use sleep to avoid collision and CPU load whenever waiting for the file to be unlocked again
- Modifications in function getuserboxes in Main API in order to use function splitstring for the preparation of the users home boxes definition
- Performance improvements when processing media files of an unpacked ZIP file by processing the media objects using the queue and the minutely job (previews and search index entries are therefore delayed for these objects)  
- Modifications in function createmediaobjects in Main API in order to support a new input parameter for creating the media files in the background 
- Modifications in function unzipfile in Media API in order to support a new input parameter for creating the media files in the background
- Modifications in popup_action in order to call function unzipfile with the new enabled parameter for processing the media files in the background
- Modifications in function unzipfile in Media API in order to support a new input parameter for creating a report while processing the file
- Modifications in function createmediaobjects in Main API in order to support a new input parameter for creating a report while processing the file
- Modifications in function uploadfile in Main API in order to support a new input parameter for creating a report while processing the file
- Modifications in popup_action in order to support the report output by calling function unzipfile withe the enabled report
- Design modifications in popup_action
- Modifications in function uploadfile in Main API in order to call function unzipfile with the new enabled parameter for processing the media files in the background
- Modifications in minutely job in order to set a maximum number of entries to process from the queue
- Modifications in function createmedia in Media API in order to always initialize the imagecolor array
- Modifications in control_objectlist_menu in order to add a time stamp to the reload URL
- Modifications in control_objectlist_menu in order to disable the rename feature for a folder or object that has been checked out by another user
- Added the image file extensions .jpf and.jpx to the main configuration file in the install directory in order to support the conversion of these image formats
- Modifications in function renamefolder, renameobject, and savecontent in Main API in order to verify that the container is not locked by another user
- Modifications in queue_objectlist in order to display the command name with the action
- Implementation of the new function flushoutputbuffer in Main API
- Modifications in popup_action in order to call function flushoutputbuffer
- Modifications in function deletefile in Main API ni order to verify the results of function scandir
- Design modifications in function showgallery in UI API in order to move the title attribute from the img to the container div tag
- Implementation of a control for the display of newly created thumbnail images instead of the standard file icon after the thumbnail has been created for a multimedia object
- Implementation of the new function is_newthumbnail in Main API in order to provide the file time of a new thumbnail based on the temporary file thumbnails.dat
- Modifications in function createviewlink in Main API in order to force a reload of new thumbnails by using the provided time of function is_newthumbnail
- Modifications in function createmedia in Media API in order to request to clear the browser cache if a new thumbnail has been created by creating a temporary file thumbnails.dat
- Added the new session variable for the thumbnails in session.inc.php
- Implementation of the upload of directories
- Implementation of the new function createlocationname in Main API in order to create a locationname with valid and encoded folder names by applying function createfilename on each folder name
- Modifications in popup_upload_html in order to support the relative file path of the selected directories and getResponseAndBuildFileMessage
- Implememtation of the new local JS function activateDirectoryUpload in popup_upload_html in order to support the file or folder selection (folder upload is not supported by the Opera browser)
- Modifications in function createfolders in Main API in order to apply function createfilename to all folders of the provided location path and the folder name
- Modifications in service uploadfile in order to support the relative path provided by the HTML5 file upload and to create the missing folders 
- Modifications in function file_iexists, is_ifile, and is_idir in Main API in order to verify that the directory exists before scanning
- Modifications in function copyrecursive in Main API in order to verify that the source and destination directory exists before scanning 
- Modifications in function deleteversions, deletefile, deletepublication, collectfolders, createmediaobjects, manipulateobject, and licensenotification in Main API in order to verify that the directory exists before scanning
- Modifications in function getthemes, getmediafileversion, getcontainerversions, getlocaltemplates, gettemplateversions, and getlockedfileinfo in Get API in order to verify that the directory exists before scanning 
- Modifications in function link_db_restore in Link API in order to verify that the directory exists before scanning 
- Modifications in function clonefolder, indexcontent, and reindexcontent in Media API in order to verify that the directory exists before scanning 
- Modifications in function createtaxonomy in Meta API in order to verify that the directory exists before scanning 
- Modifications in function plugin_parse in Plugin API in order to verify that the directory exists before scanning 
- Modifications in function settemplate in Set API in order to verify that the directory exists before scanning 
- Modifications in function buildview in template engine in order to verify that the directory exists before scanning 
- Modifications in function showcompexplorer and createnavigation in UI API in order to verify that the directory exists before scanning 
- Design modifications in the CSS class hcmsWorkplaceControl of the Transparent design theme
- Design modifications in the CSS class hcmsButton and hcmsButtonTiny of various design themes
- Design modifications in Standard design theme
- Modifications in function settext, setmedia, setpagelink, setcomplink, sethead in Set API in order to return unchanged container if the input parameters failed the validation
- Modifications in control_objectlist_menu in order to implement a reduced toolbar with a new submenu
- Modifications in control_objectlist_menu in order to implement a new infobox for the new create and menu buttons (plus and 3 dots symbol)
- Implementation of the new local JS function openMenu and closeMenu in frameset_objectlist to be used by the Mobile Edition
- Removed deprecated function settoolbarfunctions from Set API
- Modifications in frameset_main in order to implement the chat library and the local JS function sendtochat
- Modifications in control_content_menu, control_objectlist_menu, explorer_objectlist, and search_objectlist in order to call the JS function sendtochat from frameset_main
- Modifications in function showinfobox in UI API in order to create a unique id for the infobox if none has been provided
- Modifications in all controls in order to add the new input parameter value for the ID of the infobox (function showinfobox)
- Removed the large thumbnail view option from control_objectlist_menu in the Mobile Edition
- Modifications in control_objectlist_menu in order to change the download selector to a download submenu
- Implementation of the new function getinvertcolortheme in UI API in order to get the inverted theme names of the primary and hover colors based on the brightness of the primary and hover background color of a portal theme
- Modifications in function userlogin in Security API in order the replace code by function getinvertcolortheme
- Modifications in user_edit API in order the replace code by function getinvertcolortheme
- Modifications in portal_edit in order to implement the support of the hover color CSS classes
- Modifications in frameset_main in order to implement the support of the new hover color CSS classes
- Modifications in all controls in order to implement the support of the new hover color CSS classes
- Implementation of the new JS function hcms_openSubMenu and hcms_closeSubMenu in main.js
- Modifications in all controls in order to implement the resizing of the control layer by using the JS functions hcms_openSubMenu and hcms_closeSubMenu
- Design modifications in all controls in order to reposition the message boxes and resizing the input and select fields
- Design modifications in explorer in order to set a min. width for the navigation tree and search form
- Modifications in user_edit in order to use the display name for the publications for home boxes and design themes
- Modifications in media_playerconfig in order to provide the array keys of the user publication access to function getthemes
- Modifications in function gethomeboxes, getuserboxes, and getthemes in Get API in order to provide the display names in the result array values for portal design themes
- Modifications in frameset_mobile in order to implement the support of the new hover color CSS classes
- Design modifications in portal_edit in order to display the selected images
- Modifications in control_objectlist_menu in order to move the object filter to a new position in the toolbar and display the filter checkboxes in line with the tool bar buttons
- Modifications in control_objectlist_menu in order to optimize the positioning of the gallery view selector for the desktop and mobile devices
- Implementation of the new function gettoolbarstyle in UI API in order to unify the CSS styles of the toolbar used in the standard controls
- Modifications in all controls in order to use the new function gettoolbarstyle
- Modifications in JS function hcms_dragLayer in main.js in order to support the element ID plus the suffix "header" as dragable zone
- Modifications in JS function hcms_dragLayer in main.js in order to disable and enbale transition effects on drag
- Modifications in the Project Management module in order to reposition the createproject and task boxes and close boxes if another box will be opened
- Modifications in the Project Management module in order to implement dragable boxes
- Modifications in the Task Management module in order to reposition the createtask box
- Modifications in the Task Management module in order to implement dragable boxes
- Modifications in all design themes in order to move to a relative font-size
- Modifications in function settext, setmedia, setpagelink, and setcomplink in Set API in order to except an empty article input parameter and treat the content as no atricle
- Modifications in function exportxmlfiles in Import/Export API in order to convert the object ID saved in the componentfiles XML-node to object paths using function getobjectlink
- Modifications in JS function hcms_createVTTrecords in main.js in order resize the date fields for the VTT records
- Design modifications in image_rendering, media_rendering, page_multiedit in order to use an overlay for the media options
- Modifications in function showmedia in UI API in order to display the save button for image, audio/video media files
- Modifications in function showvideoplayer in UI API in order to change the z-index of the CSS class hcmsVideoOverlay
- Modifications in function notifyusers in Main API in order to trim the user names before comparison
- Implementation of the new main configuration setting $mgmt_config['showbuttonlabel'] in the install directory
- Modifications in frameset_main in order to support a vertical and horizontal top bar layout
- Modifications in all controls in order to implement optional labels next to the buttons
- Modifications in function editportal in Main API in order to support the position of the main navigation on top or left and the display of button labels in the toolbar of the controls
- Modifications in portal_edit in order to support the postion of the main navigation on top or left and the display of button labels in the toolbar of the controls
- Modifications in portal XML schema in order to add the new mainnavigation node
- Removed CSS class hcmsButtonLabelSizeWide from all design themes
- Modifications in session.inc.php in order to add the new session parameter "hcms_mainnavigation" for the main navigation position defined by a portal design theme
- Modifications in function userlogin and registeruser in Security API in order to implement and support the main navigation position defined by a portal design theme
- Modifications in user_edit in order to implement and support the main navigation position defined by a portal design theme
- Implementation of the new function showdynamicCSS in the UI API
- Modifications in the control of the test plugin in order to use the new function showdynamicCSS
- Modifications in all controls in order to use the new function showdynamicCSS
- Modifications in the Task Management and Project Management module in order to hide the saving overlay after the submit since it might not be executed in case of an error
- Modifications in JS function hcms_dragLayer and hcms_dragLayers in main.js in order to verify if the provided HTML element exists
- Removed deprecated CSS class hcmsButtonFrame from mains.css in all design themes
- Added new CSS class hcmsSubMenu, hcmsSubMeniItem to main.css of all design themes
- Modifications in control_content_menu in order to set the and individual max-width for CSS class hcmsButtonLabel 
- Modifications in function showgallery in UI API in order to support the download of media files without a permission check of the user
- Implementation of the Home box template for the presentation of collections with download of single assets
- Modifications in function gettemplates in Get API and loadtemplate in Main API in order to include the new Home box template
- Modifications in chat in order to add CSS class hcmsInvertHoverColor to the user selector
- Modifications in explorer_objetview in order to add CSS class hcmsInvertHoverColor to the user selector
- Design modifications in the Project Management module
- Modifications in function viewinclusions in template engine in order to initialize the variable includedata
- Modifications in the template engine in order to set a fixed position for the editing header bar
- Modifications in the template engine in order to use an absolute positioning of the component edit buttons in the CMS/Inline view
- Implementation of the new template variable "%container_content%" in order to use the content of the XML content container of the current object in the template 
- Modifications in function getlabel in Get API in order to optimize the result by verifying the length of the language code
- Modifications in explorer in order to set the min. length of the search expression to 3 although the standard min. length of indexed words in MySQL and MariaDB is 4 digits
- Design modifications in the Mobile Edition in order to display the gallery view and the task button in the main navigation bar in case an access link user is logged in
- Modifications in function createmedia in Media API in order to log errors if the ID3 image of an audio file could not be created or saved
- Modifications in service chat in order to verify the chat record before processing its data 
- Modifications in control_objectlist_menu in order to provide the location name in the same notation as in the control
- Modifications in function createmedia in Media API order to verify the sharpness amount variable
- Implementation of new folder icons for all design themes
- Modifications in function readnavigation in order to apply function cleandomain on the root URL definition of the navigation $navi_config['root_url']
- Modifications in function deletemediafiles in Main API in order to remove the VTT files of videos
- Modifications in function manipulateobjet in Main API in order remove the code for deleting the VTT files of videos since
- Modifications in function link_update in Link API in order to support new input parameters and update the media file references in the published and working content container
- Modifications in function accessgeneral in Security API in order to verify that the location and the exluded folder is not empty
- Modifications in the comments in main configuration file in the install directory
- Modifications in the screen resolutions of mobile devices in main configuration file in the install directory
- Modifications in function link_db_load in Link API in order to verify the link record before extracting the information
- Modifications in function link_db_update in Link API in order to verify the link record
- Modifications in function manipulateobject in Main API in order to verify the link exists before inserting the reference into the link index
- Modifications in the template engine in order not to render the preview of included unpublished components
- Modifications in various services in order to verify that the publication management configuration file exists provide and error in the response in case the file does not exist
- Modifications in frameset_log in order to integrate control_log_menu in order to enable bigger sized overlays
- Modifications in function deletelog in Main API ni order to modify the addonload result 
- Design modifications in explorer_objectview, frameset_content, and frameset_objectlist
- Removed control_log_menu
- Update of the JQuery tagit library
- Design modifications in control_log_menu
- Modifications in control_media_menu in order to verify the media record before extracting te information from it
- Modifications in function checkuserip in Security API in order to convert timeout to integer values
- Modifications in function createfolder in Main API in order to initialize the variable location_esc
- Modifications in class HyperMailer in order to verify the main configuration settings before their usage
- Modifications in service mediastream in order to set the value of variable mediafile to media
- Modifications in control_objectlist_menu in order to verify the result of the API functions before assigning the result values
- Modifications in all system components in order to verify that the publication configuration file exists before loading the configuration
- Modifications in userregister in order to verify the selected publication before creating and editing the user
- Updates in various language files
- Update of all Guides
- Bug fix: Function getobjectlist in Get API did not create a result if the search result for the text content was empty and the search result for the object path was not empty
- Bug fix: Function manipulateobject in Main API did not call the event onpasteobject_pre in the correct position (after the source location has been defined)
- Bug fix: The template engine did reuse the temp_array for components due a missing condition and used media objects instead of components
- Bug fix: Service recognizefaces used a wrong condition syntax
- Bug fix: Function updateuploadlog in Main API did not set the value of variable updated correctly
- Bug fix: version_template did not exclude the table column head for "owner" if the main configuration setting $mgmt_config['version_owner'] has been disabled
- Bug fix: Function exportobjects and importobjects in the Import/Export API of the Connector module used PHP function time instead of date
- Bug fix: Function createnavigation in UI API did not initialize the child arrays for the navigation
- Bug fix: Function manipulateallobjects did not define the category of the source object used in event log entries
- Bug fix: Function downloadfile in Main API did not properly define the start byte if the range started with an '-'
- Bug fix: Function userlogin in Security API did not provide the user IP address as array to function savelog 
- Bug fix: Modifications in function ocr_extractcontent in Media API in order to remove all temporary images files
- Bug fix: Function clonefolder also included folders in the recycle bin
- Bug fix: Function createfolder in Main API did not get the category before the category has been used in the code
- Bug fix: Function createfolder in Main API did not initialize the error array
- Bug fix: Function createfolder in Main API did return the location including the folder name since it used the location result of function creatobject (after creating the folder object)
- Bug fix: The local JS function sendtochat in control_objectlist_menu could not be executed due to the missing JQuery library
- Bug fix: user_edit provided the siteaccess array and not the array keys for superadmin users as input to function getthemes which resulted in missing entries if the technical publication and display name were not the same 
- Bug fix: Function showprojectrecord in the Project Management API used a wrong variable name in the link of an onclick event
- Bug fix: JS function hcms_dragLayer in main.js did use a wrong variable name for dragable element
- Bug fix: Function manipulateallobjects in Main API used wrong variable as input for function getcategory for action "paste"
- Bug fix: The JS function initFaceOnVideo of the template engine called a non-existing function sortObjectValue instead of hcms_sortObjectValue
- Bug fix: The black design theme used a width and height in CSS class hcmsHomeBox
- Bug fix: The Project Management module used a wrong variable name for the dependencies of a new task
- Bug fix: template_edit did not disable the warning in the local JS function savetemplate for both save types
- Bug fix: media_edit_explorer included directories since the absolute path was missing for function is_dir
- Bug fix: template_default.schema.xml.php did not close the hyperCMS tag for the id "YoutubeCategories"
- Bug fix: Function showeditor and showinlineeditor in UI API removed the domain from the JS configuration property cmsLink for CKEditor
- Bug fix: control_log_menu verified the rootpermissions and not the globalpermissions which are necessary for the publication log
- Bug fix: Function importxmlfiles in the Import/Export API used the wrong div-tag for a success message
- Bug fix: popup_upload_html did not provide the correct file name as input for the local JS function frameReload if the file extension has been changed due to the upload/update of a file with a different file extension
- Bug fix: Service rendervideo used a wrong variable name for the object name
- Bug fix: Function executeREST in REST API of the Connector module escaped special characters used in the object path which resulted to wrong object names whenever a new object has been created
- Bug fix: Function getmetadata in Get API did not strip HTML tags if a double quote was not present in the string
- Bug fix: Explorer used a wrong variable name for the image width search parameter

Version 10.2.1
Release 01/2024
- Design modifications in the tag-it JQuery plugin
- Design modifications in control_user_menu in order to set an individual screen size for the display of the button labels due to the width of the toolbar
- Modifications in site_edit_form in order to restore or create the link index of a publication if the link management is enabled and the link index is missing
- Modifications in function link_db_restore in Link DB API in order to support the collection of the container IDs by using a database query for a specific publication instead of browsing all content containers
- Design modifications in rich calender CSS
- Update to JQuery library version 3.7.1
- Update to JQuery UI library version 1.4.2
- Design modifications in Workflow Management module
- Design modifications in media_edit_explorer
- Modifications in media_edit_explorer in order to display the selected media category after performing a media search
- Modifications in media_edit_explorer in order to display the search expression after performing a media search
- Updates in the German language file
- Design modifications in the Standard design theme for rounded buttons
- Design modifications in the Day design theme for rounded buttons
- Design modifications in the Night design theme for rounded buttons
- Design modifications in the Transparent design theme for rounded buttons
- Design modifications in the Blue design theme for rounded buttons
- Design modifications in frameset_main in order to disable rounded buttons in the top/left main navigation bar
- Design modifications in frameset_mobile in order to disable rounded buttons in the top main navigation bar
- Design modifications in portal_edit in order to disable rounded buttons in the top main navigation bar
- Migration from contentcount.dat file to a database entity
- Modifications in createtables.sql in order to add the new table contentcount
- Implementation of the new function update_database_v1021 in the Update API in order to migrate contentcount.dat to the new table contentcount
- Modifications in function updates_all in the Update API in order to execute function update_database_v1021
- Implementation of the new function rdbms_contentcount in DB Connect in order to create and return the contentcount value
- Implementation of the new function rdbms_cleancontentcount in DB Connect in order to remove all rows that are older than 24 hours
- Modifications in function contentcount in Main API in order replace the file based contentcount by the new function rdbms_contentcount with support of update_database_v1021 and fallback to contentcount.dat file on error (in case the database user has not the required permission to create the new table)
- Modifications in all functions that used function contentcount in order to remove the old input parameter for the user name
- Modifications in the installation routine in order to remove the creation of the contentcount.dat file
- Modifications in the daily job in order to implement the new function rdbms_cleancontentcount
- Modifications in function rdbms_searchcontent in DB Connect in order to escape the values of the search parameters imagecolor and imagetype
- Modifications in function rdbms_searchcontent in DB Connect in order to support the search for images with similar primary colors or similar RGB values (input parameter imagecolor can be an array and now also a string)
- Implementation of the new local CSS class hcmsSimilar in explorer_objectlist and search_objectlist
- Implementation of the new local JS functions showbutton, hidebutton, showsimilar in explorer_objectlist and search_objectlist
- Modifications in explorer_objectlist and search_objectlist in order to implement the search for images with similar primary colors or similar median RGB values on mouse over
- Modifications in search_objectlist in order to support the category as input value
- Implementation of the new main configuration setting $mgmt_config['search_colorkey_level'] in search_objectlist (0 = exact match, 1 = match of 1st primary color, 2 = match of first 2 primary colors, 3 = match of first 3 primary colors, 4 = match of first 4 primary colors, 5 = 0 = match of all 5 primary colors in the same order)
- Modifications in search_objectlist in order to support the new search input parameter search_image and query the colorkey and RGB values of the source image as input for function rdbms_searchcontent
- Modifications in createtables.sql in order to create a new index object_color for table object using column filetype, colorkey, red, green, and blue
- Modifications in createtables.sql in order to modify the column colorkey to 6 digits fixed character length
- Implementation of the new function update_database_v10212 in the Update API in order to alter the table object and create the new index object_color
- Modifications in function updates_all in the Update API in order to execute function update_database_v10212
- Implementation of the new text elements for the display of similar images in all language files
- Update of the update log entry for version 10.2.1 in the installation directory
- Update of the update log entry for version 10.2.1.2 in the installation directory
- Modifications in function showmedia in UI API in order to support different tag-IDs for the standard image, for face markers and image zoom
- Implementation of a new JS image zoom in explorer_objectview with support of image zoom and image move for preview (not used for Mobile Edition)
- Implementation of the color icon image for all design themes
- Implementation of the new show similar action in control_objectlist_menu for the search of similar images
- Modifications in explorer_objectlist and search_objectlist in order to disable the show similar button for the Modile Edition
- Implementation of the new main configuration setting $mgmt_config['showsimilar'] in the config.inc.php of the install directory
- Modifications in explorer_objectlist and search_objectlist in order to support the new main configuration setting $mgmt_config['showsimilar']
- Modifications in function showmedia in UI API in order to use the original GIF image if the view type "media_only" has been requested
- Modifications in function showmedia in UI API in order to use the original image if supported by modern browsers and if the view type "media_only" has been requested, the requested width is more than 420 pixels, or more than the original image width
- Modifications in function showmedia in UI API in order to save the requested input width and height and use it for the comparison with the original image
- Modifications in function showmedia in UI API in order to avoid creating temporary preview images if annotation images are used
- Modifications in function showmedia in UI API in order to optimize the code and the performance
- Modifications in function deletemediafiles in Main API in order to remove the JPEG version of the original KRITA file
- Modifications in function deletemediafiles in Main API in order to verify symbolic links and remove the referred file and link as well
- Modifications in function function getmediasize in Get API in order to support the size of RAW and KRITA image files
- Modifications in function createmedia in Media API in order to get the image size for KRITA files from the converted JPEG version using function getmediasize
- Modifications in function createthumbnail_krita in Media API in order to convert the extracted mergedimage.png file to JPEG
- Modifications in explorer_objectlist and search_objectlist in order to disable the large gallery view for the Mobile Edition
- Modifications in daily job in order to use deletefolder instead of deleteobject for folder objects in the fallback procedure
- Modifications in function deleteversion and deleteversions in Main API in order to verify symbolic links and remove the referred file and link as well
- Modifications in function deletefile in Main API in order to remove files referred by a symbolic link for recursive and non-recursive input parameter
- Modifications in version_content_compare in order to add free spaces after commas for keyword lists
- Update of the Installation Guide
- Update of the Users Guide
- Bug fix: text_edit_date used two double quotes at the end of the tagid value string and caused an error in the local JS function checkUpdatedContent
- Bug fix: Function rdbms_searchcontent and rdbms_replacecontent in DB Connect used the wrong column for the page and component search filter
- Bug fix: Function uploadhandler in Main API did not initialize the error array
- Bug fix: media_edit_explorer did not initialize the counter variable for the number of search results correctly
- Bug fix: The locking mechanism of the file based contentcount caused issues with duplicate Container IDs. In order to avoid content duplicates a new contentcount mechansim that uses the database has been implemented.
- Bug fix: The Chinese language file used a wrong language code in the last two text elements
- Bug fix: Function downloadfile did not URL encode the file name and caused issues with unencoded filename in the HTTP header in case of certain special characters in the file name (URL encoding has only be used for MS IE browser)
- Bug fix: The z-index of the rendering options layer in image_rendering was below the z-index of the image crop tool layer 
- Bug fix: Function showmedia in UI API created temporary preview images even if not required
- Bug fix: Function deletemediafiles in Main API did not remove the JPEG version of KRITA files
- Bug fix: Function createmedia in Media API did not correctly extract the image size of KRITA files since the thumbnail image has been used as input for function getmediasize
- Bug fix: Function createthumbnail_krita in Media API did not convert the extracted mergedimage.png file to the JPEG format which resulted to a wrong image format and a large preview file size
- Bug fix: The Mobile Edition did not switch to the next smaller gallery view automatically (There is no large gallery view support and view select option in the Mobile Edition)
- Bug fix: The daily job did not call function deletefolder for folder objects in the fallback procedure
- Bug fix: Function deletemediafiles in Main API did not remove files that are referred by symbolic links (extported media files)
- Bug fix: Function deleteversion and deleteversions in Main API did not remove files that are referred by symbolic links (extported media files)
- Bug fix: Long keyword lists have been displayed outside the text field when comparing two content versions

Version 10.2.2
Release 03/2024
- Function rdbms_getduplicate_file in DB Connect has been renamed to rdbms_getduplicatefiles
- Modifications in function uploadfile in Main API in order to rename function rdbms_getduplicate_file to rdbms_getduplicatefiles
- Implementation of the new function rdbms_findduplicatefiles in DB Connect in order to find all existing duplicate media files
- Modifications in search_objectlist in order to implement the new function rdbms_findduplicatefiles
- Modifications in explorer in order to add the new "check for duplicates" item in the desktop tree
- Modifications in frameset_objectlist in order to support the search for duplicates
- Implementation of the new page_info_duplicates in order to display all duplicates of a selected media object
- Modifications in function rdbms_getobject_info in DB Connect in order to support the publication, location, object name, category, and MD5 hash of an object in the result
- Modifications in page_info in order to add the new "check for duplicates" button that calls the new page_info_duplicate
- Modifications in function rdbms_getduplicatefiles in DB Connect in order to support the object hash, object ID, container ID, publication, location, object name, category, and media name of an object in the result
- Modifications in function rdbms_getduplicatefiles in DB Connect in order to use the object hash as unique array key for each object in the result
- Modifications in function rdbms_getduplicatefiles in DB Connect in order to require the objects MD5 hash as the only mandatory input, making the publication name as second optional input parameter
- Modifications in function uploadfile in Main API in order to modify the call of function rdbms_getduplicatefiles due to the new order of input parameters
- Modifications in page_info_duplicates in order to modify the call of function rdbms_getduplicatefiles due to the new order of input parameters
- Modifications in page_info_container in order to use function getlocationname for the readable location path
- Implementation of the new main configuration parameter $mgmt_config['showclipboard'] in order to enable or disable the objects in the users clipboard 
- Modifications in function getclipboard in Main API in order to support folders
- Modifications in explorer in order to support the new main configuration parameter $mgmt_config['showclipboard'] and display the objects of the users clipboard
- Modifications in createtables.sql in order to create a new index object_md5 for table object using column deleteuser and md5_hash
- Implementation of the new function update_database_v1022 in the Update API in order to create a new index for table object
- Modifications in function updates_all in the Update API in order to execute function update_database_v1022
- Modifications in page_preview in order to support the "check for duplicates" feature
- Modifications in page_info in order to verify that connected copies and duplicates exist before displaying the buttons
- Modifications in function rdbms_getduplicatefiles in DB Connect in order to exclude objects with the same container Id (connected objects)
- Modifications in function createmedia in Media API in order to only create a temporary file of the original if the original file will be replaced by the edited version
- Modifications in function showmedia in UI API in order to verify if one of the image views was successful and use the thumbnail as fallback
- Modifications in function createmedia in Media API in order to set the color space to sRGB by default
- Modifications in function createmedia in Media API in order to flatten encapsulated post script (EPS) and vector graphics
- Modifications in function rdbms_getmediastat in DB Connect in order to fully support SQL limits
- Modifications in function rdbms_searchuser in DB Connect in order to fully support SQL limits
- Modifications in function rdbms_searchrecipient in DB Connect in order to fully support SQL limits
- Design modifications in main.css of the Day design theme
- Modifications in popup_status in order to close the window if explorer_objectlist is not present
- Modifications in function rdbms_cleancontentcount in DB Connect in order to remove all contentcount records except for the last one
- Modifications in version_content_compare in order to initialize the result array
- Modifications in version_content in order to implement the JS void function to avoid autoscrolling to top when an object of the version history is opened
- Modifications in text_link_explorer in order to verify the temporary page location and initialize it if required
- Modifications in text_link_explorer in order to verify that the hash key is not a counter
- Modifications in link_edit_explorer in order to verify that the objectpath of a search result record is not empty
- Modifications in function zipfiles in Media API in order to create a new log entry when a ZIP file has been created
- Modifications in function showmedia in UI API in order to verify that the integer values of a videos width and height is greater than zero
- Modifications in function mediasize2frame in Media API in order to verify that the integer values of the input parameter mediawidth and mediaheight is greater than zero
- Implementation of the new main configuration parameter $mgmt_config['maxdownloadsize_per_day'] in order to set a daily global download limit in GB
- Modifications in function downloadfile in Main API in order to implement a daily download limit using the new main configuration parameter $mgmt_config['maxdownloadsize_per_day']
- Modifications in function rdbms_optimizedatabase in DB Connect in order to remove records in table dailystat which are older than 5 years
- Implementation of the new main configuration parameter $mgmt_config['videoplayerthumbnails'] in order to enable and disable preview thumbnail images in the playback bar of the video player
- Modifications in function showvideoplayer in UI API in order to disable the preview thumbnail images in the playback bar
- Modifications in function showvideoplayer_head in UI API in order to exclude the plugin for thumbnail images in the playback bar
- Modifications in function showvideoplayer_head in UI API in order to remove the deprecated flash video player support
- Modifications in function downloadfile in Main API in order to only stream files that are larger than 500 kB
- Modifications in service accessstats in order to limit the amount of container IDs passed to popup_gallery
- Modifications in service accessstats in order to pass a more string by providing 3 dots at the end of the container ID string to popup_gallery
- Modifications in popup_gallery in order to display 3 dots at the end of the gallery in case 3 dots have been provided at the end of the container ID string
- Modifications in videojs.thumbnails.js in order to remove the default thumbnail reference
- Minor modifications in the comments of the system APIs
- Implementation of the new print CSS in order to create an optimized print design
- Modifications in function showtranslator in UI API in order to implement the new CSS class hcmsTranslator
- Modification in the template engine, explorer_objectlist, and search_objectlist in order to implement the new print.css for printing
- Modifications in function showinlineeditor in UI API in order to implement the support of the display text and values (defined in the optional curly brackets of list entries)
- Modifications in function getlocationname in Get API in order to set the category input parameter as optional
- Modifications in function showcompexplorer in UI API in order to verify a location name exists before displaying it
- Modifications in function showcompexplorer in UI API in order to correct/remove a single slash if the root element has been provided as location
- Modifications in the CKEditor image plugin in order to support the browsing of assets and pages in the link tab of image properties
- Modifications in the CKEditor image plugin in order to use the button labels from the linkbrowsebuttons extension (editor.lang.hcms_linkbrowsebuttons.label.Component and editor.lang.hcms_linkbrowsebuttons.label.Page)
- Modifications in service accessstats in order to provide the downloaded and uploaded file size in the context info of a bar
- Modifications in search_objectlist in order to verify the search action and the publication before saving the search parameters
- Modifications in explorer in order to translate the image colors of a saved search
- Modifications in function getlanguageoptions, getlanguagefile, getcodepage, getcalendarlang, and getscaytlang in Get API in order to optimize the code
- Modifications in function ocr_extractcontent in Media API in order to add a new niput parameter and select specific pages from a document that should be scanned
- Modifications in function ocr_extractcontent in Media API in order to remove the created temporary TIFF files of documents
- Modifications in function ocr_extractcontent in Media API in order to implement new error codes for logging
- Modifications in hyperCMS API loader in order to verify that the function getlanguagefile exists
- Modifications in template engine in order to include the vendor string independently from scriptcode in the documents head
- Modifications in function downloadfile in Main API in order to apply the daily download limit only for downloads
- Modifications in all design themes in order to reduce the radius of the mouse over button to 3 pixels
- Modifications in the Report Management module in order to open objects if an object path is provided in the table view of a report
- Modifications in the Report Management module in order to remove deprecated report script
- Modifications in function showpiechart, showcolumnchart, showareachart, showtimelinechart of the Report Management API in order to transform the object path to readable names
- Implementation of the reports Geolocation, MediaType, Metadata, Top10AssetsByActivity, and Top10UsersByActivity in the installation directory
- Modifications in the Report Management module in order to display readable object path names in the CSV export
- Modifications in the Report Management module in order to display the used search filters after the report title
- Implementation of a report caching in the Report Management module due to long query execution for a large database
- Implementation of function suspendsession in the Report Management module 
- Design modifications in the table view of the Report Management module
- Modifications in the Report Management module in order to resize the chart when the chart button has been clicked due to issues with resizing the chart when the Home box size has been changed
- Modifications in page_info_stats in order to use a standard link and link design instead of a DIV tag for the IP geolocation popup 
- Modifications in function rdbms_externalquery in DB Connect in order to transform the object path based on the value and not the key name
- Design modifications in Home box all_reports and news in order to replace the plus-minus icon by the new zoom icon
- Modifications in home screen in order to use a select box for the available home boxes instead of a list of all home boxes
- Modifications in chat in order to exclude the system user from the user select box
- Implementation of a thumbnail gallery view in the Report Management module that will be created automatically whenever an object path is part of the report
- Modifications in function showgallery in UI API in order to include the absolute URL for hcms_openWindow (open object on click)
- Implementation of a thumbnail gallery view in the Report Management module that will be created automatically whenever an object path is part of the report data
- Implementation of a new window size icon for all design themes
- Design modification of the sidebar icon in all design themes
- Modifications in main.js in order to update the social media share functions
- Modifications in template engine in order to support additional input parameters for the social media share functions
- Modifications in REST function download in the REST API of the Connector module in order to exclude the content as XML-Node "textcollection" and use the content provided by function getmetadata as JSON string
- Modifications in SOAP function download_object in the SOAP API of the Connector module in order to exclude the content as XML-Node "textcollection" and use the content provided by function getmetadata as JSON string
- Modifications in function getmetadata in Get API in order to verify the variables for publication and template and optimize the code
- Implementation of the geolocation support for users IP addresses in the Report Management module by implementation of a new popup layer and local JS function opengeoview and closepopup
- Design modifications in the Report Editor of the Report Management module in order to enable a fullscreen report preview
- Code optimization in page_info_stats
- Modifications in function buildsearchform in the template engine in order to replace the CSS class of the body by class hcmsWorkplaceGeneric
- Design modifications in frameset_content in order to position the close button to the right side without any margin
- Modifications in the Report Management module in order to exclude objects path and thumbnails of objects without the users access permission which can't be opened and a message will be displayed instead
- Modifications in control_content_menu and page_view in order to display a message instead of calling killsession in case the user has no access permission to the requested object
- Modifications in function showinfopage in UI API in order to use the language text variable for "information" instead of info and to display the title in a larger font size
- Modifications in the simple statistics Plugin in order to only open objects with access permission for the user
- Implementation of the new Report Plugin in order to access all existing reports for all publications
- Modifications in explorer_objectview in order to center the view container by CSS transform instead of margin (view will be centered when using the browser zoom)
- Implementation of the new full search log in function rdbms_searchcontent in DB Connect
- Modifications in function rdbms_searchcontent in DB Connect in order to move the search operator logic before the new full search log entry
- Modifications in function rdbms_searchcontent in DB Connect in order to move saving of the search logs before the verification of the search results
- Implementation of the new search statistics and charts for dates, times, users, expressions, file names, object types, primary colors, image sizes, and geo locations in the new search statistics Plugin (requires the Report Management API)
- Renamed the old search statistics Plugin to search expressions Plugin
- Implementation of the function getimagecolorname in Get API in order to translate the color key to a color name
- Implementation of the function getimagecolorname in explorer
- Modifications in explorer in order to replace the JS functions hcms_showFormLayer and hcms_hideFormLayer in the local Js functions showSearch and showNav by standard JS functions to display and hide the layers
- Modifications in function showgeolocationchart in Report Management API in order to verify the geo coordinates of the data array before using them for the center location of the map
- Modifications in function showgeolocationchart in Report Management API in order to implement the new JS function drawRectangle to draw a rectangle on the map on click event and display it for one second (used to display a search area on the map)
- Modifications in function showgeolocationchart in Report Management API in order to support JS function calls beside URL on click event
- Implementation of the new function rdbms_getkeyword in DB Connect in order to select a single keyword by its ID
- Modifications in function rdbms_searchcontent in DB Connect in order use function rdbms_getkeyword to translate the requested keyword search for the log entry
- Modifications in function rdbms_searchcontent in DB Connect in order to exclude taxonomy navigation log entries
- Modifications in function checkuserrequest in Security API in order to log the client IP in case of an CSRF attack
- Modifications in various functions in the Security API in order to return false only once at the end of the execution of the function
- Modifications in various functions in the UI API in order to load the language file in case the requested language is not available
- Modifications in control_objectlist_menu in order to use the text for "export" for the button label instead of the longer version for the CSV export
- Implementation of the new chart icon and table icon for all design themes
- Modifications in the Report Management module in order to use the standard toolbar icons for the report actions instead of buttons
- Modifications in the function getpublication, getlocation, and getobject in Get API in order to verify that the input path is of type string
- Modifications in function showcolunchart, showareachart, showtimelinechart, and showgeolocationchart in the Report Management API in order to use function isset instead of empty and display zero values in the chart as well
- Modifications in the CSS class hcmsButtonLabel in all design themes in order to set the height and line-height to 32px due to incorrect alignment with text labels
- Modifications in function rdbms_insertdailystat in DB Connect in order to remove the system user condition and track the activities of the system user as well
- Design modifications in template_edit in order to adjust the height of the text area to the maximum height 
- Update of the update log entry for version 10.2.2 in the installation directory
- Update of the Users, Report Management, and Connector Guide
- Removed the global plugin configuration file from the install directory
- Bug fix: Function getclipboard in Main API did not return folder objects
- Bug fix: Function rdbms_getdeletedobjects, rdbms_searchuser, and rdbms_searchrecipient in DB Connect used a wrong name to access the result of the row counter
- Bug fix: Imagemagick could not convert EPS files without a defined colorspace
- Bug fix: The status popup has not been closed automatically when using an access link to access the system
- Bug fix: text_link_explorer did load the live system publication configuration twice but didn't load the management configuration
- Bug fix: text_link_explorer did not access the objectpath key of the search result and therefore did not display any search results
- Bug fix: The Czech and Korean language file included a wrong filesize variable name
- Bug fix: The refresh button in frameset_log did not refresh the log list 
- Bug fix: The Workflow Management control used a wrong div closing tag for the help button
- Bug fix: The log_list of the Logviewer plugin did not initialize the variable item_id
- Bug fix: The Home box free_storage_per_publication did initialize the variable space_used with the wrong value and leading to a wrong total space if no assets are present in a publication
- Bug fix: The VIDEOJS thumbnail images plugin caused playback issues when using the playback bar to select a play time (can only be solved by disabling the Plugin)
- Bug fix: control_queue_menu used a wrong text variable key for the refresh button label
- Bug fix: Function getlocationname in Get API did return the root variable for the page or component root instead of replacing it
- Bug fix: Function rdbms_searchcontent in DB Connect added multiple operators if synonyms are used and "AND" or "OR" have been used in the search expression
- Bug fix: The transparent design themes included the CSS class hcmsButtonTiny:hover twice with different hover colors
- Bug fix: The Pinterest social media share function in main.js verified a wrong input parameter name
- Bug fix: Function getobjectlist in Get API did not verify the filename search parameter value for the alternative file name search after the content search
- Bug fix: Function getmetadata in Get API initialize the metadata variable as string if the separator input has been not requested as an array
- Bug fix: Function is_facerecognition in Main API did exclude users that are not listed in the main configuration setting $mgmt_config['facerecognition_service_users']
- Bug fix: The search form in explorer used search parameters from deactivated search panels after switching between the navigation tree and search form since the JS functions hcms_showFormLayer and hcms_hideFormLayer disabled all input elements
- Bug fix: The JS function hcms_drawChart has not been verified by the local Js function resizeChart before the function call

Version 10.2.3
Release 06/2024
- Implementation of the new main configuration setting $mgmt_config['email_support'] to define a recipient user for support via e-mail
- Modifications in user_sendlink in order to enable portal visitors to send e-mails to the support user defined in the new main configuration setting $mgmt_config['email_support']
- Modifications in control_objectlist_menu in order to add the send mail-link feature to the toolbar besides the existing action in the sub menu 
- Modifications in control_objectlist_menu in order to enable the feature send mail-link without object references (linked assets)
- Modifications in service uploadfile in order to replace function getobjectcontainer by loadcontainer since the container ID is available
- Implementation of the new Youtube share link in the share button bar (besides the existing Youtube upload buttons for videos)
- Modifications in function showsharelinks in UI API in order to replace the wrapper link as input by the publication, location and object
- Modifications in template engine in order to support the new input parameters of function showsharelinks
- Modifications in the Youtube Connector of the Connector module in order to correct the optional input parameter variables for the content
- Modifications in the search statistics Plugin in order to display the maximum amount of result entries for some charts
- Modifications in control_template_menu in order to enable the taxonomy access, import, and export if the taxonomy browsing and search feature is not enabled for the publication
- Modifications in explorer in order to change the height for the advanced search form to 420 px
- Modifications in explorer in order to add the select expression to the select box for the templates to the advanced search
- Implementation of the new local JS function switchTemplates in explorer in order to show or hide the templates of the advanced search based on the selected publication
- Modifications in JS function hcms_sharelinkFacebook, hcms_sharelinkTwitter, hcms_sharelinkLinkedin, and hcms_sharelinkPinterest in order to only require the share link as mandatory input
- Modifications in JS function hcms_sharelinkFacebook, hcms_sharelinkTwitter, hcms_sharelinkLinkedin, and hcms_sharelinkPinterest in order to log the access in the browser console
- Modifications in function showsharelinks in UI API in order to add the CSS class hcmsButtonSizeSquare to all share icons
- Removed deprecated JS function hcms_sharelinkGooglePlus form main.js
- Replaced the old Twitter icon by the new X icon in all design themes
- Modifications in JS function hcms_copyToClipboard in main.js in order to transform escaped < and >
- Modifications in image_viewerconfig in order to implement copy buttons for the created code segments using the JS function hcms_copyToClipboard
- Modifications in document_viewerconfig in order to implement copy buttons for the created code segments using the JS function hcms_copyToClipboard
- Implementation of the new function analyzeSQLattributes in the Report Management API
- Modifications in function buildsearchform in the template engine in order to support a target for the display of the report and to display the loading screen
- Modifications in function buildsearchform in the template engine in order to use the publication display names for the text of the publication select box
- Implementation of the new report_view in order to display the requested report 
- Modifications in the all_reports Home box in order to display the report when a report has been selected
- Modifications in the Report Management Plugin in order to display the report when a report has been selected
- Modifications in the Report Management API in order to set the font color for the different chart types to black
- Implementation of the new function createAIimage in Media API to generate images using OpenAI’s DALL-E
- Modifications in site_edit_form in order to implement the new OpenAI API key
- Modifications in function editpublication in Main API in order to implement the new OpenAI API key
- Modifications in the main configuration in the install directory in order to disable the display of the current clipboard objects in the explorer
- Implementation of the new component template AIimageCreator in the install directory (can be used to create images using the DALL-E API)
- Modifications in function buildview in the template engine in order to verify the content of the Document Generator
- Modifications in function buildview in the template engine in order to set the main configuration setting $mgmt_config['tplengine_localexecute'] to false due to issues with the file content when executed locally
- Modifications in createtable.sql in order to add the new index accesslink_object_id to table accesslink
- Implementation of the new function update_database_v1023 in the Update API in order to create the new index accesslink_object_id for table accesslink
- Modifications in function update_all in Update API in order to add the new function update_database_v1023
- Update of the update log entry for version 10.2.3 in the installation directory
- Modifications in service sendmail in order to verify the provided multiobjects
- Modifications in user_sendlink sendmail in order to verify the provided multiobjects
- Modifications in control_objectlist_menu in order to activate the send button in the toolbar only if an object or multiple objects have been selected
- Modifications in function zipfiles in Media API in order to add the absolute path and user name to the log entry on success
- Modifications in function rdbms_optimizedatabase in DB Connect in order to optimize table accesslink, dailystat, keywords_container, notify, project, task, and queue
- Modifications in daily job in order to execute function rdbms_optimizedatabase on the first day of each month
- Removed the main configuration setting $mgmt_config['rdbms_optimize'] from the main configuration file in the install directory
- Modifications in function link_db_save in Link API in order to verify that the link database array exists
- The wallpaper service will no longer support requests without version information (effects all versions before 7.0.6)
- Added .heic file extension for the support of HEIC images to the main configuration file in the install directory
- Implementation of the new function insertimagetext2pdf in Media API in order to insert an image and texts into an existing page of a PDF file
- Design modifications in function importxmlfiles in Im/Export API of the Connector module
- Modifications in function getobjectlist in Get API in order to provide the create and modfified date as UNIX timestamp as well using the names "date_unix" and "createdate_unix"
- Modifications in function getobjectlist in Get API in order to provide the create and modfified date in UTC (universal time) as well using the names "date_utc" and "createdate_utc" 
- Updates in language files
- Update of the Administrator and Connector Guide
- Bug fix: Service uploadfile used object instead of objectpath from the result of function uploadfile and therefore was not able to save the optional text from the request in the objects
- Bug fix: Function getobjectcontainer in Get API used a wrong parameter for call of function deconvertpath
- Bug fix: popup_upload_html did not add the filepath used for the upload of directories on error
- Bug fix: group_edit_form did not set the row colors for each Plugin correctly
- Bug fix: Function editpublication in Main API did not include the OCR language settings in the publication configuration if the Connector module was not present

Version 10.2.4
Release 10/2024
- Modifications in function rdbms_searchcontent in DB Connect in order to query and include the MD5 hash of an asset (will be passed through to function getobjectlist in the Get API)
- Modifications in function rdbms_getobject_info in DB Connect in order to query and include the MD5 hash of an asset (will be passed through to function getobjectlist in the Get API)
- Modifications in the Standard design theme
- Modifications in function uploadfile in Main API in order to set the md5 hash of an updated file of an asset immediately after upload in case a queue entry is used to execute function createmedia (required for the new LinkRUI Plugin) 
- Modifications in function uploadfile in Main API in order to remove the use of the uploaded file as thumbnail as fallback in case the thumbnail could not be created
- Modifications in function uploadfile in Main API in order to remove unnecessary savelog calls
- Modifications in function uploadfile in Main API in order to create a new log entry if a files content has been updated
- Minor code modifications in the Plugin API, UI API, and template engine
- Minor code modifications in several system components
- Minor code modifications in showcase templates in the install directory
- Implementation of a memory feature for the sort of the selected table row in the object or gallery view
- Implementation of the new local JS function savesort in explorer_objectlist in order to save the user settings for the detail and gallery view sort function per publication, category, and table column
- Modifications in the local JS function initsizecols in explorer_objectlist in order to load the user settings for the detail and gallery view sort function per publication, category, and table column

Version 10.2.5
Release 01/2025
- Implemenentation of the new main configuration setting $mgmt_config['autocomplete_userfilter'] to define the search/filter function form the beginning of the string or somewhere in the string for the filter of recipients in user_sendlink
- Modifications in user_sendlink in order to support the new main configuration setting $mgmt_config['autocomplete_userfilter']
- Modifications in the Black design theme
- Implementation of the new main configuration setting $mgmt_config['contentversions_checked'] in order to check the versioning of objects or uncheck them by default
- Modifications popup_upload_html in order to use the new main configuration setting $mgmt_config['contentversions_checked'] for the versioning checkbox of single assets
- Implementation of the access statictics cache timeout based on the size of the dataset stored in table dailystat for a selection of objects (folder)
- Modifications in function rdbms_getmediastat in DB Connect in order to query the size of table dailystat and define the auto timeout for a selection of objects (folder)
- Removed the users time zone setting from frameset_main used by the digital clock in the user info popup layer
- Implementation of the users time zone setting in the API loader
- Implementation of the new local JS function serverClock in the Home screen in order to implement a central server time clock for the Home boxes 
- Implementation of the new digital_clock Home box
- Implementation of the new local JS function showAnalogClock in the analog_clock Home box
- Implementation of the new local JS function showDigitalClock in the digital_clock Home box
- Modifications of the analog_clock and new digital_clock Home box in order to set the server time based on the user time zone
- Modifications of the analog_clock and new digital_clock Home box in order to set the server date using a local JS function based on the user time zone instead of a static date provided by the server
- Modifications in servertime.class
- Design modifications in analog_clock and new digital_clock Home box
- Modifications in analog_clock and new digital_clock Home box in order to display the box title "server-time"
- Modifications in function insertimagetext2pdf in Media API in order to define and support the image gravity parameter for images
- Modifications in function insertimagetext2pdf in Media API in order to remove the conversion of the resize parameter of an image to an integer value
- Implementation of the new Report GeolocationOfAssets in the install directory
- Implementation of the new Report TopAssetsByFilesize in the install directory
- Design modifications in popup_message in order to align the message form
- Modifications in template engine in order the resize the iframe for the task list of an object
- Modifications in function rdbms_createtask in DB Connect in order to convert the planned effort always to an integer value by removing the not-empty condition
- Bug fix: Modifications in popup_upload_html in order to verify that the main configuration setting $mgmt_config['contentversions'] is set to true and remove the checkbox if the setting is not present
- Bug fix: JS Function hcms_bubbleSort in main.js did not verify _left and _right variables before the comparison of their values
- Bug fix: The local JS function creaetSQL of the Report Management module did not correctly remove the unchecked attribute object.objectpathname
- Bug fix: The Report Management module did not correctly check or uncheck the attribute object.objectpath
- Bug fix: Function insertimagetext2pdf in Media API did not support values of the resize parameter in the form of WxH and a percentage value
- Bug fix: The CSS class name for the Worfklow accept button was not correct in control_content_menu
- Bug fix: Function rdbms_createtask in DB Connect did not convert the planned and actual efforts to a float value
- Bug fix: Function rdbms_settask in DB Connect did not convert the planned and actual efforts to a float value
- Bug fix: The import form of the Import/Export module did not display the import profile if the publication name has been missing in the import data record in file import.dat 

Version 10.2.6
Release 03/2025
- Text modifications in log messages in the Main API
- Modifications in function is_hiddenfile in Main API in order to remove regular expressions and and implement faster comparison of the different cases of hidden files
- Modifications in function is_hiddenfile in Main API in order to only include the exact expression ".folder" as a hidden file
- Modifications in function is_hiddenfile in Main API in order to only include the exact expression ".htaccess" as a hidden file
- Modifications in function is_hiddenfile in Main API in order to only include the exact expression "web.config" as a hidden file
- Implementation of the new function is_hiddendir in Main API in order to verify if a directory needs to be hidden
- Modifications in explorer_objectlist in order to replace function is_hiddenfile by is_hiddendir for directories and is_hiddenfile for files
- Modifications in link_edit_explorer and text_link_explorer in order to replace function is_hiddenfile by is_hiddendir for directories and is_hiddenfile for files
- Modifications in function showcompexplorer in UI API in order to replace function is_hiddenfile by is_hiddendir for directories and is_hiddenfile for files
- Modifications in format_mime.inc in order to add the file extension m4v with mime-type "video/mp4"
- Modifications in function showmedia in UI API in order to add the video file extension .m4v as video source if the original video is an .m4v file
- Modifications in media_playerconfig in order to add the video file extension .m4v as video source if the original video is an .m4v file
- Modifications in function insertimagetext2pdf in Media API in order to verify the text and image input
- Bug fix: Function is_hiddenfile in Main API did not only exclude the .folder files and caused explorer_objectlist to hide folders containing one letter before "folder" as the folder name
- Bug fix: Function insertimagetext2pdf in Media API did not provide the correct file name if no image has been inserted into the PDF file

Version 10.2.7
Release 07/2025
- Modifications in function insertimagetext2pdf in Media API in order to support a single text or image
- Modifications in function publishobject in Main API in order to initialize the fallback object in case function getconnectedobject returned no object
- Modifications in function publishobject in Main API in order to recreate a missing object using function rdbms_createobject
- Bug fix: Function insertimagetext2pdf in Media API did not support an input text or image array with only one element

Version 10.2.8
Release 09/2025
- Modifications in createmediaobject and createmediaobjects in Main API in order to set the default language to English if the language setting is missing
- Modifications in function publishobject in Main API in order to verify the link DB entry is not empty before inserting the missing entry in the link index
- Design modifications in the Black design theme
- Implementation of the new CSS class hcmsWorkplaceControlSub for all design themes
- Improved toolbar transparency for the Transparent design theme 
- Modifications in control_content_menu and control_objectlist_menu in order to apply the new CSS class hcmsWorkplaceControlSub
- Modifications in control_content_menu in order to define a height as input for function gettoolbarstyle
- Modifications in function allowuserip in Security API in order to verify that the publication configuration file exists before reading the file
- Modifications in function userlogin in Security API in order to verify that the publication configuration file exists before reading the file
- Bug fix: The toolbar of control_content_menu did not use the full available height